<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ankursinha.in/blog - Tech</title><link href="http://ankursinha.in/" rel="alternate"></link><link href="http://ankursinha.in/feeds/categories/tech.atom.xml" rel="self"></link><id>http://ankursinha.in/</id><updated>2021-01-12T20:27:27+00:00</updated><subtitle>neuroscience/fedora/musings</subtitle><entry><title>Restarting regular Fedora India meetings</title><link href="http://ankursinha.in/2021/01/12/restarting-regular-fedora-india-meetings.html" rel="alternate"></link><published>2021-01-12T20:27:27+00:00</published><updated>2021-01-12T20:27:27+00:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2021-01-12:/2021/01/12/restarting-regular-fedora-india-meetings.html</id><summary type="html">&lt;p class="first last"&gt;We're restarting regular meetings for the Fedora India community. Come join us!&lt;/p&gt;
</summary><content type="html">&lt;center&gt;&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="#"&gt;&lt;img alt="Photo by Nikunj Gupta on Unsplash." class="img-responsive" src="http://ankursinha.in/images/20210112.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Photo by &lt;a class="reference external" href="https://unsplash.com/&amp;#64;mecyborg?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Nikunj Gupta&lt;/a&gt; on &lt;a class="reference external" href="https://unsplash.com/s/photos/india?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/center&gt;&lt;p&gt;The &lt;a class="reference external" href="https://fedoraproject.org/wiki/India"&gt;Fedora India community&lt;/a&gt; has always been quite an active group of people working in various Fedora teams and Special Interest Groups (SIGs).
At some point in recent years, people got busy with projects as we tend to do, and we stopped having regular community meetings.
This is unfortunate, since these meetings keep the community ticking, and provide a platform for new members to join in.&lt;/p&gt;
&lt;p&gt;Recently, there's been interest in revitalising the Fedora India community.
We've started to clean up the mailing list, and we'd like to restart regular meetings.
We had a short first one at the end of 2020 to kick things off.
You can read the logs &lt;a class="reference external" href="https://meetbot.fedoraproject.org/teams/fedora-india/fedora-india.2020-12-11-10.01.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The next meeting, the first of 2021, will happen soon.
In the meantime, this is a short notice to make the community aware of these on-goings.
Please subscribe to the &lt;a class="reference external" href="https://lists.fedoraproject.org/admin/lists/india.lists.fedoraproject.org/"&gt;mailing list&lt;/a&gt; to keep up with the community's activities.
If it has been a while since you were active there, please feel free to send in a short introduction so newcomers can get to know you.&lt;/p&gt;
&lt;p&gt;The usual chat channels are also active.
You can join #fedora-india on the Freenode IRC network &lt;a class="reference external" href="https://webchat.freenode.net/?channels=#fedora-neuro"&gt;here&lt;/a&gt;.
It is also bridged to the &lt;a class="reference external" href="https://t.me/fedoraindia"&gt;&amp;#64;fedoraindia Telegram super group&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We hope to see you in the channels!&lt;/p&gt;
</content><category term="Tech"></category><category term="Community"></category><category term="Fedora"></category><category term="IRC"></category><category term="Matrix"></category><category term="India"></category></entry><entry><title>A Vim script function to select signatures in Neomutt</title><link href="http://ankursinha.in/2020/03/15/a-vimscript-function-to-select-signatures-in-neomutt.html" rel="alternate"></link><published>2020-03-15T09:39:20+00:00</published><updated>2020-03-15T09:39:20+00:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2020-03-15:/2020/03/15/a-vimscript-function-to-select-signatures-in-neomutt.html</id><summary type="html">&lt;p class="first last"&gt;I was dabbling in &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Vim_(text_editor)#Vim_script"&gt;Vim script&lt;/a&gt; and wrote myself a simple function to
select signatures when composing e-mails in &lt;a class="reference external" href="https://neomutt.org/"&gt;Neomutt&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I've been using &lt;a class="reference external" href="https://neomutt.org/"&gt;Neomutt&lt;/a&gt; for a &lt;a class="reference external" href="http://ankursinha.in/2017/12/16/transitioning-to-neomutt-and-friends-for-e-mail.html"&gt;while now&lt;/a&gt;.
It allows me to stick to the &lt;a class="reference external" href="https://www.byobu.org/"&gt;Byobu&lt;/a&gt; based terminal workflow that I'm used to.
Most importantly, it lets me use &lt;a class="reference external" href="https://www.vim.org/"&gt;Vim&lt;/a&gt; to write my e-mails, so I don't need to
really learn another tool now.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://neomutt.org/"&gt;Neomutt&lt;/a&gt; can be configured to add a signature at the end of the e-mail, and one
can select a signature depending on various parameters, such as the senders
address using &lt;a class="reference external" href="https://neomutt.org/man/neomuttrc"&gt;hooks&lt;/a&gt;. However,
sometimes, one does need to select other signatures.&lt;/p&gt;
&lt;p&gt;The simple &lt;a class="reference external" href="https://www.vim.org/"&gt;Vim&lt;/a&gt; way, of course, is to simply delete the last few lines, and
then read in the new signature using &lt;code&gt;:r &amp;lt;filename&amp;gt;&lt;/code&gt;. This takes a few
more key strokes than one would like (well, than I like) so I thought I'd
dabble in &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Vim_(text_editor)#Vim_script"&gt;Vim script&lt;/a&gt; a bit and automate it. Here's what I've come up with:&lt;/p&gt;
&lt;pre class="code vim literal-block"&gt;
&lt;span class="c"&gt;&amp;quot; A function to load the right signature when I'm using neomutt&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; LoadSignature&lt;span class="p"&gt;(&lt;/span&gt;signature&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;    &amp;quot; Only work for mail files&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; this_file_type &lt;span class="p"&gt;=&lt;/span&gt; &amp;amp;&lt;span class="k"&gt;filetype&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; this_file_type &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mail&amp;quot;&lt;/span&gt;
        echo &lt;span class="s2"&gt;&amp;quot;This is not a mail file! Not running!&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;endif&lt;/span&gt;
&lt;span class="c"&gt;
    &amp;quot; Get the current signature's line&lt;/span&gt;
&lt;span class="c"&gt;    &amp;quot; Go to last line&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; saved_cursor_position &lt;span class="p"&gt;=&lt;/span&gt; getpos&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;    &amp;quot; Set cursor to file end and search backwards&lt;/span&gt;
    &lt;span class="k"&gt;call&lt;/span&gt; cursor&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;99999999999999999999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;l&lt;/span&gt;:sigstart &lt;span class="p"&gt;=&lt;/span&gt; search&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-- '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;    &amp;quot; Confirm that the line was found&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; sigstart &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
        echo &lt;span class="s2"&gt;&amp;quot;No signatures detected.&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;endif&lt;/span&gt;
&lt;span class="c"&gt;
    &amp;quot; Check if signature file exists&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;l&lt;/span&gt;:sigdir &lt;span class="p"&gt;=&lt;/span&gt; escape&lt;span class="p"&gt;(&lt;/span&gt;expand&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'$HOME'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;'\'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; . &lt;span class="s2"&gt;&amp;quot;/Sync/99_private/neomuttdir/&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;l&lt;/span&gt;:sigfile &lt;span class="p"&gt;=&lt;/span&gt; sigdir . &lt;span class="k"&gt;a&lt;/span&gt;:signature . &lt;span class="s2"&gt;&amp;quot;.sig&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; filereadable&lt;span class="p"&gt;(&lt;/span&gt;sigfile&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;        &amp;quot; delete the current lines after the &amp;quot;-- &amp;quot; line&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;l&lt;/span&gt;:delstart &lt;span class="p"&gt;=&lt;/span&gt; sigstart &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
        execute delstart . &lt;span class="s2"&gt;&amp;quot;,$d&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;        &amp;quot; Read the new signature&lt;/span&gt;
        execute sigstart . &lt;span class="s2"&gt;&amp;quot;read &amp;quot;&lt;/span&gt; . sigfile
&lt;span class="c"&gt;        &amp;quot; Return cursor to wherever it was&lt;/span&gt;
        &lt;span class="k"&gt;call&lt;/span&gt; setpos&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; saved_cursor_position&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        echo &lt;span class="s2"&gt;&amp;quot;File &amp;quot;&lt;/span&gt; . sigfile . &lt;span class="s2"&gt;&amp;quot; not found!&amp;quot;&lt;/span&gt;
        echo &lt;span class="s2"&gt;&amp;quot;Available signature files:\n&amp;quot;&lt;/span&gt; . globpath&lt;span class="p"&gt;(&lt;/span&gt;sigdir&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'*.sig'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;endif&lt;/span&gt;
&lt;span class="k"&gt;endfunction&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;So, adding this to &lt;code&gt;~/.vimrc&lt;/code&gt; would let one run &lt;code&gt;:call
LoadSignature('signature')&lt;/code&gt; in &lt;a class="reference external" href="https://www.vim.org/"&gt;Vim&lt;/a&gt; to select a signature. Each signature is a
different file with a &lt;code&gt;.sig&lt;/code&gt; file extension in the location given by
&lt;code&gt;sigdir&lt;/code&gt;, and the name of the file is the argument that needs to be given
to the function. If the signature file cannot be found, it'll list available ones.&lt;/p&gt;
&lt;p&gt;It's quite simple really, and I'm sure it can be made better, but it works.&lt;/p&gt;
</content><category term="Tech"></category><category term="Planet"></category><category term="Vim"></category><category term="Neomutt"></category><category term="Fedora"></category></entry><entry><title>Useful DuckDuckGo bangs</title><link href="http://ankursinha.in/2019/01/27/useful-duckduckgo-bangs.html" rel="alternate"></link><published>2019-01-27T15:11:35+00:00</published><updated>2019-01-27T15:11:35+00:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2019-01-27:/2019/01/27/useful-duckduckgo-bangs.html</id><summary type="html">&lt;p class="first last"&gt;I switched to &lt;a class="reference external" href="https://duckduckgo.com"&gt;DuckDuckGo&lt;/a&gt; some time ago, and I've not had to look
back. In this post, I document some of the &lt;a class="reference external" href="https://duckduckgo.com/bang"&gt;&amp;quot;bangs&amp;quot;&lt;/a&gt; I find useful.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;If you haven't moved to &lt;a class="reference external" href="https://duckduckgo.com"&gt;DuckDuckGo&lt;/a&gt; yet, &lt;a class="reference external" href="https://www.quora.com/Why-should-I-use-DuckDuckGo-instead-of-Google/answer/Gabriel-Weinberg?share=9560e87d&amp;amp;srid=pJKz"&gt;here's&lt;/a&gt;
why you should consider it. I moved to it a while back, and I've not looked
back since. In this post, I document some of the &lt;a class="reference external" href="https://duckduckgo.com/bang"&gt;&amp;quot;bangs&amp;quot;&lt;/a&gt; that I use which make &lt;a class="reference external" href="https://duckduckgo.com"&gt;DuckDuckGo&lt;/a&gt; even nicer
to use!&lt;/p&gt;
&lt;p&gt;A &lt;a class="reference external" href="https://duckduckgo.com/bang"&gt;&amp;quot;bang&amp;quot;&lt;/a&gt; is a search shortcut, like ones you
can set up in Firefox and Chrome. Instead of navigating to the website to use
their search box, bangs allow you to search via &lt;a class="reference external" href="https://duckduckgo.com"&gt;DuckDuckGo&lt;/a&gt;, and it redirects
you to the search results on the website. So, apart from the obvious privacy
advantage: &lt;a class="reference external" href="https://duckduckgo.com"&gt;DuckDuckGo&lt;/a&gt; uses the website search, not you, it also means you can
search a plethora of websites right from &lt;a class="reference external" href="https://duckduckgo.com"&gt;DuckDuckGo&lt;/a&gt;. If you are used to using
the Firefox search bar, for example, this becomes really handy.&lt;/p&gt;
&lt;div class="section" id="general-bangs"&gt;
&lt;h2&gt;General bangs&lt;/h2&gt;
&lt;img alt="GIF showing the use of DuckDuckGo bangs to search Wikipedia." class="img-responsive" src="http://ankursinha.in/images/20190127-duckduckgo-wikipedia.gif" style="width: 60%;" /&gt;
&lt;p&gt;I use a number of general bangs:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;!bang&lt;/code&gt; to search for bangs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!w&lt;/code&gt; to search Wikipedia&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!g&lt;/code&gt; to use Google when I must.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!gmaps&lt;/code&gt; to search Google Maps.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!openstreetmap&lt;/code&gt; to search Open Street Maps.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!youtube&lt;/code&gt; to search Youtube.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!bbcw&lt;/code&gt; to search BBC weather.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!goodreads&lt;/code&gt; to search Goodreads.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!ox&lt;/code&gt; to search the Oxford dictionary.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!sauk&lt;/code&gt; to search Amazon UK (smile.amazon.uk).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!github&lt;/code&gt; to search Github.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!ctan&lt;/code&gt; to search CTAN.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!pypi&lt;/code&gt; to search PyPi.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!man&lt;/code&gt; to search man pages.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A few academic ones I use often are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;!gsc&lt;/code&gt; to search Google Scholar.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!arxiv&lt;/code&gt; to search ArXiv.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!pubmed&lt;/code&gt; to search PubMed&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="fedora-related-bangs"&gt;
&lt;h2&gt;Fedora related bangs&lt;/h2&gt;
&lt;p&gt;Now, here's where bangs get even more useful! Fedora related bangs!  You can
use &lt;code&gt;!bang Fedora&lt;/code&gt; to see them all, but I list the ones that are
available now here for you (and me):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;!fedora&lt;/code&gt; or &lt;code&gt;!fedorawiki&lt;/code&gt; to search the wiki.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!kojipkg&lt;/code&gt; to search Koji for a package.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!fedpack&lt;/code&gt; to search the Fedora packages app.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!fedoramagazine&lt;/code&gt; to search the Fedora Magazine.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!askfedora&lt;/code&gt; to search Ask Fedora.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!copr&lt;/code&gt; to search COPR.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!rhbugs&lt;/code&gt; or &lt;code&gt;!rhbz&lt;/code&gt; to search Redhat Bugzilla.&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="GIF showing the use of DuckDuckGo bangs to search the Fedora packages application." class="img-responsive" src="http://ankursinha.in/images/20190127-duckduckgo-fedora.gif" style="width: 60%;" /&gt;
&lt;p&gt;If you do use the quick search boxes that most browsers now provide, this makes
things so much easier. You needn't even use the drop down to select a search.
You just keep using &lt;a class="reference external" href="https://duckduckgo.com"&gt;DuckDuckGo&lt;/a&gt;. I use &lt;a class="reference external" href="https://www.qutebrowser.org/"&gt;Qutebrowser&lt;/a&gt; for example, where I use the command window
to do all my navigating. This is how quick it is (Capital O to open a new-tab,
and then &lt;code&gt;!fedpack nest&lt;/code&gt; to search the Fedora packages application for
NEST, since &lt;a class="reference external" href="https://duckduckgo.com"&gt;DuckDuckGo&lt;/a&gt; is set as my default search service):&lt;/p&gt;
&lt;img alt="GIF showing the use of DuckDuckGo bangs from Qutebrowser." class="img-responsive" src="http://ankursinha.in/images/20190127-duckduckgo-qutebrowser.gif" style="width: 60%;" /&gt;
&lt;p&gt;So, there are lots of bangs. Use &lt;a class="reference external" href="https://duckduckgo.com"&gt;DuckDuckGo&lt;/a&gt;, use bangs, profit!
Happy ducking!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="addendum"&gt;
&lt;h2&gt;Addendum&lt;/h2&gt;
&lt;p&gt;There is, of course, a lmddgtfy service. Try: &lt;code&gt;!lmddgtfy lmddgtfy&lt;/code&gt;.
&lt;a class="reference external" href="https://duckduckgo.com"&gt;DuckDuckGo&lt;/a&gt; also provides an &lt;a class="reference external" href="https://play.google.com/store/apps/details?id=com.duckduckgo.mobile.android"&gt;App for Android&lt;/a&gt;,
and a widget that helps you search without having to open the browser first.&lt;/p&gt;
&lt;p&gt;Bangs can be &lt;a class="reference external" href="https://duckduckgo.com/newbang"&gt;suggested&lt;/a&gt;, so please do
suggest new bangs for other services that you use frequently.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="DuckDuckGo"></category><category term="Searching"></category><category term="Fedora"></category></entry><entry><title>New maintainers needed for these packages</title><link href="http://ankursinha.in/2019/01/24/new-maintainers-needed-for-these-packages.html" rel="alternate"></link><published>2019-01-24T11:20:00+00:00</published><updated>2019-01-24T11:20:00+00:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2019-01-24:/2019/01/24/new-maintainers-needed-for-these-packages.html</id><summary type="html">&lt;p class="first last"&gt;I am looking to pass on Fedora packages that I no longer use to new maintainers.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I've recently realised that I am now busy enough to need to prioritise what
tasks I undertake. Apart from my research work (PhD and related activities),
I'd like to focus my time on &lt;a class="reference external" href="https://neuro.fedoraproject.org"&gt;NeuroFedora&lt;/a&gt;.
Therefore, I'm giving up a lot of the packages that I've accrued over the years
but no longer use. If any of these interest you, please take them from me.
Otherwise, I will orphan them at the end of the month.&lt;/p&gt;
&lt;p&gt;I am quite happy to mentor contributors who are not yet packagers to help them
learn the necessary skills. You can become a package maintainer by helping to
co-maintain packages, as documented &lt;a class="reference external" href="https://fedoraproject.org/wiki/How_to_get_sponsored_into_the_packager_group#Become_a_co-maintainer"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have already &lt;a class="reference external" href="https://lists.fedoraproject.org/archives/list/devel&amp;#64;lists.fedoraproject.org/thread/VDK46C23DKBCOHYO3EOCSLRJF2UUPDFK/"&gt;e-mailed the devel mailing list&lt;/a&gt;,
but also post here to ensure sufficient visibility of the note.&lt;/p&gt;
&lt;div class="section" id="orphaned-inactive-upstreams-or-retired-due-to-broken-deps"&gt;
&lt;h2&gt;Orphaned (inactive upstreams or retired due to broken deps)&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;albumart: was retired, now orphaned&lt;/li&gt;
&lt;li&gt;gtg: inactive upstream&lt;/li&gt;
&lt;li&gt;labyrinth: inactive upstream&lt;/li&gt;
&lt;li&gt;memaker: inactive upstream&lt;/li&gt;
&lt;li&gt;pyode: dead package, py3ode is available but needs packaging&lt;/li&gt;
&lt;li&gt;python-inlinestyler: retired, now orphaned&lt;/li&gt;
&lt;li&gt;scout: inactive upstream&lt;/li&gt;
&lt;li&gt;toothchart: inactive upstream&lt;/li&gt;
&lt;li&gt;xword: inactive upstream&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="looking-for-new-co-maintainers"&gt;
&lt;h2&gt;Looking for new (co)-maintainers:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;axel: Light command line download accelerator&lt;/li&gt;
&lt;li&gt;bibus: The bibus rpms&lt;/li&gt;
&lt;li&gt;blobby: The blobby rpms&lt;/li&gt;
&lt;li&gt;dcm4che-test: The dcm4che-test rpms&lt;/li&gt;
&lt;li&gt;gitg: The gitg rpms&lt;/li&gt;
&lt;li&gt;gnote: A note taking application for Gnome&lt;/li&gt;
&lt;li&gt;gnumed: The GNUmed electronic medical record client&lt;/li&gt;
&lt;li&gt;gtg: Getting Things GNOME!&lt;/li&gt;
&lt;li&gt;hamster-time-tracker: A GTK3 time tracker&lt;/li&gt;
&lt;li&gt;jigdo: The jigdo rpms&lt;/li&gt;
&lt;li&gt;kapow: The kapow rpms&lt;/li&gt;
&lt;li&gt;libgexiv2 A GObject wrapper around the Exiv2 photo metadata library&lt;/li&gt;
&lt;li&gt;lifeograph: The lifeograph rpms&lt;/li&gt;
&lt;li&gt;lingot: LINGOT Is Not a Guitar-Only Tuner&lt;/li&gt;
&lt;li&gt;mrpt: The mrpt rpms&lt;/li&gt;
&lt;li&gt;nautilus-pastebin: The nautilus-pastebin rpms&lt;/li&gt;
&lt;li&gt;nut-nutrition: The nut-nutrition rpms&lt;/li&gt;
&lt;li&gt;openarena: The openarena rpms&lt;/li&gt;
&lt;li&gt;openmolar: The openmolar rpms&lt;/li&gt;
&lt;li&gt;OSGi-bundle-ant-task: The OSGi-bundle-ant-task rpms&lt;/li&gt;
&lt;li&gt;Panini: Visual tool for creating perspective views from panoramic and wide angle photographs&lt;/li&gt;
&lt;li&gt;prepaid-manager-applet: The prepaid-manager-applet rpms&lt;/li&gt;
&lt;li&gt;pystache: The pystache rpms&lt;/li&gt;
&lt;li&gt;python-baker: The python-baker rpms&lt;/li&gt;
&lt;li&gt;python-django-post_office: The python-django-post_office rpms&lt;/li&gt;
&lt;li&gt;python-django-stopforumspam&lt;/li&gt;
&lt;li&gt;python-uri-templates: The python-uri-templates rpms&lt;/li&gt;
&lt;li&gt;rssdler: RSS Broadcatcher for podcasts, videocasts, and torrent feeds&lt;/li&gt;
&lt;li&gt;tagtool: The tagtool rpms&lt;/li&gt;
&lt;li&gt;trash-cli: Command line interface to the freedesktop.org trashcan&lt;/li&gt;
&lt;li&gt;xmedcon: The xmedcon rpms&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="Fedora"></category><category term="RPM"></category><category term="Package maintenance"></category></entry><entry><title>Using the Connfa open source conference management software set: the CMS</title><link href="http://ankursinha.in/2018/06/22/using-the-connfa-open-source-conference-management-software-set-the-cms.html" rel="alternate"></link><published>2018-06-22T23:36:23+01:00</published><updated>2018-06-22T23:36:23+01:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2018-06-22:/2018/06/22/using-the-connfa-open-source-conference-management-software-set-the-cms.html</id><summary type="html">&lt;p class="first last"&gt;The &lt;a class="reference external" href="http://connfa.com/"&gt;Connfa&lt;/a&gt; open source suite looks like a great set of tools
for conference management. It consists of a web application, a
central CMS integration server, and mobile applications for both
Android and iOS. I was looking at how one could use the mobile
applications. The mobile applications get their data from the
integration server, which provides an API. So, I looked at how to set
it up and document my findings in this post.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;The &lt;a class="reference external" href="http://connfa.com/"&gt;Connfa&lt;/a&gt; open source suite looks like a great set of tools for conference
management. It consists of a web application, a central CMS integration server,
and mobile applications for both Android and iOS. I was looking at how one
could use the mobile applications. The mobile applications get their data from
the integration server, which provides an API. So, I looked at how to set it up
and document my findings in this post.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="http://connfa.com/"&gt;Connfa&lt;/a&gt; CMS server is a php application that uses a MySQL database.  To
begin with, the documentation here is quite good:
&lt;a class="reference external" href="http://connfa.com/documentation/"&gt;http://connfa.com/documentation/&lt;/a&gt;.  However, as is usually seen, it takes a
few tweaks to deploy it.  These steps are therefore, Fedora 28 specific.&lt;/p&gt;
&lt;p&gt;On Fedora, one needs to use php71 from remi's repository:
&lt;a class="reference external" href="https://blog.remirepo.net/pages/Config-en"&gt;https://blog.remirepo.net/pages/Config-en&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo dnf install php71 composer php71-php-mysqlnd mariadb httpd mariadb-server php71-php-xml
sudo systemctl start php71-php-fpm
sudo systemctl start httpd
sudo systemctl start mysqld
module load php71
php --version
&lt;/pre&gt;
&lt;p&gt;This is because the tool doesn't work with the latest version of php that's in
Fedora 28. The tool also has a bug or two, so I used this fork that appears to
have a bugfix:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/d-i-t-a/connfa-integration-server/tree/develop"&gt;https://github.com/d-i-t-a/connfa-integration-server/tree/develop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then, one must set up &lt;a class="reference external" href="https://mariadb.org/"&gt;Mariadb&lt;/a&gt; as explained here:
&lt;a class="reference external" href="https://fedoraproject.org/wiki/MariaDB"&gt;https://fedoraproject.org/wiki/MariaDB&lt;/a&gt;. Note that &lt;a class="reference external" href="https://mariadb.org/"&gt;Mariadb&lt;/a&gt; is an Open source
MySQL implementation.&lt;/p&gt;
&lt;p&gt;One must also create a database as explained in the wiki page, and a user that
connfa can use, which must match the values in the &lt;code&gt;env&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;On Fedora, I enabled the &lt;code&gt;UserDir&lt;/code&gt; httpd extension, and placed the
connfa-integration-server in &lt;code&gt;~/public_html/&lt;/code&gt;, since I didn't want to
work as root in &lt;code&gt;/var/www/html&lt;/code&gt; all the time. &lt;code&gt;httpd&lt;/code&gt; will needs to
be started and enabled:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo systemctl start httpd&lt;span class="p"&gt;;&lt;/span&gt; sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; httpd
&lt;/pre&gt;
&lt;p&gt;On Fedora, Selinux must be asked to allow access to UserDirs:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo setsebool -P httpd_read_user_content &lt;span class="m"&gt;1&lt;/span&gt;
sudo setsebool -P httpd_unified &lt;span class="m"&gt;1&lt;/span&gt;
sudo setsebool -P httpd_can_network_connect_db &lt;span class="m"&gt;1&lt;/span&gt;
sudo setsebool -P httpd_can_network_connect &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;One can follow the steps from here next:
&lt;a class="reference external" href="http://connfa.com/integration-server/server-requirements"&gt;http://connfa.com/integration-server/server-requirements&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also run &lt;code&gt;composer update&lt;/code&gt; to update the php bits.&lt;/p&gt;
&lt;p&gt;Then, update the env file and so on as explained here:
&lt;a class="reference external" href="http://connfa.com/integration-server/install/"&gt;http://connfa.com/integration-server/install/&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
php artisan key:generate &lt;span class="c1"&gt;#sets the keys in the env file
&lt;/span&gt;php artisan password:change --name&lt;span class="o"&gt;=&lt;/span&gt;admin --password&lt;span class="o"&gt;=&lt;/span&gt;connfa18
&lt;/pre&gt;
&lt;p&gt;The site should be accessible at &lt;a class="reference external" href="http://localhost"&gt;http://localhost&lt;/a&gt;/~&amp;lt;username&amp;gt;/public/login/
The username is &lt;code&gt;admin&amp;#64;test.com&lt;/code&gt; here.&lt;/p&gt;
&lt;p&gt;The API is accessible at:
&lt;a class="reference external" href="http://localhost"&gt;http://localhost&lt;/a&gt;/~&amp;lt;username&amp;gt;/public/api/v2/cns-2018/checkUpdates&lt;/p&gt;
&lt;p&gt;I did have quite a few issues with permissions, but then I'm neither a web
developer nor a server administrator, so my skills in the department are rather
limited.&lt;/p&gt;
&lt;p&gt;I'll look at the Android application next, and hopefully, I'll be able to sync
it up with the CMS server.&lt;/p&gt;
</content><category term="Tech"></category><category term="Community"></category><category term="Conference"></category><category term="Android"></category><category term="Fedora"></category></entry><entry><title>Next round of Fedora classroom sessions: call for instructors</title><link href="http://ankursinha.in/2018/06/07/next-round-of-fedora-classroom-sessions-call-for-instructors.html" rel="alternate"></link><published>2018-06-07T10:50:39+01:00</published><updated>2018-06-07T10:50:39+01:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2018-06-07:/2018/06/07/next-round-of-fedora-classroom-sessions-call-for-instructors.html</id><summary type="html">&lt;p class="first last"&gt;We are looking for instructors for the next round of &lt;a class="reference external" href="https://fedoraproject.org/wiki/Classroom"&gt;Fedora
classroom&lt;/a&gt; sessions.&lt;/p&gt;
</summary><content type="html">&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20180607-teach.jpg"&gt;&lt;img alt="Teach a Fedora classroom session!" class="text-center img-responsive pagination-centered" src="http://ankursinha.in/images/20180607-teach.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;&lt;a class="reference external" href="https://pixabay.com/en/teach-word-scrabble-letters-wooden-1820041/"&gt;Taken from pixabay.com (under a CC0 license)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We had quite a good turnout for the first round of &lt;a class="reference external" href="https://fedoraproject.org/wiki/Classroom"&gt;Fedora classroom&lt;/a&gt;
sessions, so we're now trying to plan the second round. We need you to instruct
a session, and so, pass on the knowledge you've accrued over the years to
others in the community.  A lot of the folks that attend these sessions are
newbies who are still only testing the waters and haven't contributed yet, and
it makes it a lot easier for them to learn some skills from a contributor.&lt;/p&gt;
&lt;p&gt;Please consider teaching a session. If you'd like to, please get in touch with
me on &lt;a class="reference external" href="https://webchat.freenode.net/?channels=#fedora-classroom"&gt;#fedora-classroom on Freenode&lt;/a&gt; or via e-mail at
my fedoraproject.org address. You can also contact the team on our &lt;a class="reference external" href="https://lists.fedoraproject.org/archives/list/classroom&amp;#64;lists.fedoraproject.org/"&gt;mailing
list&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy teaching!&lt;/p&gt;
</content><category term="Tech"></category><category term="Fedora"></category></entry><entry><title>Building TeX Live from source</title><link href="http://ankursinha.in/2018/03/25/building-tex-live-from-source.html" rel="alternate"></link><published>2018-03-25T18:15:05+01:00</published><updated>2018-03-25T18:15:05+01:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2018-03-25:/2018/03/25/building-tex-live-from-source.html</id><summary type="html">&lt;p class="first last"&gt;I thought it'd be fun to try and build &lt;a class="reference external" href="https://www.tug.org/texlive/"&gt;TeX Live&lt;/a&gt; from sources. So,
I spent a day trying to do it. Here's how it went.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Between all the &lt;a class="reference external" href="https://ctan.org/pkg/latex"&gt;LaTeX&lt;/a&gt; vs &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Microsoft_Word"&gt;Word&lt;/a&gt; discussions that I frequently become a part of,
is the beauty of how it all works. They're both marvels, even if they each take
turns to exasperate users. There are pros and cons of each, and each has their
learning curves.&lt;/p&gt;
&lt;p&gt;I use &lt;a class="reference external" href="https://ctan.org/pkg/latex"&gt;LaTeX&lt;/a&gt; for various reasons. To start with, it takes me 5 minutes to write
a document in &lt;a class="reference external" href="https://ctan.org/pkg/latex"&gt;LaTeX&lt;/a&gt; and 30 to write the same in &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Microsoft_Word"&gt;Word&lt;/a&gt;, but it can be the
opposite for another user. May be I've gotten a system set up now where writing
in &lt;a class="reference external" href="https://ctan.org/pkg/latex"&gt;LaTeX&lt;/a&gt; isn't inefficient any more. This is me using &lt;a class="reference external" href="https://www.vim.org"&gt;Vim&lt;/a&gt;, with &lt;a class="reference external" href="https://github.com/sanjayankur31/vimfiles"&gt;plugins&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Of course, the fact that it is &lt;a class="reference external" href="https://tug.org/texlive/copying.html"&gt;Free software&lt;/a&gt; is very important to me. It may not
mean much to larger universities that have Microsoft services, but it does make
a difference to universities that don't have that kind of funding. When I'd
done my undergraduate degree back in India, for example, we didn't have a
university wide Microsoft license. I used &lt;a class="reference external" href="https://fedoraproject.org"&gt;Fedora&lt;/a&gt; throughout, and having &lt;a class="reference external" href="https://www.tug.org/texlive/"&gt;TeX
Live&lt;/a&gt; (and other free software) available to me was quite something. We
must remember to think of the way events and actions impact society, or that's
my point of view, anyway.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fedoraproject.org"&gt;Fedora&lt;/a&gt; provides &lt;a class="reference external" href="https://www.tug.org/texlive/"&gt;TeX Live&lt;/a&gt; in its repos. It takes quite an effort to build it
since it's a whole bunch of packages that must be built. There's a bit of
scripting required to even &lt;a class="reference external" href="https://src.fedoraproject.org/rpms/texlive/tree/master"&gt;build the spec file&lt;/a&gt;. So, it's simply:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo dnf install texlive
&lt;/pre&gt;
&lt;p&gt;The advantage of the rpm packaging is that subsequent packages can also be
installed by specifying the &lt;code&gt;sty&lt;/code&gt; files. For the &lt;code&gt;lineno&lt;/code&gt; package,
for example, one can use:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo dnf install &lt;span class="s1"&gt;'tex(lineno.sty)'&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Not everyone must build &lt;a class="reference external" href="https://www.tug.org/texlive/"&gt;TeX Live&lt;/a&gt; from source, upstream provides binaries for
all platforms, and a &lt;a class="reference external" href="https://www.tug.org/texlive/acquire-netinstall.html"&gt;convenient installer&lt;/a&gt;.&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20180325-texlive.png"&gt;&lt;img alt="TeX Live installer" class="text-center img-responsive pagination-centered" src="http://ankursinha.in/images/20180325-texlive.png" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p&gt;As it says, the whole collection is quite large, about 5GB.&lt;/p&gt;
&lt;div class="section" id="building-from-source"&gt;
&lt;h2&gt;Building from source&lt;/h2&gt;
&lt;p&gt;I followed the &lt;a class="reference external" href="https://www.tug.org/texlive/doc/tlbuild.html"&gt;documentation&lt;/a&gt; that's provided for this
already. Luckily, it uses &lt;a class="reference external" href="http://www.gnu.org/software/automake/manual/html_node/Autotools-Introduction.html#Autotools-Introduction"&gt;Autotools&lt;/a&gt;, and I've quite a bit of experience with
them. &lt;a class="reference external" href="https://fedoraproject.org"&gt;Fedora&lt;/a&gt; provides the 2016 release, so I played with the 2017 release
here. I also referred to the &lt;a class="reference external" href="https://fedoraproject.org"&gt;Fedora&lt;/a&gt; spec files, which made life so much easier:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://src.fedoraproject.org/rpms/texlive/blob/master/f/texlive.spec"&gt;https://src.fedoraproject.org/rpms/texlive/blob/master/f/texlive.spec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://src.fedoraproject.org/rpms/texlive-base/blob/master/f/texlive-base.spec"&gt;https://src.fedoraproject.org/rpms/texlive-base/blob/master/f/texlive-base.spec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The build turned out to be quite simple. Fetch the sources, and then run
&lt;code&gt;configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install&lt;/code&gt;, and that's quite it for the
base packages.&lt;/p&gt;
&lt;p&gt;I ran it on my headless &lt;a class="reference external" href="https://getfedora.org/en/server/"&gt;Fedora Server&lt;/a&gt;
system, and it pretty much went off without a hitch. I now have a base &lt;a class="reference external" href="https://www.tug.org/texlive/"&gt;TeX
Live&lt;/a&gt; distribution there in &lt;code&gt;/usr/local/texmf-dist&lt;/code&gt;. Note, that this
isn't sufficient. It only installs the basic bits of &lt;a class="reference external" href="https://www.tug.org/texlive/"&gt;TeX Live&lt;/a&gt;, not even the
&lt;a class="reference external" href="https://ctan.org/pkg/latex"&gt;LaTeX&lt;/a&gt; macro package. So, while it's easy and somewhat fun to tinker with on a
day off, I wouldn't suggest it for any end-users. On my work machines, the two
&lt;a class="reference external" href="https://getfedora.org/en/workstation/"&gt;Fedora Workstation&lt;/a&gt; installs, I'm
going to stick to the &lt;a class="reference external" href="https://fedoraproject.org"&gt;Fedora&lt;/a&gt; packages, which are more than sufficient! (If
you're a &lt;a class="reference external" href="https://fedoraproject.org"&gt;Fedora&lt;/a&gt; user, please shower the &lt;a class="reference external" href="https://fedoraproject.org"&gt;Fedora&lt;/a&gt; &lt;a class="reference external" href="https://www.tug.org/texlive/"&gt;TeX Live&lt;/a&gt; maintainers with
&lt;a class="reference external" href="http://threebean.org/blog/karma-cookies/"&gt;cookies&lt;/a&gt;! Get on &lt;a class="reference external" href="https://webchat.freenode.net/?channels=#fedora-devel"&gt;#fedora-devel&lt;/a&gt; on Freenode, and go
&lt;code&gt;&amp;lt;FAS username/Linked IRC nick&amp;gt;++&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="TeX"></category><category term="Fedora"></category></entry><entry><title>Fedora Join is now on Telegram and Matrix</title><link href="http://ankursinha.in/2018/03/24/fedora-join-is-now-on-telegram-and-matrix.html" rel="alternate"></link><published>2018-03-24T12:07:07+00:00</published><updated>2018-03-24T12:07:07+00:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2018-03-24:/2018/03/24/fedora-join-is-now-on-telegram-and-matrix.html</id><summary type="html">&lt;p class="first last"&gt;We set up new communication channels for &lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/Join?rd=Fedora_Join_SIG"&gt;Fedora Join&lt;/a&gt;. Come speak
to us!&lt;/p&gt;
</summary><content type="html">&lt;p&gt;As the subject says, we're now on &lt;a class="reference external" href="https://telegram.org/"&gt;Telegram&lt;/a&gt; and on &lt;a class="reference external" href="https://matrix.org/blog/home/"&gt;Matrix&lt;/a&gt; now! If you'd like
to contribute to Fedora, come speak to us! Spread the word!&lt;/p&gt;
&lt;p&gt;We're now on:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;IRC: &lt;a class="reference external" href="https://webchat.freenode.net/?channels=#fedora-join"&gt;#fedora-join&lt;/a&gt; on Freenode&lt;/li&gt;
&lt;li&gt;Telegram: &lt;a class="reference external" href="https://t.me/joinfedora"&gt;Fedora Join SIG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Matrix: &lt;a class="reference external" href="https://riot.im/app/#/room/%23freenode_%23fedora-join:matrix.org"&gt;#fedora-join&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mailing list: &lt;a class="reference external" href="https://lists.fedoraproject.org/admin/lists/fedora-join&amp;#64;lists.fedoraproject.org/"&gt;Fedora Join&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://telegram.org/"&gt;Telegram&lt;/a&gt; and &lt;a class="reference external" href="https://matrix.org/blog/home/"&gt;Matrix&lt;/a&gt; channel are both bridged to the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Freenode"&gt;IRC&lt;/a&gt; channel. So, one
can monitor any of them and keep in touch.&lt;/p&gt;
&lt;p&gt;We're already seeing more people in the channels, and that's really great to
see!&lt;/p&gt;
</content><category term="Tech"></category><category term="Fedora"></category><category term="IRC"></category><category term="Matrix"></category><category term="Telegram"></category></entry><entry><title>Managing tasks, time, and making sure one takes a break: Integrating Taskwarrior, Timewarrior, and Gnome Pomodoro</title><link href="http://ankursinha.in/2017/12/25/managing-tasks-time-and-making-sure-one-takes-a-break-integrating-taskwarrior-timewarrior-and-gnome-pomodoro.html" rel="alternate"></link><published>2017-12-25T01:16:02+00:00</published><updated>2017-12-25T01:16:02+00:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2017-12-25:/2017/12/25/managing-tasks-time-and-making-sure-one-takes-a-break-integrating-taskwarrior-timewarrior-and-gnome-pomodoro.html</id><summary type="html">&lt;p class="first last"&gt;As the amount of work increases, it becomes ever so more important to
manage time and work in an efficient way. So, there's &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt;
for managing tasks, &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; for tracking them, and &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome
Pomodoro&lt;/a&gt; for making sure one takes regular breaks and doesn't let
the long hours affect their health in a bad way.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;With the new year, come resolutions. On many a list will there be a
determination to do better in the coming year, to be more organised, more
efficient, more productive.&lt;/p&gt;
&lt;p&gt;I'm quite organised myself. I have lists, calendars, reminders, budgets, and
all of that. Being a FOSS person, my first thought, inevitably, is to see if
there's a piece of software that would aid me.&lt;/p&gt;
&lt;p&gt;This post documents how one can get &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt;, &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt;, and &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome
Pomodoro&lt;/a&gt; to work together to manage tasks, track them, and break those long
hours into smaller bits with regular breaks.&lt;/p&gt;
&lt;div class="section" id="taskwarrior-helps-manage-tasks"&gt;
&lt;h2&gt;Taskwarrior helps manage tasks&lt;/h2&gt;
&lt;p&gt;For managing tasks, there's the rather excellent &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt;. It's command
line, and there are various user interfaces that have been developed for it
too. (&lt;a class="reference external" href="https://tasktools.org/projects/vit.html"&gt;Vit&lt;/a&gt; is one that provides a terminal interface with &lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt; like
keybindings, and there's a &lt;a class="reference external" href="https://github.com/blindFS/vim-taskwarrior"&gt;Vim plugin&lt;/a&gt; too.) One can even set up a
&lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; server to sync the data between different machines. There are a
few hosted services that give free &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; server accounts too. Perhaps
the best bit, is excellent documentation.  &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; really does make it
easy to &lt;a class="reference external" href="https://taskwarrior.org/news/news.20150627.html"&gt;get things done&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="timewarrior-tracks-time-spent-on-tasks"&gt;
&lt;h2&gt;Timewarrior tracks time spent on tasks&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; is not meant to be a time tracker, and upstream says so quite
plainly. In fact, upstream went ahead and wrote &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; for that purpose
entirely. Like &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt;, &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; is also a command line tool.&lt;/p&gt;
&lt;p&gt;Integrating the two is quite easy, using a &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; hook, as &lt;a class="reference external" href="https://taskwarrior.org/docs/timewarrior/taskwarrior.html"&gt;documented
here&lt;/a&gt;. Each time
a task is started, or stopped in &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt;, the hook calls &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; to
start or stop tracking the task too.&lt;/p&gt;
&lt;p&gt;Note: to ensure that this hook is run before the &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome Pomodoro&lt;/a&gt; hook that we
set up in the next section, please save the hook file as
&lt;code&gt;~/.task/hooks/on-modify.00-timewarrior&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="gnome-pomodoro-reminds-us-to-take-regular-breaks"&gt;
&lt;h2&gt;Gnome Pomodoro reminds us to take regular breaks&lt;/h2&gt;
&lt;p&gt;So, one can manage tasks, and track the time spent working on them, and that's
great. It was sufficient for me for quite a while, before I realised that I was
spending too much time at my desk. What made it worse was the realisation that
for us white collar professionals, a majority of our lives will be spent at a
desk typing away on a computer. There's enough research to show that spending
all those long hours working in a seated position is bad for one's health.&lt;/p&gt;
&lt;p&gt;So, I went looking for the changes I should make to my work regime, and ran
into the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Pomodoro_Technique"&gt;Pomodoro&lt;/a&gt; technique. The idea is to take short breaks at regular
intervals. One can use these to get up and walk around a bit, get them 10,000
steps! There are plenty of tools that implement the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Pomodoro_Technique"&gt;Pomodoro&lt;/a&gt; technique. A
simple timer works too. The one I settled on is &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome Pomodoro&lt;/a&gt; which
integrates really well with Gnome Shell. Every 25 minutes, it'll remind the
user to take a 5 minute break.&lt;/p&gt;
&lt;p&gt;Now, let us integrate &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome Pomodoro&lt;/a&gt; with both &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; and &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;When a task is started using &lt;code&gt;task &amp;lt;filter&amp;gt; start&lt;/code&gt;, &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt;
already begins to track it using the hook, and a Pomodoro should also be
started.&lt;/li&gt;
&lt;li&gt;When a Pomodoro is over and &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome Pomodoro&lt;/a&gt; notifies of a break,
&lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; should be paused too.&lt;/li&gt;
&lt;li&gt;When the break is over, and another Pomodoro starts, &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; should
resume tracking the task.&lt;/li&gt;
&lt;li&gt;When a task is stopped, &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; will stop tracking it via the hook
already, and the Pomodoro should be stopped as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a very simple set up. A task must be started using &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; here,
and each time &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome Pomodoro&lt;/a&gt; pauses and resumes from breaks, the same task
will be resumed unless it was stopped and another started.&lt;/p&gt;
&lt;p&gt;It turned out to be quite easy because of how well these three tools have been
designed. Here's a &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; hook for &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome Pomodoro&lt;/a&gt; similar to the one
for &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="ch"&gt;#!/usr/bin/env python2&lt;/span&gt;
&lt;span class="c1"&gt;# API is here: https://taskwarrior.org/docs/hooks.html&lt;/span&gt;
&lt;span class="c1"&gt;# To be saved at ~/.task/hooks/on-modify.01-gnome-pomodoro to ensure it is&lt;/span&gt;
&lt;span class="c1"&gt;# run after the timewarrior hook, which should be saved as&lt;/span&gt;
&lt;span class="c1"&gt;# ~/.task/hooks/on-modify.00-timewarrior&lt;/span&gt;
&lt;span class="c1"&gt;# Otherwise, this is run before which then runs the Gnome-Pomodoro actions&lt;/span&gt;
&lt;span class="c1"&gt;# things get quite messy!&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="c1"&gt;# Make no changes to the task, simply observe.&lt;/span&gt;
&lt;span class="n"&gt;old&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Start pomodoro when task is started&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;'start'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="s1"&gt;'start'&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;old&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'gnome-pomodoro --start'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Stop pomodoro when a task is stopped&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="s1"&gt;'start'&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="s1"&gt;'start'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;old&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'gnome-pomodoro --stop'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;It's called when a task is modified. It checks the old and new states. If a
task is started, it starts &lt;code&gt;gnome-pomodoro&lt;/code&gt;, and when it's stopped, it
stops it. This is one direction.&lt;/p&gt;
&lt;p&gt;The other direction requires some tinkering with &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome Pomodoro&lt;/a&gt; to set up
custom scripts. In the preferences, one must enable the &amp;quot;Custom actions&amp;quot;
plugin:&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20171225-gnome-pomodoro-plugins.png"&gt;&lt;img alt="A screenshot showing the plugin preferences in Gnome Pomodoro." src="http://ankursinha.in/images/20171225-gnome-pomodoro-plugins.png" style="height: 300.0px;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Then, a &amp;quot;Custom Actions&amp;quot; entry will be added to the preferences. We need to add
two of them. The first, resumes &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; tracking when the Pomodoro
resumes:&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20171225-gnome-pomodoro-action-resume-timew.png"&gt;&lt;img alt="A screenshot showing custom action that will resume timew after a break." src="http://ankursinha.in/images/20171225-gnome-pomodoro-action-resume-timew.png" style="height: 300.0px;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Similarly, the second stops &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; when a break begins, or the user
pauses the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Pomodoro_Technique"&gt;Pomodoro&lt;/a&gt;:&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20171225-gnome-pomodoro-action-stop-timew.png"&gt;&lt;img alt="A screenshot showing custom action that will stop timew at the start of a break." src="http://ankursinha.in/images/20171225-gnome-pomodoro-action-stop-timew.png" style="height: 300.0px;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;(If no tasks are active, &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; doesn't do anything, so that case does
not need to be handled separately.)&lt;/p&gt;
&lt;p&gt;There are certain &lt;a class="reference external" href="https://github.com/codito/gnome-pomodoro/issues/275#issuecomment-282494447"&gt;limitations to what commands can go in there&lt;/a&gt;,
so I've used a shell script to implement the required logic:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="ch"&gt;#!/bin/bash
&lt;/span&gt;&lt;span class="c1"&gt;# save as ~/bin/track-timew.sh
# note that ~/bin/ must be in PATH
&lt;/span&gt;
resume &lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    timew &lt;span class="o"&gt;||&lt;/span&gt; timew &lt;span class="k"&gt;continue&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

pause &lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    timew &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; timew stop
&lt;span class="o"&gt;}&lt;/span&gt;

clean &lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;# sed only does greedy regex so it's slightly complicated
&lt;/span&gt;    &lt;span class="c1"&gt;# could use perl to make this a lot simpler because perl does non
&lt;/span&gt;    &lt;span class="c1"&gt;# greedy too.
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; entry in &lt;span class="k"&gt;$(&lt;/span&gt;timew summary :ids &lt;span class="p"&gt;|&lt;/span&gt; grep -o &lt;span class="s1"&gt;'&amp;#64;.*'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed -E &lt;span class="s1"&gt;'s/(^&amp;#64;[[:digit:]]+[[:space:]]+)/\1 |/'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed -E &lt;span class="s1"&gt;'s/([[:digit:]]+:[[:digit:]]+:[[:digit:]]+ )/| \1/'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;'s/|.*|//'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed -E &lt;span class="s1"&gt;'s/[[:space:]]{2,}/ /'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s1"&gt;' '&lt;/span&gt; -f &lt;span class="m"&gt;1&lt;/span&gt;,4 &lt;span class="p"&gt;|&lt;/span&gt; grep -E &lt;span class="s1"&gt;'0:0[01]:..'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s1"&gt;' '&lt;/span&gt; -f &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tr &lt;span class="s1"&gt;'\n'&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; timew delete &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$entry&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

usage &lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt;: wrapper script around timewarrior to carry out common tasks&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;For use with Gnome-Pomodoro's action plugin&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; &amp;lt;option&amp;gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;OPTIONS:&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-r    resume tracking of most recently tracked task&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-p    pause tracking&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-c    clean up short tasks (less than 2 minutes long)&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# check for options
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    usage
    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# parse options
&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;getopts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rpch&amp;quot;&lt;/span&gt; OPTION
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$OPTION&lt;/span&gt; in
        r&lt;span class="o"&gt;)&lt;/span&gt;
            resume
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
        p&lt;span class="o"&gt;)&lt;/span&gt;
            pause
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
        c&lt;span class="o"&gt;)&lt;/span&gt;
            clean
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
        h&lt;span class="o"&gt;)&lt;/span&gt;
            usage
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
        ?&lt;span class="o"&gt;)&lt;/span&gt;
            usage
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="k"&gt;esac&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The script is quite simple, and I hope, self-explanatory too. I'll leave
interpretation of the &lt;code&gt;clean&lt;/code&gt; function to the reader ;)&lt;/p&gt;
&lt;p&gt;That's all there is to it. There must be other ways of doing the same thing,
possibly with different tools too, but this system required least changes to my
current workflow. Do remember that these tools can only aid us. It is us that
need to show that bit of discipline to follow the plan through. I hope some
will find it helpful, and may the new year be healthier and more productive for
us all! :)&lt;/p&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="Bash"></category><category term="Fedora"></category><category term="Timewarrior"></category><category term="Taskwarrior"></category><category term="Pomodoro"></category><category term="Gnome-Pomodoro"></category><category term="Time management"></category></entry><entry><title>Transitioning to Neomutt and friends for e-mail</title><link href="http://ankursinha.in/2017/12/16/transitioning-to-neomutt-and-friends-for-e-mail.html" rel="alternate"></link><published>2017-12-16T00:01:53+00:00</published><updated>2017-12-16T00:01:53+00:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2017-12-16:/2017/12/16/transitioning-to-neomutt-and-friends-for-e-mail.html</id><summary type="html">&lt;p class="first last"&gt;I finally took some time out to set up &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; and related tools
that let me access my e-mail in a terminal. This post documents how I
went about it.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I'm constantly seeking out applications that provide &lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt; like keyboard
bindings---it ensures that I have one set of keys that does the same thing
everywhere, and so, it saves me from having to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;remember different hot keys for different applications&lt;/li&gt;
&lt;li&gt;leave the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Touch_typing"&gt;home row&lt;/a&gt; to use the mouse/touchpad (Yeh, the home row is a
thing!)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, I now use the excellent &lt;a class="reference external" href="http://byobu.co/"&gt;byobu&lt;/a&gt; where I run:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/arybczak/ncmpcpp"&gt;ncmpcpp&lt;/a&gt; for music: it provides &lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt; like key bindings.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://vifm.info"&gt;Vifm&lt;/a&gt; for file management, although, a command line is usually sufficient.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/scottkosty/vit"&gt;Vit&lt;/a&gt; as a &lt;a class="reference external" href="https://taskwarrior.org"&gt;Taskwarrior&lt;/a&gt; terminal based front-end, which, yep, provides &lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt;
like key-bindings.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://weechat.org"&gt;Weechat&lt;/a&gt; for IRC which also has &lt;a class="reference external" href="https://github.com/GermainZ/weechat-vimode"&gt;Vim bindings&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt; has an in-built file browser, and one can use other plug-ins such as
NerdTree for more advanced tasks. I even have a &lt;a class="reference external" href="https://taskwarrior.org"&gt;Taskwarrior&lt;/a&gt; plug-in for Vim
that let's me quickly look up my tasks while writing code and the sort.&lt;/p&gt;
&lt;p&gt;For other uses where the terminal is insufficient, I've found:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://karlch.github.io/vimiv/"&gt;Vimiv&lt;/a&gt; for viewing images&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.qutebrowser.org/"&gt;Qutebrowser&lt;/a&gt; as a full featured browser. One can also use add-ons to
Firefox/Chrome, but I've quite fallen for &lt;a class="reference external" href="http://www.qutebrowser.org/"&gt;Qutebrowser&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pwmt.org/projects/zathura/"&gt;Zathura&lt;/a&gt; for viewing various document types.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I rarely use LibreOffice---I mostly stick to LaTeX, and &lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt; deals with it
rather well.&lt;/p&gt;
&lt;p&gt;In all of the above mentioned applications, &lt;code&gt;hjkl&lt;/code&gt; moves about, other hot
keys such as &lt;code&gt;G&lt;/code&gt; and &lt;code&gt;gg&lt;/code&gt;, and so on work too, and they even have a
command mode that can be accessed using &lt;code&gt;:&lt;/code&gt; as in &lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt;. So, I don't have
to think of the shortcuts now---it's all muscle memory!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://wiki.gnome.org/Apps/Evolution"&gt;Evolution&lt;/a&gt;, being a modern GUI productivity tool, does not have a method to
navigate around only using a keyboard, and this got me to look for an e-mail
client that provided &lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt; like bindings. The answer I found was the rather well
known &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; terminal client. I'd been thinking of giving it a go for a while
now---more than a year. However, as I document later in this post, setting up
&lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; isn't as trivial as setting up &lt;a class="reference external" href="https://wiki.gnome.org/Apps/Evolution"&gt;Evolution&lt;/a&gt; where one simply uses Gnome
Online Accounts and can get up and running in a few minutes.&lt;/p&gt;
&lt;p&gt;At no point will I suggest that anyone migrate to such a terminal oriented
setup. This is tailored to my personal, rather Vim-y needs. One should use
whatever tools fit their personal tastes. We needn't spend time on &amp;quot;But, I
prefer this, and it's better!&amp;quot; themed conversations.&lt;/p&gt;
&lt;p&gt;Please note that everything that is documented here is for an up to date
&lt;a class="reference external" href="http://getfedora.org"&gt;Fedora&lt;/a&gt; 27 system. Most steps should be general enough to work on other
distributions. One will have to go find the right packages, though. I followed
&lt;a class="reference external" href="https://hobo.house/2015/09/09/take-control-of-your-email-with-mutt-offlineimap-notmuch/"&gt;this guide&lt;/a&gt;
as the main source of information, and the looked around when I needed some
more info. I've collected a list of links at the bottom of this post.&lt;/p&gt;
&lt;div class="section" id="e-mail-the-details"&gt;
&lt;h2&gt;E-mail: the details&lt;/h2&gt;
&lt;p&gt;When a majority of us use e-mail, we simply interact with a client. These
clients: &lt;a class="reference external" href="https://wiki.gnome.org/Apps/Evolution"&gt;Evolution&lt;/a&gt;/&lt;a class="reference external" href="https://www.mozilla.org/en-GB/thunderbird/"&gt;Thunderbird&lt;/a&gt;/Outlook or the web applications that we access,
keep the nitty-gritty details away from end users. The &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Email#Operation_overview"&gt;wikipedia article&lt;/a&gt; on e-mail explains
the process quite well:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;An MUA (mail user agent) is the client that we use to read/write email.&lt;/li&gt;
&lt;li&gt;The MUA interacts with an MSA (mail submission agent) to send e-mail, or an
MDA (mail delivery agent) to receive e-mail to and fro a mailbox.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; is an MUA, so we need to set up the other bits for it to be able to
interact with an MSA and an MDA, and that's why it is a little more work than
setting up &lt;a class="reference external" href="https://wiki.gnome.org/Apps/Evolution"&gt;Evolution&lt;/a&gt; and so on where the tool takes care of setting up the
whole chain.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fetch-e-mail-with-offlineimap"&gt;
&lt;h2&gt;Fetch e-mail with Offlineimap&lt;/h2&gt;
&lt;p&gt;There are a few tools that fetch e-mail. &lt;a class="reference external" href="http://www.offlineimap.org/"&gt;Offlineimap&lt;/a&gt; seemed to be widely used,
so I settled for it as well. On &lt;a class="reference external" href="http://getfedora.org"&gt;Fedora&lt;/a&gt;, one can use DNF:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo dnf install offlineimap
&lt;/pre&gt;
&lt;p&gt;One must then set up their accounts with credentials and the sort. An example
config file is provided with the package at
&lt;code&gt;/usr/share/doc/offlineimap/offlineimap.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The config format is quite self explanatory. Here's an example:&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="k"&gt;[general]&lt;/span&gt;
&lt;span class="na"&gt;accounts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;account1&lt;/span&gt;

&lt;span class="k"&gt;[Account account1]&lt;/span&gt;
&lt;span class="na"&gt;localrepository&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;account1-local&lt;/span&gt;
&lt;span class="na"&gt;remoterepository&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;account1-remote&lt;/span&gt;
&lt;span class="na"&gt;status_backend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;sqlite&lt;/span&gt;
&lt;span class="na"&gt;postsynchook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;notmuch new&lt;/span&gt;

&lt;span class="k"&gt;[Repository account1-remote]&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;IMAP&lt;/span&gt;
&lt;span class="na"&gt;remotehost&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;mailhost.com&lt;/span&gt;
&lt;span class="na"&gt;remoteport&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;587&lt;/span&gt;
&lt;span class="na"&gt;remoteuser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;username&amp;#64;mailhost.com&lt;/span&gt;
&lt;span class="na"&gt;remotepass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;password&lt;/span&gt;
&lt;span class="na"&gt;ssl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;no&lt;/span&gt;
&lt;span class="na"&gt;folderfilter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;lambda foldername: foldername in ['INBOX', 'Sent', 'Spam', 'Trash', 'Drafts']&lt;/span&gt;
&lt;span class="na"&gt;createfolders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;maxconnections&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;2&lt;/span&gt;

&lt;span class="k"&gt;[Repository account1-local]&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Maildir&lt;/span&gt;
&lt;span class="na"&gt;localfolders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;~/Mail&lt;/span&gt;
&lt;span class="na"&gt;restoreatime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;no&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;There's a &amp;quot;general&amp;quot; section where one defines what accounts are to be used. One
can also define global options that will apply to all accounts here.&lt;/p&gt;
&lt;p&gt;For each account, one then sets up the main configurations, and then set up the
remote and local repositories. There are other advanced options that one can
use too. The &lt;code&gt;folderfilter&lt;/code&gt;, for example, is a python statement that lets
one select what folders on the remote should by synced. More in the offlineimap
documentation.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;postsynchook&lt;/code&gt; bit lets one run a command after &lt;a class="reference external" href="http://www.offlineimap.org/"&gt;Offlineimap&lt;/a&gt; has
finished syncing. Here, it calls &lt;code&gt;notmuch&lt;/code&gt; to update its database. More on
&lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt; later.&lt;/p&gt;
&lt;p&gt;Once configured, one can run &lt;a class="reference external" href="http://www.offlineimap.org/"&gt;Offlineimap&lt;/a&gt; to fetch one's mail. The first sync
will take quite a while, but subsequent syncs will be much quicker.&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
offlineimap
&lt;/pre&gt;
&lt;p&gt;I set up a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Cron"&gt;cronjob&lt;/a&gt; to sync my e-mail regularly. Most users also use a script
that kills previously running &lt;a class="reference external" href="http://www.offlineimap.org/"&gt;Offlineimap&lt;/a&gt; instances that may have hung, so a
script like this may be more useful:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
check &lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; pkill offlineimap
    &lt;span class="k"&gt;do&lt;/span&gt;
        sleep &lt;span class="m"&gt;2&lt;/span&gt;
    &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

quick &lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    offlineimap -u quiet -q -s
&lt;span class="o"&gt;}&lt;/span&gt;

full &lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    offlineimap -u quiet -s
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# parse options
&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;getopts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qf&amp;quot;&lt;/span&gt; OPTION
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$OPTION&lt;/span&gt; in
        q&lt;span class="o"&gt;)&lt;/span&gt;
            check
            quick
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
        f&lt;span class="o"&gt;)&lt;/span&gt;
            check
            full
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
        ?&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Nothing to do.&amp;quot;&lt;/span&gt;
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="k"&gt;esac&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;My crontab then looks like this:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
*/20 * * * * /home/asinha/bin/fetch-mail.sh -q
&lt;span class="m"&gt;10&lt;/span&gt; */8 * * * /home/asinha/bin/fetch-mail.sh -f
&lt;/pre&gt;
&lt;p&gt;So, every 20 minutes, I do a quick sync, and once every 8 hours, I do a full
sync.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sending-e-mail-with-msmtp"&gt;
&lt;h2&gt;Sending e-mail with msmtp&lt;/h2&gt;
&lt;p&gt;Now that we can fetch our e-mail, we look at sending e-mail. &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Sendmail"&gt;sendmail&lt;/a&gt; is quite
a well known client, but the setup is a bit cludgy for me. &lt;a class="reference external" href="http://msmtp.sourceforge.net/"&gt;msmtp&lt;/a&gt; was
recommended by quite a few users. On &lt;a class="reference external" href="http://getfedora.org"&gt;Fedora&lt;/a&gt;, one can install it using DNF:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo dnf install msmtp
&lt;/pre&gt;
&lt;p&gt;The configuration for &lt;a class="reference external" href="http://msmtp.sourceforge.net/"&gt;msmtp&lt;/a&gt; is quite simple too. The package provides two
example configuration files:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
/usr/share/doc/msmtp/msmtprc-system.example
/usr/share/doc/msmtp/msmtprc-user.example
&lt;/pre&gt;
&lt;p&gt;Here's an example:&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="na"&gt;defaults&lt;/span&gt;
&lt;span class="na"&gt;protocol smtp&lt;/span&gt;
&lt;span class="na"&gt;auth on&lt;/span&gt;
&lt;span class="na"&gt;tls on&lt;/span&gt;
&lt;span class="na"&gt;tls_trust_file /etc/ssl/certs/ca-bundle.crt&lt;/span&gt;
&lt;span class="na"&gt;syslog LOG_USER&lt;/span&gt;
&lt;span class="na"&gt;logfile ~/.msmtp.log&lt;/span&gt;
&lt;span class="na"&gt;timeout 60&lt;/span&gt;

&lt;span class="na"&gt;account account1&lt;/span&gt;
&lt;span class="na"&gt;host smtp.hostname.com&lt;/span&gt;
&lt;span class="na"&gt;port 587&lt;/span&gt;
&lt;span class="na"&gt;domain hostname.com&lt;/span&gt;
&lt;span class="na"&gt;from something&amp;#64;hostname.com&lt;/span&gt;
&lt;span class="na"&gt;user username&amp;#64;hostname.com&lt;/span&gt;
&lt;span class="na"&gt;password password&lt;/span&gt;

&lt;span class="na"&gt;account account2&lt;/span&gt;
&lt;span class="na"&gt;host smtp.anotherhostname.com&lt;/span&gt;
&lt;span class="na"&gt;port 587&lt;/span&gt;
&lt;span class="na"&gt;domain anotherhostname.com&lt;/span&gt;
&lt;span class="na"&gt;from something&amp;#64;anotherhostname.com&lt;/span&gt;
&lt;span class="na"&gt;user username&amp;#64;anotherhostname.com&lt;/span&gt;
&lt;span class="na"&gt;password password&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;It has a default section where options common to all accounts can be set up.
here it does to usual setup regarding TLS, and so on.&lt;/p&gt;
&lt;p&gt;A separate section for each account then holds the credentials. One can then
send e-mail from the command line:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Subject: Test&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; msmtp -a account1 someone&amp;#64;anotherhost.com
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="setting-up-the-mua-neo-mutt"&gt;
&lt;h2&gt;Setting up the MUA: (neo)mutt&lt;/h2&gt;
&lt;p&gt;The two MTAs are now set up, and we can fetch and send mail. We can now link
these up to our MUA, &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt;. Instead of &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt;, I use &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; which is &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; with
additional patches and features. It isn't in the Fedora repos yet, but there's a
&lt;a class="reference external" href="https://copr.fedorainfracloud.org/"&gt;COPR&lt;/a&gt; repository set up for users:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo dnf copr &lt;span class="nb"&gt;enable&lt;/span&gt; flatcap/neomutt
sudo dnf install neomutt
&lt;/pre&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; configuration is based on the &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; bits, and it's rather
extensive. The package provides an example that I use as a starting point:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
/usr/share/doc/offlineimap/offlineimap.conf
&lt;/pre&gt;
&lt;p&gt;The important bits are here:&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="na"&gt;mailboxes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;account1&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;mailboxes `find ~/Mail/account1/* -maxdepth 0 -type d | grep -v &amp;quot;tmp\|new\|cur&amp;quot; | sed 's|/home/asinha/Mail/|&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;\&amp;quot;|g' | sed 's|$|\&amp;quot;|g' | tr '\n' ' '`&lt;/span&gt;
&lt;span class="na"&gt;set from&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;user&amp;#64;hostname.com&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set use_from&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set reply_to&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set sendmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;msmtp -a account1&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set sendmail_wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="na"&gt;set mbox&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;+account1/INBOX&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set postponed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;+account1/Drafts&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set record&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;+account1/Sent&amp;quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;mailboxes&lt;/code&gt; list what folders the sidebar in &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt;. These are what
we've set up offlineimap to fetch for us. Similarly, the &lt;code&gt;sendmail&lt;/code&gt;
setting tells neomutt to use &lt;code&gt;msmtp&lt;/code&gt; to send e-mail.&lt;/p&gt;
&lt;p&gt;If it all went well, running &lt;code&gt;neomutt&lt;/code&gt; should bring up a window like the
figure below:&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20171215-neomutt.png"&gt;&lt;img alt="A screenshot of Neomutt in action" src="http://ankursinha.in/images/20171215-neomutt.png" style="height: 480.0px;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;On the left, there's the sidebar where all folders are listed. These can be
configured using &lt;code&gt;mailboxes&lt;/code&gt; as &lt;a class="reference external" href="https://www.neomutt.org/feature/sidebar-intro"&gt;explained in the documentation here&lt;/a&gt;. On the right hand side, the
various e-mails are listed on top in the &lt;code&gt;index&lt;/code&gt;, and a particular e-mail
is visible in the &lt;code&gt;pager&lt;/code&gt; view. As can be seen, the index view also shows
threads! (This is running in &lt;code&gt;byobu&lt;/code&gt;, by the way, which shows the other
information in the bottom information bar.) More on all of this in the
documentation, of course.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="searching-e-mail-with-notmuch"&gt;
&lt;h2&gt;Searching e-mail with notmuch&lt;/h2&gt;
&lt;p&gt;We have our e-mail set up, but we at the moment, it has a very basic search
feature that &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; provides. &lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt;, which thinks &amp;quot;not much mail&amp;quot; of your
massive e-mail collection helps here. &lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt; is called after each Offlineimap
sync above, in the &lt;code&gt;postsynchook&lt;/code&gt;. Then, using simple keyboard shortcuts,
one can use &lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt; search their whole e-mail database. &lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt; has quite a
few advanced features, like searching as threads, and searching e-mail
addresses, and the sort. &lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt; comes with the handy &lt;code&gt;notmuch-config&lt;/code&gt;
which makes configuration trivial. Here's an example below:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
$ notmuch address from:*lists.fedoraproject.org
classroom-request&amp;#64;lists.fedoraproject.org
freemedia-owner&amp;#64;lists.fedoraproject.org
fedora-join-bounces&amp;#64;lists.fedoraproject.org
fedora-join-owner&amp;#64;lists.fedoraproject.org
cwg-request&amp;#64;lists.fedoraproject.org
cwg-private-request&amp;#64;lists.fedoraproject.org
&lt;/pre&gt;
&lt;p&gt;The same can be used within &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; with a few simple hotkeys:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
macro index &amp;lt;F8&amp;gt; \
&amp;quot;&amp;lt;enter-command&amp;gt;set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key&amp;lt;enter&amp;gt;\
&amp;lt;shell-escape&amp;gt;notmuch-mutt -r --prompt search&amp;lt;enter&amp;gt;\
&amp;lt;change-folder-readonly&amp;gt;`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`&amp;lt;enter&amp;gt;\
&amp;lt;enter-command&amp;gt;set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key&amp;lt;enter&amp;gt;&amp;quot; \
 &amp;quot;notmuch: search mail&amp;quot;

macro index &amp;lt;F9&amp;gt; \
&amp;quot;&amp;lt;enter-command&amp;gt;set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key&amp;lt;enter&amp;gt;\
&amp;lt;pipe-message&amp;gt;notmuch-mutt -r thread&amp;lt;enter&amp;gt;\
&amp;lt;change-folder-readonly&amp;gt;`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`&amp;lt;enter&amp;gt;\
&amp;lt;enter-command&amp;gt;set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key&amp;lt;enter&amp;gt;&amp;quot; \
 &amp;quot;notmuch: reconstruct thread&amp;quot;

macro index &amp;lt;F6&amp;gt; \
&amp;quot;&amp;lt;enter-command&amp;gt;set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key&amp;lt;enter&amp;gt;\
&amp;lt;pipe-message&amp;gt;notmuch-mutt tag -- -inbox&amp;lt;enter&amp;gt;\
&amp;lt;enter-command&amp;gt;set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key&amp;lt;enter&amp;gt;&amp;quot; \
 &amp;quot;notmuch: remove message from inbox&amp;quot;
&lt;/pre&gt;
&lt;p&gt;The three commands in a &lt;code&gt;neomuttrc&lt;/code&gt; file will respectively:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;bind F8 to open a &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; search&lt;/li&gt;
&lt;li&gt;bind F9 to find a whole thread based the currently selected e-mail. This
includes all folders.&lt;/li&gt;
&lt;li&gt;binds F6 to untag an e-mail (more on &lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt; tagging in the docs)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="other-tweaks"&gt;
&lt;h2&gt;Other tweaks&lt;/h2&gt;
&lt;p&gt;The aforementioned bits cover most of the main functions that one would need
with e-mail. Here are some more tips that I found helpful.&lt;/p&gt;
&lt;p&gt;I have not yet set up a command line address book client. There seem to be a
few that sync with Gmail and other providers and can be used with &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt;, but I
don't need them yet.  &lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt; provides sufficient completion for the time
being, and when I begin to use newer addresses that are not already in my
mailbox, I shall look at address book clients. For those that are interested,
these are what I've found:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://abook.sourceforge.net/"&gt;abook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://gitlab.com/goobook/goobook"&gt;gobook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="storing-passwords-using-pass"&gt;
&lt;h3&gt;Storing passwords using pass&lt;/h3&gt;
&lt;p&gt;Storing passwords as plain text is a terrible idea. Instead most use password
managers. &lt;a class="reference external" href="https://www.passwordstore.org/"&gt;pass&lt;/a&gt; is an excellent command line password manager that uses &lt;a class="reference external" href="https://www.gnupg.org/"&gt;GPG&lt;/a&gt;
to encrypt password files. It even integrates with &lt;a class="reference external" href="https://git-scm.com/"&gt;Git&lt;/a&gt; so that a central
repository can hold the encrypted files, and can be cloned to various systems.&lt;/p&gt;
&lt;p&gt;Both &lt;a class="reference external" href="http://www.offlineimap.org/"&gt;Offlineimap&lt;/a&gt; and &lt;a class="reference external" href="http://msmtp.sourceforge.net/"&gt;msmtp&lt;/a&gt; permit a user to store passwords in a tool and then
run a command to extract it. In the &lt;code&gt;offlineimaprc&lt;/code&gt;, for example, one can
use:&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="na"&gt;remotepasseval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;get_pass(&amp;quot;E-mail&amp;quot;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;to fetch passwords from pass. Here &lt;code&gt;get_pass&lt;/code&gt; is a python function that
does the dirty work:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_pass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;account&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;check_output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pass &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;account&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitlines&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Similarly, &lt;a class="reference external" href="http://msmtp.sourceforge.net/"&gt;msmtp&lt;/a&gt; lets one use a shell command to get a password:&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="na"&gt;passwordeval pass E-mail&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;where the &lt;code&gt;E-mail&lt;/code&gt; file is associated with the password for a certain account using pass.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="multiple-accounts"&gt;
&lt;h3&gt;Multiple accounts&lt;/h3&gt;
&lt;p&gt;Both &lt;a class="reference external" href="http://www.offlineimap.org/"&gt;Offlineimap&lt;/a&gt; and &lt;a class="reference external" href="http://msmtp.sourceforge.net/"&gt;msmtp&lt;/a&gt; can handle multiple accounts. &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; can too,
but to set sane defaults each time one switches mailboxes, a bit of trickery is
required. The &lt;a class="reference external" href="https://gist.github.com/miguelmota/9456162"&gt;gist here&lt;/a&gt; shows
what's needed. Essentially, using a &lt;code&gt;folder-hook&lt;/code&gt;, one updates the
required configurations (signature, from address, sent mail folder, draft
folder) when one switches to a folder associated with a different account. I
use four accounts in &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; currently. It works rather well. The snippet
below is what I have in my &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; configuration file. It sets up host3 as the
default account, and each time I change to a different host folder, the
folder-hook updates some configurations. Here, I have different files for each
host.&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="c1"&gt;# Hooks for multi-setup&lt;/span&gt;
&lt;span class="c1"&gt;# default&lt;/span&gt;
&lt;span class="na"&gt;set folder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;~/Mail&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set spoolfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;+host3/INBOX&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;source ~/Documents/100_dotfiles/mail/host1.neomuttrc&lt;/span&gt;
&lt;span class="na"&gt;source ~/Documents/100_dotfiles/mail/host4.neomuttrc&lt;/span&gt;
&lt;span class="na"&gt;source ~/Documents/100_dotfiles/mail/host2.neomuttrc&lt;/span&gt;
&lt;span class="na"&gt;source ~/Documents/100_dotfiles/mail/host3.neomuttrc&lt;/span&gt;

&lt;span class="c1"&gt;# folder hook&lt;/span&gt;
&lt;span class="na"&gt;folder-hook host4/* source ~/Documents/100_dotfiles/mail/host4.neomuttrc&lt;/span&gt;
&lt;span class="na"&gt;folder-hook host1/* source ~/Documents/100_dotfiles/mail/host1.neomuttrc&lt;/span&gt;
&lt;span class="na"&gt;folder-hook host2/* source ~/Documents/100_dotfiles/mail/host2.neomuttrc&lt;/span&gt;
&lt;span class="na"&gt;folder-hook host3/* source ~/Documents/100_dotfiles/mail/host3.neomuttrc&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="gpg-signing"&gt;
&lt;h3&gt;GPG signing&lt;/h3&gt;
&lt;p&gt;I sign my e-mails with &lt;a class="reference external" href="https://keys.fedoraproject.org/pks/lookup?search=0xE629112D&amp;amp;op=vindex"&gt;my GPG key&lt;/a&gt;.
&lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; supports this via a few configuration options:&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="na"&gt;set pgp_sign_as&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0xE629112D&lt;/span&gt;
&lt;span class="na"&gt;set crypt_autosign&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set crypt_verify_sig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set crypt_replysign&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;E-mails will be signed when they're going out, and when a signed e-mail comes
in, &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; will verify the signature if the key is available and so on. If
you're not using GPG keys, this &lt;a class="reference external" href="https://fedoraproject.org/wiki/Creating_GPG_Keys"&gt;guide on the Fedora wiki&lt;/a&gt; is a great guide for
beginners.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="viewing-html-mail-and-attachments"&gt;
&lt;h3&gt;Viewing HTML mail and attachments&lt;/h3&gt;
&lt;p&gt;Even though I send all my e-mail as plain text, I do receive lots of HTML mail.
&lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; can be set up to automatically view HTML e-mail. It does so by using a
tool such as &lt;code&gt;w3m&lt;/code&gt; to strip the e-mail of HTML tags and show the text.
The screenshot below shows an example HTML from Quora.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20171215-neomutt-html.png"&gt;&lt;img alt="A screenshot of Neomutt showing HTML e-mail." src="http://ankursinha.in/images/20171215-neomutt-html.png" style="height: 480.0px;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;A simple configuration line tells &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; what to do:&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="na"&gt;auto_view text/html&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; uses information from &lt;code&gt;mailcap&lt;/code&gt; to do this. For those that are
unaware of what &lt;code&gt;mailcap&lt;/code&gt; is, like I was, &lt;a class="reference external" href="https://linux.die.net/man/4/mailcap"&gt;here's the manual page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The configuration file for &lt;code&gt;mailcap&lt;/code&gt; is &lt;code&gt;~/.mailcaprc&lt;/code&gt;. Mine looks
like this:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
audio/*; /usr/bin/xdg-open %s ; copiousoutput

image/*; /usr/bin/xdg-open %s ; copiousoutput

application/msword; /usr/bin/xdg-open %s ; copiousoutput
application/pdf; /usr/bin/xdg-open %s ; copiousoutput
application/postscript ; /usr/bin/xdg-open %s ; copiousoutput

text/html; qutebrowser %s &amp;amp;&amp;amp; sleep 5 ; test=test -n &amp;quot;$DISPLAY&amp;quot;;
nametemplate=%s.html; needsterminal
# text/html; lynx -dump %s ; copiousoutput; nametemplate=%s.html
text/html; w3m -I %{charset} -T text/html ; copiousoutput; nametemplate=%s.html
&lt;/pre&gt;
&lt;p&gt;One can use either &lt;code&gt;lynx&lt;/code&gt; or &lt;code&gt;w3m&lt;/code&gt;. I tried both and settled for
&lt;code&gt;w3m&lt;/code&gt;. &lt;a class="reference external" href="http://getfedora.org"&gt;Fedora&lt;/a&gt; systems have a default &lt;code&gt;mailcaprc&lt;/code&gt; file at
&lt;code&gt;/etc/mailcap&lt;/code&gt; which I adapted from. The &lt;code&gt;copiousoutput&lt;/code&gt; option
tells &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; not to quickly delete the temporary file.&lt;/p&gt;
&lt;p&gt;For cases where HTML e-mails also contain images, one can simply open the HTML
e-mail in a browser. The HTML e-mails are present as attachements to the e-mail
message. Pressing &lt;code&gt;v&lt;/code&gt; on an e-mail message shows the attachement menu.
The screenshot below shows the attachment menu for the same e-mail as above.
Hitting enter opens up the HTML attached version in the browser I've set up in
my &lt;code&gt;mailcap&lt;/code&gt; above, &lt;code&gt;qutebrowser&lt;/code&gt;.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20171215-neomutt-attachments.png"&gt;&lt;img alt="A screenshot of Neomutt showing e-mail attachments." src="http://ankursinha.in/images/20171215-neomutt-attachments.png" style="height: 480.0px;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Note: all attachments can be viewed like this.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="viewing-links-with-urlview"&gt;
&lt;h3&gt;Viewing links with urlview&lt;/h3&gt;
&lt;p&gt;Since I use &lt;a class="reference external" href="http://byobu.co/"&gt;byobu&lt;/a&gt;, which is based on either &lt;a class="reference external" href="https://github.com/tmux/tmux/wiki"&gt;tmux&lt;/a&gt; or &lt;a class="reference external" href="https://www.gnu.org/software/screen/"&gt;screen&lt;/a&gt;, I can copy and
paste any text in the terminal using their buffers. &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; provides an easier
way, though, using &lt;a class="reference external" href="https://github.com/sigpipe/urlview"&gt;urlview&lt;/a&gt;. So, binding ctrl-b to &lt;a class="reference external" href="https://github.com/sigpipe/urlview"&gt;urlview&lt;/a&gt; will put the e-mail
through &lt;a class="reference external" href="https://github.com/sigpipe/urlview"&gt;urlview&lt;/a&gt; to show a menu of all URLs in it. One can then pick what URL
to open, as the screenshot below shows:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
# urlview bits
macro index \cb | urlview\n
macro pager \cb | urlview\n
&lt;/pre&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20171215-neomutt-urlview.png"&gt;&lt;img alt="A screenshot of Neomutt with urlview." src="http://ankursinha.in/images/20171215-neomutt-urlview.png" style="height: 480.0px;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="right-then-let-s-stick-to-the-home-row"&gt;
&lt;h2&gt;Right then, let's stick to the home row!&lt;/h2&gt;
&lt;p&gt;This post turned out to be a lot lengthier than I'd expected. There's always so
much tweaking one can do. I hope this helps somewhat. It isn't complete by a
far stretch, but it should include enough hints and links to enable a reader to
Google up and figure things out. Read the docs, read the manuals---it's all in
there.&lt;/p&gt;
&lt;p&gt;Happy e-mailing!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="incomplete-list-of-references"&gt;
&lt;h2&gt;Incomplete list of references&lt;/h2&gt;
&lt;p&gt;Here are most of the links I looked at, in no particular order:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://hobo.house/2015/09/09/take-control-of-your-email-with-mutt-offlineimap-notmuch/"&gt;https://hobo.house/2015/09/09/take-control-of-your-email-with-mutt-offlineimap-notmuch/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/sadsfae/misc-dotfiles/blob/master/muttrc-gpg.txt"&gt;https://github.com/sadsfae/misc-dotfiles/blob/master/muttrc-gpg.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://upsilon.cc/~zack/blog/posts/2011/01/how_to_use_Notmuch_with_Mutt/"&gt;http://upsilon.cc/~zack/blog/posts/2011/01/how_to_use_Notmuch_with_Mutt/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://notmuchmail.org/"&gt;https://notmuchmail.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://git.notmuchmail.org/git/notmuch/blob/HEAD:/vim/README"&gt;https://git.notmuchmail.org/git/notmuch/blob/HEAD:/vim/README&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.neomutt.org/guide/optionalfeatures"&gt;https://www.neomutt.org/guide/optionalfeatures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wiki.archlinux.org/index.php/OfflineIMAP#Using_pass"&gt;https://wiki.archlinux.org/index.php/OfflineIMAP#Using_pass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.df7cb.de/blog/2010/Using_multiple_IMAP_accounts_with_Mutt.html"&gt;http://www.df7cb.de/blog/2010/Using_multiple_IMAP_accounts_with_Mutt.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/OfflineIMAP/offlineimap/blob/master/offlineimap.conf"&gt;https://github.com/OfflineIMAP/offlineimap/blob/master/offlineimap.conf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wiki.archlinux.org/index.php/OfflineIMAP"&gt;https://wiki.archlinux.org/index.php/OfflineIMAP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.offlineimap.org/doc/use_cases.html"&gt;http://www.offlineimap.org/doc/use_cases.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://sparkslinux.wordpress.com/2014/01/30/configuring-offlineimap-to-validate-ssltls-certificates/"&gt;https://sparkslinux.wordpress.com/2014/01/30/configuring-offlineimap-to-validate-ssltls-certificates/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stevelosh.com/blog/2012/10/the-homely-mutt/#why-local-email"&gt;http://stevelosh.com/blog/2012/10/the-homely-mutt/#why-local-email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://raisedfist.net/2017-05-02/muttupdated/"&gt;https://raisedfist.net/2017-05-02/muttupdated/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/18765928/mutt-send-signature-hook"&gt;https://stackoverflow.com/questions/18765928/mutt-send-signature-hook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://notmuchmail.org/vimtips/"&gt;https://notmuchmail.org/vimtips/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.neomutt.org/guide/configuration.html#my-hdr"&gt;https://www.neomutt.org/guide/configuration.html#my-hdr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.neomutt.org/guide/advancedusage.html"&gt;https://www.neomutt.org/guide/advancedusage.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/neomutt/neomutt/issues/629"&gt;https://github.com/neomutt/neomutt/issues/629&lt;/a&gt; - address completion using
notmuch&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jasonwryan.com/blog/2012/05/12/mutt/"&gt;http://jasonwryan.com/blog/2012/05/12/mutt/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="Fedora"></category></entry></feed>