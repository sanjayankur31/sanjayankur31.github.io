<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ankursinha.in/blog - Robotics</title><link href="https://ankursinha.in/" rel="alternate"/><link href="https://ankursinha.in/feeds/tags/robotics.atom.xml" rel="self"/><id>https://ankursinha.in/</id><updated>2014-06-25T08:38:00+01:00</updated><subtitle>neuroscience/fedora/musings</subtitle><entry><title>Released the code I wrote for my masters research</title><link href="https://ankursinha.in/2014/06/25/released-the-code-i-wrote-for-my-masters-research.html" rel="alternate"/><published>2014-06-25T08:38:00+01:00</published><updated>2014-06-25T08:38:00+01:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2014-06-25:/2014/06/25/released-the-code-i-wrote-for-my-masters-research.html</id><summary type="html">&lt;p class="first last"&gt;The code I wrote for my masters research is now available on my Github account.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;In this week's research group meeting, I asked my supervisor if I could
finally release the source code that I'd written during my masters for
my thesis. Generally, research code is kept private until the papers
related to it have been published. Since both my papers have been
accepted at conferences coming up in the near future, my supervisor said
it was OK to finally turn the code public. I haven't picked a license
for it yet - all I've requested is that my papers be cited. The data
bags that I'd used to generate my results are too big to upload -
sometimes a couple of Gigs, so I haven't been able to upload them.&lt;/p&gt;
&lt;p&gt;The code can be found here: &lt;a class="reference external" href="https://github.com/sanjayankur31/bionav"&gt;https://github.com/sanjayankur31/bionav&lt;/a&gt;. I
generated doxygen documents for my code too. This can be found here:
&lt;a class="reference external" href="http://ankursinha.in/files/research/bionav-doc/index.html"&gt;http://ankursinha.in/files/research/bionav-doc/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The code is a ROS implementation of head direction and grid cells, as
the papers document. I'd begun implementing place cells, but I ran out
of time in my master's course.&lt;/p&gt;
&lt;p&gt;More on my research here: &lt;a class="reference external" href="http://ankursinha.in/wp/research/"&gt;http://ankursinha.in/wp/research/&lt;/a&gt;&lt;/p&gt;
</content><category term="Research"/><category term="Computational neuroscience"/><category term="Robotics"/></entry><entry><title>Extracting raw data from ros topics</title><link href="https://ankursinha.in/2013/04/07/extracting-raw-data-from-ros-topics.html" rel="alternate"/><published>2013-04-07T15:22:00+01:00</published><updated>2013-04-07T15:22:00+01:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2013-04-07:/2013/04/07/extracting-raw-data-from-ros-topics.html</id><summary type="html">&lt;p&gt;Recently, I needed to extract raw data that we had collected from the
&lt;a class="reference external" href="http://www.willowgarage.com/pages/pr2/overview"&gt;PR2&lt;/a&gt; robot. It's easy to collect data from &lt;a class="reference external" href="http://www.ros.org/wiki/Topics"&gt;topics&lt;/a&gt;, using the
&lt;a class="reference external" href="http://www.ros.org/wiki/rosbag"&gt;rosbag&lt;/a&gt; tool. You can collect data from multiple topics in one bag at
a time.&lt;/p&gt;
&lt;p&gt;Here's an example command that collects data from the robot:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
rosbag â€¦&lt;/pre&gt;</summary><content type="html">&lt;p&gt;Recently, I needed to extract raw data that we had collected from the
&lt;a class="reference external" href="http://www.willowgarage.com/pages/pr2/overview"&gt;PR2&lt;/a&gt; robot. It's easy to collect data from &lt;a class="reference external" href="http://www.ros.org/wiki/Topics"&gt;topics&lt;/a&gt;, using the
&lt;a class="reference external" href="http://www.ros.org/wiki/rosbag"&gt;rosbag&lt;/a&gt; tool. You can collect data from multiple topics in one bag at
a time.&lt;/p&gt;
&lt;p&gt;Here's an example command that collects data from the robot:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
rosbag record -b 1024 &amp;quot;/joint_states&amp;quot; -e &amp;quot;(/.*)_scan$&amp;quot; &amp;quot;torso_lift_imu/data&amp;quot; &amp;quot;/base_odometry/odom&amp;quot; &amp;quot;/camera/rgb/image_rect_color&amp;quot; &amp;quot;/camera/depth_registered/image_rect&amp;quot; --duration=1m --split -O /removable/recordings/20130403_1218_navtest_data.bag
&lt;/pre&gt;
&lt;p&gt;The rosbag then looks like this:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[ankur&amp;#64;localhost  bag-test]$ rosbag info 20130403_1218_navtest_data_0.bag
path:        20130403_1218_navtest_data_0.bag
version:     2.0
duration:    58.8s
start:       Apr 03 2013 15:40:18.91 (1364964018.91)
end:         Apr 03 2013 15:41:17.68 (1364964077.68)
size:        3.3 GB
messages:    17035
compression: none [3295/3295 chunks]
types:       nav_msgs/Odometry      [cd5e73d190d741a2f92e81eda573aca7]
             sensor_msgs/Image      [060021388200f6f0f447d0fcd9c64743]
             sensor_msgs/JointState [3066dcd76a6cfaef579bd0f34173e9fd]
             sensor_msgs/LaserScan  [90c7ef2dc6895d81024acba2ac42f369]
topics:      /base_odometry/odom                   5516 msgs    : nav_msgs/Odometry
             /base_scan                            1176 msgs    : sensor_msgs/LaserScan
             /camera/depth_registered/image_rect   1640 msgs    : sensor_msgs/Image
             /camera/rgb/image_rect_color          1653 msgs    : sensor_msgs/Image
             /joint_states                         5875 msgs    : sensor_msgs/JointState
             /tilt_scan                            1175 msgs    : sensor_msgs/LaserScan
[ankur&amp;#64;localhost  bag-test]$
&lt;/pre&gt;
&lt;p&gt;You can also filter out individual topics into individual bags with the
tool:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[ankur&amp;#64;localhost  bag-test]$ rosbag filter --help
Usage: rosbag filter [options] INBAG OUTBAG EXPRESSION

EXPRESSION can be any Python-legal expression.

The following variables are available:
 * topic: name of topic
 * m: message
 * t: time of message (t.secs, t.nsecs)

Filter the contents of the bag.

Options:
  -h, --help            show this help message and exit
  -p PRINT-EXPRESSION, --print=PRINT-EXPRESSION
                        Python expression to print for verbose debugging. Uses
                        same variables as filter-expression
[ankur&amp;#64;localhost  bag-test]$
&lt;/pre&gt;
&lt;p&gt;Various other tools are available to visualize the data. With &lt;a class="reference external" href="http://www.ros.org/wiki/groovy/"&gt;groovy&lt;/a&gt;,
you have &lt;a class="reference external" href="http://ros.org/wiki/rqt_bag"&gt;rqt_bag&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Since I needed the raw messages, I had to hack up a python script using
the &lt;a class="reference external" href="http://www.ros.org/wiki/rosbag/Code%20API#py_api"&gt;rosbag API&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#!/usr/bin/python

# Copyright 2010 Ankur Sinha
# Author: Ankur Sinha
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.
#
# File : extractRawInfo.py
#

import rosbag
import sys
import os
import pickle

# Global variable for input file name

def run():
    &amp;quot;&amp;quot;&amp;quot;
    Main run method. Calls other helper methods to get work done
    &amp;quot;&amp;quot;&amp;quot;

    if len(sys.argv) != 2:
        sys.stderr.write('[ERROR] This script only takes input bag file as argument.n')
    else:
        inputFileName = sys.argv[1]
        print &amp;quot;[OK] Found bag: %s&amp;quot; % inputFileName

        bag = rosbag.Bag(inputFileName)
        topicList = readBagTopicList(bag)

        while True:
            if len(topicList) == 0:
                print &amp;quot;No topics in list. Exiting&amp;quot;
                break
            selection  = menu(topicList)

            if selection == -92:
                print &amp;quot;[OK] Printing them all&amp;quot;
                for topic in topicList:
                    extract_data(bag, topic, inputFileName)
                break
            elif selection == -45:
                break
            else:
                topic = topicList[selection]
                extract_data(bag, topic, inputFileName)
                topicList.remove(topicList[selection])

        bag.close()

def extract_data (bag, topic, inputFileName):
    &amp;quot;&amp;quot;&amp;quot;
    Spew messages to a file

    args:
        topic -&amp;gt; topic to extract and print to txt file
    &amp;quot;&amp;quot;&amp;quot;

    outputFileName = os.path.splitext(os.path.split(inputFileName)[1])[0] + topic.replace(&amp;quot;/&amp;quot;,&amp;quot;-&amp;quot;) + &amp;quot;.txt&amp;quot;
    print &amp;quot;[OK] Printing %s&amp;quot; % topic
    print &amp;quot;[OK] Output file will be called %s.&amp;quot; % outputFileName

    outputFh = open(outputFileName, &amp;quot;w&amp;quot;)

    for topic, msg, t in bag.read_messages(topics=topic):
        pickle.dump(msg,outputFh)

    outputFh.close()
    print &amp;quot;[OK] DONE&amp;quot;

def menu (topicList):
    &amp;quot;&amp;quot;&amp;quot;
    Print the user menu and take input

    args:
        topicList: tuple containing list of topics

    returns:
        selection: user selection as integer
    &amp;quot;&amp;quot;&amp;quot;

    i = 0
    for topic in topicList:
        print '[{0}] {1}'.format(i, topic)
        i = i+1
    if len(topicList) &amp;gt; 1:
        print '[{0}] Extract all'.format(len(topicList))
        print '[{0}] Exit'.format(len(topicList) + 1)
    else:
        print '[{0}] Exit'.format(len(topicList))

    while True:
        print 'Enter a topic number to extract raw data from:'
        selection = raw_input('&amp;gt;&amp;gt;&amp;gt;')
        if int(selection) == len(topicList):
            return -92 # print all
        elif int(selection) == (len(topicList) +1):
            return -45 # exit
        elif (int(selection) &amp;lt; len(topicList)) and (int(selection) &amp;gt;= 0):
            return int(selection)
        else:
            print &amp;quot;[ERROR] Invalid input&amp;quot;

def readBagTopicList(bag):
    &amp;quot;&amp;quot;&amp;quot;
    Read and save the initial topic list from bag
    &amp;quot;&amp;quot;&amp;quot;
    print &amp;quot;[OK] Reading topics in this bag. Can take a while..&amp;quot;
    topicList = []
    for topic, msg, t in bag.read_messages():
        if topicList.count(topic) == 0:
            topicList.append (topic)

    print '{0} topics found:'.format(len(topicList))
    return topicList

if __name__ == &amp;quot;__main__&amp;quot;:
    run()
&lt;/pre&gt;
&lt;p&gt;I've &lt;a class="reference external" href="https://github.com/sanjayankur31/ros-work/blob/master/helper-scripts/extractRawInfo.py"&gt;hosted it on my github repository&lt;/a&gt;. It'll be easier to
read/download it from there if you need to.&lt;/p&gt;
</content><category term="Research"/><category term="Robotics"/></entry><entry><title>ROS groovy on Fedora 18</title><link href="https://ankursinha.in/2013/03/28/ros-groovy-on-fedora-18.html" rel="alternate"/><published>2013-03-28T04:33:00+00:00</published><updated>2013-03-28T04:33:00+00:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2013-03-28:/2013/03/28/ros-groovy-on-fedora-18.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external image-reference" href="http://ankursinha.in/wp/wp-content/uploads/2013/03/ros-groovy.png"&gt;&lt;img alt="ros-groovy" src="http://ankursinha.in/wp/wp-content/uploads/2013/03/ros-groovy.png?w=300" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="ros-what-is-ros"&gt;
&lt;h2&gt;ROS? What is ROS?&lt;/h2&gt;
&lt;p&gt;ROS is the &lt;a class="reference external" href="http://www.ros.org/"&gt;Robot Operating System&lt;/a&gt;. It provides a huge set of software
that can be used to robotics research. It provides simulators,
algorithms and well, a lot more. For example, it lets one interface with
the &lt;a class="reference external" href="http://www.willowgarage.com/pages/pr2/overview"&gt;PR2 robot&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;I've only learnt of ROS now, during â€¦&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external image-reference" href="http://ankursinha.in/wp/wp-content/uploads/2013/03/ros-groovy.png"&gt;&lt;img alt="ros-groovy" src="http://ankursinha.in/wp/wp-content/uploads/2013/03/ros-groovy.png?w=300" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="ros-what-is-ros"&gt;
&lt;h2&gt;ROS? What is ROS?&lt;/h2&gt;
&lt;p&gt;ROS is the &lt;a class="reference external" href="http://www.ros.org/"&gt;Robot Operating System&lt;/a&gt;. It provides a huge set of software
that can be used to robotics research. It provides simulators,
algorithms and well, a lot more. For example, it lets one interface with
the &lt;a class="reference external" href="http://www.willowgarage.com/pages/pr2/overview"&gt;PR2 robot&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;I've only learnt of ROS now, during my masters. However, if you're an
undergrad that is interested in AI and robotics, it's a great tool to
know. Look it up!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="groovy"&gt;
&lt;h2&gt;Groovy?!&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.ros.org/wiki/groovy"&gt;Ros Groovy&lt;/a&gt; is the latest ROS release. The older one is &lt;a class="reference external" href="http://ros.org/wiki/fuerte"&gt;Fuerte&lt;/a&gt;.
There are quite a few &lt;a class="reference external" href="http://www.ros.org/wiki/groovy#Major_Updates"&gt;changes in Groovy&lt;/a&gt;, one of the biggest ones
being the new build system &amp;quot;&lt;a class="reference external" href="http://www.ros.org/wiki/groovy#New_Build_System_-_catkin"&gt;Catkin&lt;/a&gt;&amp;quot;. A lot of the software has been
upgraded too. One of my project members gave Groovy a whirl and was
impressed with the improvements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ros-and-fedora"&gt;
&lt;h2&gt;ROS and Fedora??&lt;/h2&gt;
&lt;p&gt;For the time being, the &lt;a class="reference external" href="http://fedoraproject.org/wiki/SIGs/Robotics/ROS_Packaging"&gt;Robotics SIG is working on packaging Fuerte&lt;/a&gt;.
The new build system will take some time to figure out. While it works
well to compile from source, it doesn't quite work well when you want to
make stand alone packages. We plan to move to Groovy in good time, but
for now Fuerte will have to do. If you're interested in helping out,
give us a shout on the &lt;a class="reference external" href="https://admin.fedoraproject.org/mailman/listinfo/robotics"&gt;Robotics mailing list&lt;/a&gt;. There are quite a few
&lt;a class="reference external" href="https://bugzilla.redhat.com/buglist.cgi?list_id=1231339&amp;amp;short_desc=ros&amp;amp;classification=Fedora&amp;amp;query_format=advanced&amp;amp;bug_status=NEW&amp;amp;short_desc_type=anywords&amp;amp;component=Package%20Review&amp;amp;product=Fedora"&gt;packages that Rich has already submitted for review&lt;/a&gt; that could use
your help.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="why-groovy"&gt;
&lt;h2&gt;Why Groovy?&lt;/h2&gt;
&lt;p&gt;Well, like I said, Groovy seems to have quite a few improvements. My
project team, has indicated that we will switch to Groovy sometime soon.
I therefore decided to use Groovy from the start.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-groovy"&gt;
&lt;h2&gt;How Groovy?&lt;/h2&gt;
&lt;p&gt;The &lt;a class="reference external" href="http://www.ros.org/wiki/groovy/Installation/Fedora"&gt;install instructions on the ROS wiki&lt;/a&gt; work well. Do read the
complete document before you begin. I ended up hitting the some errors
already documented in the&lt;a class="reference external" href="http://www.ros.org/wiki/groovy/Installation/Fedora#Troubleshooting"&gt;troubleshooting section&lt;/a&gt; and had to rebuild
&lt;a class="reference external" href="http://www.pointclouds.org/downloads/"&gt;PCL&lt;/a&gt;. (Just so you know, building PCL can suck your system dry. It
took a couple of hours on my laptop which is a i5 2 core 4 thread
system. It used my processor continuously causing my laptop to overheat
and shut down twice. Keep your laptop near an AC when you build it!)&lt;/p&gt;
&lt;p&gt;A few unsolved errors persist. I've asked questions on the &lt;a class="reference external" href="http://answers.ros.org/questions/"&gt;ros askbot
instance&lt;/a&gt;. I will file bugs upstream if nothing comes of it in a while.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Tech"/><category term="Robotics"/></entry></feed>