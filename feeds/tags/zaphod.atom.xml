<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ankursinha.in/blog - Zaphod</title><link href="http://ankursinha.in/" rel="alternate"></link><link href="http://ankursinha.in/feeds/tags/zaphod.atom.xml" rel="self"></link><id>http://ankursinha.in/</id><updated>2016-02-28T16:52:27+00:00</updated><entry><title>New Zaphod release - v0.5.7</title><link href="http://ankursinha.in/2016/02/28/new-zaphod-release-v0-5-7.html" rel="alternate"></link><published>2016-02-28T16:52:27+00:00</published><updated>2016-02-28T16:52:27+00:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2016-02-28:/2016/02/28/new-zaphod-release-v0-5-7.html</id><summary type="html">&lt;p class="first last"&gt;I've released a new version of &lt;a class="reference external" href="https://github.com/sanjayankur31/zaphod"&gt;Zaphod&lt;/a&gt; - A LaTeX change tracking tool that I've been working on recently.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://ankursinha.in/2016/02/13/zaphod-a-latex-change-tracking-tool.html"&gt;I'd written about Zaphod recently&lt;/a&gt;. I've been making some tweaks to it - just some enhancements to the revision bit which will make it easier to use. The diff bit is still the same - I didn't see the need to make too many improvements there.&lt;/p&gt;
&lt;div class="section" id="new-revision-bits"&gt;
&lt;h2&gt;New revision bits&lt;/h2&gt;
&lt;p&gt;Now, it looks like this when you start it up:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;asinha&amp;#64;cs-as14aho-2-herts-ac-uk  latex-changes&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;201602281328&lt;/span&gt;-latexdiff-annotated&lt;span class="o"&gt;)]&lt;/span&gt;$ python3 ../zaphod/zaphod.py revise -m paper.tex -s src
&lt;span class="o"&gt;[&lt;/span&gt;Zaphod&lt;span class="o"&gt;]&lt;/span&gt; LaTeX files with annotations:
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; src/discussion.tex
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; src/introduction.tex
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; src/paper.tex
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; src/methods.tex

Pick file to revise? &lt;span class="m"&gt;1&lt;/span&gt;-4/Q/q:
&lt;/pre&gt;
&lt;p&gt;The idea here is that the user should be able to pick what file they want to edit. Previously, Zaphod just went file after file.&lt;/p&gt;
&lt;p&gt;Once you pick a file, it'll look like this:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
....
Pick file to revise? &lt;span class="m"&gt;1&lt;/span&gt;-4/Q/q: &lt;span class="nv"&gt;1&lt;/span&gt;

&lt;span class="o"&gt;======&lt;/span&gt; src/discussion.tex &lt;span class="o"&gt;======&lt;/span&gt;
+++ Addition found +++
&lt;span class="se"&gt;\s&lt;/span&gt;ection&lt;span class="o"&gt;{&lt;/span&gt;Discussion&lt;span class="o"&gt;}&lt;/span&gt;

Add a new file.

+++ Addition found +++
Accept addition? Y/N/Q/y/n/q: y
&lt;span class="o"&gt;[&lt;/span&gt;Zaphod&lt;span class="o"&gt;]&lt;/span&gt; Addition accepted.

&lt;span class="o"&gt;[&lt;/span&gt;Zaphod&lt;span class="o"&gt;]&lt;/span&gt; File src/discussion.tex revised and saved.
&lt;span class="o"&gt;[&lt;/span&gt;Zaphod&lt;span class="o"&gt;]&lt;/span&gt; LaTeX files with annotations:
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; src/introduction.tex
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; src/paper.tex
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; src/methods.tex

Pick file to revise? &lt;span class="m"&gt;1&lt;/span&gt;-3/Q/q:
&lt;/pre&gt;
&lt;p&gt;But, you can also make partial revisions. This is handy in situations where you have a long file and do not have the time to go over all of it at once. So, here's an example. I go over some changes, but I need to stop there for the moment:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
...
&lt;span class="o"&gt;[&lt;/span&gt;Zaphod&lt;span class="o"&gt;]&lt;/span&gt; LaTeX files with annotations:
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; src/introduction.tex
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; src/paper.tex
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; src/methods.tex

Pick file to revise? &lt;span class="m"&gt;1&lt;/span&gt;-3/Q/q: &lt;span class="nv"&gt;2&lt;/span&gt;

&lt;span class="o"&gt;======&lt;/span&gt; src/paper.tex &lt;span class="o"&gt;======&lt;/span&gt;
--- Deletion found ---
Tracking
--- Deletion found ---
Accept deletion? Y/N/Q/y/n/q: y
&lt;span class="o"&gt;[&lt;/span&gt;Zaphod&lt;span class="o"&gt;]&lt;/span&gt; Deletion accepted.

&lt;span class="o"&gt;======&lt;/span&gt; src/paper.tex &lt;span class="o"&gt;======&lt;/span&gt;
+++ Addition found +++
Visualising
+++ Addition found +++
Accept addition? Y/N/Q/y/n/q: y
&lt;span class="o"&gt;[&lt;/span&gt;Zaphod&lt;span class="o"&gt;]&lt;/span&gt; Addition accepted.

&lt;span class="o"&gt;======&lt;/span&gt; src/paper.tex &lt;span class="o"&gt;======&lt;/span&gt;
+++ Addition found +++
&lt;span class="se"&gt;\i&lt;/span&gt;nput&lt;span class="o"&gt;{&lt;/span&gt;discussion&lt;span class="o"&gt;}&lt;/span&gt;

+++ Addition found +++
Accept addition? Y/N/Q/y/n/q: q
Save partial file? Y/N/y/n: y
&lt;span class="o"&gt;[&lt;/span&gt;Zaphod&lt;span class="o"&gt;]&lt;/span&gt; Some files still have latexdiff annotations:
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; src/introduction.tex
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; src/methods.tex

Generate pdf? Y/y/N/n: n
&lt;span class="o"&gt;[&lt;/span&gt;Zaphod&lt;span class="o"&gt;]&lt;/span&gt; Not generating pdf.
&lt;span class="o"&gt;[&lt;/span&gt;Zaphod&lt;span class="o"&gt;]&lt;/span&gt; Following files have been revised &lt;span class="o"&gt;(&lt;/span&gt;maybe partially&lt;span class="o"&gt;)&lt;/span&gt;:
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; src/discussion.tex
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; src/paper.tex

Commit current changes? Y/y/N/n: n
&lt;span class="o"&gt;[&lt;/span&gt;Zaphod&lt;span class="o"&gt;]&lt;/span&gt; Exiting without committing.
&lt;/pre&gt;
&lt;p&gt;There's one catch here, though. Because I want to make absolutely sure that Zaphod doesn't make any changes &amp;quot;by mistake&amp;quot;, you'll have to either stash or commit these changes before you can run Zaphod again. This is just to be on the safer side. A better way would probably be for Zaphod to remember what files were partially revised, but I haven't implemented it at the moment. I'd actually just commit the changes - I mean, that's why we've got Git, right?&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;asinha&amp;#64;cs-as14aho-2-herts-ac-uk  latex-changes&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;201602281328&lt;/span&gt;-latexdiff-annotated *&lt;span class="o"&gt;)]&lt;/span&gt;$ python3 ../zaphod/zaphod.py revise -m paper.tex -s src
Modifed or untracked files found.
git status output:
 M src/discussion.tex
 M src/paper.tex

Please stash or commit and rerun Zaphod.
&lt;/pre&gt;
&lt;p&gt;That's it. I think it's a lot easier to use now, and in this design addresses a lot more use cases than it did before.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/sanjayankur31/zaphod/releases"&gt;Give it a go&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/sanjayankur31/zaphod/issues/new"&gt;let me know&lt;/a&gt; if things break - I've tested it myself, but only on a mock document.&lt;/p&gt;
&lt;/div&gt;
</content><category term="LaTeX"></category><category term="Programming"></category><category term="Git"></category><category term="Fedora"></category><category term="Zaphod"></category></entry><entry><title>Zaphod - a LaTeX change tracking tool</title><link href="http://ankursinha.in/2016/02/13/zaphod-a-latex-change-tracking-tool.html" rel="alternate"></link><published>2016-02-13T17:16:24+00:00</published><updated>2016-02-13T17:16:24+00:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2016-02-13:/2016/02/13/zaphod-a-latex-change-tracking-tool.html</id><summary type="html">&lt;p class="first last"&gt;Introducing &lt;a class="reference external" href="https://github.com/sanjayankur31/zaphod"&gt;Zaphod&lt;/a&gt; - a &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; script that attempts to help &lt;a class="reference external" href="https://en.wikipedia.org/wiki/LaTeX"&gt;LaTeX&lt;/a&gt; users collaborate over their academic writing. It uses the power of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Git_(software)"&gt;Git&lt;/a&gt; to track changes, &lt;a class="reference external" href="https://www.ctan.org/pkg/latexdiff?lang=en"&gt;latexdiff&lt;/a&gt; to generate a PDF with annotated additions and removals from the document, and provides a simple interactive review tool that lets the user pick what changes they want to accept. You can use Zaphod to track changes in your LaTeX documents.&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="the-name"&gt;
&lt;h2&gt;The name&lt;/h2&gt;
&lt;p&gt;Well, I needn't say much here, need I? &lt;a class="reference external" href="https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy"&gt;Hitchhiker's guide to the galaxy&lt;/a&gt;, anyone?&lt;/p&gt;
&lt;p&gt;Of course, a good tip to naming a new open source tool is to pick a project name that is easily searchable. With &lt;a class="reference external" href="https://en.wikipedia.org/wiki/LaTeX"&gt;LaTeX&lt;/a&gt; related searches, it's a tad difficult - the addition of the word to LaTeX to anything tends to generate rather undesirable results. Fortunately, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Zaphod_Beeblebrox"&gt;Zaphod&lt;/a&gt; seems to have been spared the honour..&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="latex-is-great"&gt;
&lt;h2&gt;LaTeX is great!&lt;/h2&gt;
&lt;p&gt;Academics really like &lt;a class="reference external" href="https://en.wikipedia.org/wiki/LaTeX"&gt;LaTeX&lt;/a&gt; - it's a brilliant tool, the best one in my opinion, for academic writing. Using LaTeX is widely accepted to be more complex than using a simple &lt;a class="reference external" href="https://en.wikipedia.org/wiki/WYSIWYG"&gt;WYSIWYG&lt;/a&gt; tool like Word. One writes in plain text using LaTeX constructs and then compiles it to produce a brilliantly formatted PDF. The point of using LaTeX is that you get to focus on the matter - the actual text, and LaTeX largely takes care of the look, the formatting and all that. There are &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Comparison_of_TeX_editors"&gt;quite a few applications&lt;/a&gt; that provide one click compilation and other features, by the way, so you don't absolutely have to use the command line. There's even &lt;a class="reference external" href="https://www.lyx.org/"&gt;Lyx&lt;/a&gt; which is quite close to a WYSIWYG application for LaTeX.&lt;/p&gt;
&lt;div class="section" id="tracking-changes"&gt;
&lt;h3&gt;Tracking changes&lt;/h3&gt;
&lt;p&gt;Another limitation of using LaTeX is that you can't easily see what's changed between versions of PDFs. This makes collaboration using LaTeX difficult.&lt;/p&gt;
&lt;p&gt;Word, for example, has a very useful &amp;quot;&lt;a class="reference external" href="https://support.office.com/en-us/article/Track-changes-while-you-edit-024158a3-7e62-4f05-8bb7-dc3ecf0295c4"&gt;Track changes&lt;/a&gt;&amp;quot; feature that lets you record your changes and then lets the next person easily review them and decide which ones are to be applied.&lt;/p&gt;
&lt;p&gt;There are various tools strewn over the Internet that do help with this, but they aren't quite as convenient as I'd have hoped. Some examples:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.ctan.org/pkg/latexdiff?lang=en"&gt;latexdiff&lt;/a&gt; (Zaphod is based on this and uses it to generate changes - why reinvent the wheel?)&lt;/li&gt;
&lt;li&gt;the &lt;a class="reference external" href="http://www.ctan.org/pkg/changes"&gt;changes&lt;/a&gt; package&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://trackchanges.sourceforge.net/"&gt;track changes&lt;/a&gt; (didn't try this out)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="so-zaphod"&gt;
&lt;h2&gt;So - Zaphod&lt;/h2&gt;
&lt;p&gt;Various editors make writing LaTeX quite easy. That isn't much of an issue any more. Zaphod tries to address the second issue - tracking changes. It combines existing tools to implement a certain workflow where you can write text, send it to people, verify and include their changes.&lt;/p&gt;
&lt;div class="section" id="the-workflow-an-example"&gt;
&lt;h3&gt;The workflow - an example&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Create a Git repository for your LaTeX paper.&lt;/li&gt;
&lt;li&gt;Write your draft.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'm using a &lt;a class="reference external" href="https://github.com/sanjayankur31/latex-changes"&gt;test repository&lt;/a&gt; which looks like this:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;asinha&amp;#64;ankur  latex-changes&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;master&lt;/span&gt;&lt;span class="o"&gt;=)]&lt;/span&gt;$ tree
.
├── LICENSE
├── README.rst
└── src
    ├── abstract.tex
    ├── conclusion.tex
    ├── discussion.tex
    ├── introduction.tex
    ├── Makefile
    ├── methods.tex
    ├── paper.pdf
    ├── paper.tex
    └── results.tex

&lt;span class="m"&gt;1&lt;/span&gt; directory, &lt;span class="m"&gt;19&lt;/span&gt; files
&lt;span class="o"&gt;[&lt;/span&gt;asinha&amp;#64;ankur  latex-changes&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;master&lt;/span&gt;&lt;span class="o"&gt;=)]&lt;/span&gt;$
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Commit your changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Your repository will look something like this:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;asinha&amp;#64;ankur  latex-changes&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;master&lt;/span&gt;&lt;span class="o"&gt;=)]&lt;/span&gt;$ git lg
* 280fef6 - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt; days ago&lt;span class="o"&gt;)&lt;/span&gt; Subsection &lt;span class="nb"&gt;test&lt;/span&gt; — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;HEAD -&amp;gt; master, origin/master, origin/HEAD&lt;span class="o"&gt;)&lt;/span&gt;
* 0c0238b - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt; days ago&lt;span class="o"&gt;)&lt;/span&gt; Moved script to its own repository — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt;
....
* 164e0d3 - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt; days ago&lt;span class="o"&gt;)&lt;/span&gt; Add vim temp files to gitignore — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt;
* bd02966 - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt; days ago&lt;span class="o"&gt;)&lt;/span&gt; Commit fake paper — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt;
* 11ad32b - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt; days ago&lt;span class="o"&gt;)&lt;/span&gt; Initial commit — Ankur Sinha
&lt;/pre&gt;
&lt;p&gt;This is all pretty standard Git usage. Now, the interesting part:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Send your PDF and LaTeX sources to your collaborator (or give them access to your repository).&lt;/li&gt;
&lt;li&gt;They make changes and commit them. Now, your Git revision tree will look something like this:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;asinha&amp;#64;ankur  latex-changes&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;master&lt;/span&gt;&lt;span class="o"&gt;=)]&lt;/span&gt;$ git lg
* 46d0c11 - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt; hours ago&lt;span class="o"&gt;)&lt;/span&gt; Add a new file. — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;HEAD -&amp;gt; master, origin/master, origin/HEAD&lt;span class="o"&gt;)&lt;/span&gt;
* ba4b06d - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt; days ago&lt;span class="o"&gt;)&lt;/span&gt; Update readme — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt;
* 53033b8 - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt; days ago&lt;span class="o"&gt;)&lt;/span&gt; Remove example output directory — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt;
* d82266b - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt; days ago&lt;span class="o"&gt;)&lt;/span&gt; More subsection changes — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt;
* 280fef6 - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt; days ago&lt;span class="o"&gt;)&lt;/span&gt; Subsection &lt;span class="nb"&gt;test&lt;/span&gt; — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt;
  ...
&lt;/pre&gt;
&lt;p&gt;Zaphod lets you specify two Git revisions and generates a list of changes between these two. So, for example, running the diff command would do this:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;asinha&amp;#64;ankur  latex-changes&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;master&lt;/span&gt;&lt;span class="o"&gt;=)]&lt;/span&gt;$ python3 ../zaphod/zaphod.py diff -r bd02966 -m paper.tex -s src
 ....
 ....
 COMPLETE: The following branches have been created:
 &lt;span class="m"&gt;201602131935&lt;/span&gt;-latexdiff-rev1: Revision &lt;span class="m"&gt;1&lt;/span&gt;.
 &lt;span class="m"&gt;201602131935&lt;/span&gt;-latexdiff-rev2: Revision &lt;span class="m"&gt;2&lt;/span&gt;.
 &lt;span class="m"&gt;201602131935&lt;/span&gt;-latexdiff-annotated: Branch with annotated versions of sources and diff pdf.
 The generated diff pdf is: src/diff-bd02966-master.pdf.
&lt;/pre&gt;
&lt;p&gt;and your repository now looks like this:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
* 9e58178 - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; minutes ago&lt;span class="o"&gt;)&lt;/span&gt; Save annotated changes between bd02966 and master — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;HEAD -&amp;gt; &lt;span class="m"&gt;201602131935&lt;/span&gt;-latexdiff-annotated&lt;span class="o"&gt;)&lt;/span&gt;
* 46d0c11 - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt; hours ago&lt;span class="o"&gt;)&lt;/span&gt; Add a new file. — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;origin/master, origin/HEAD, master, &lt;span class="m"&gt;201602131935&lt;/span&gt;-latexdiff-rev2&lt;span class="o"&gt;)&lt;/span&gt;
* ba4b06d - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt; days ago&lt;span class="o"&gt;)&lt;/span&gt; Update readme — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt;
....
* bd02966 - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt; days ago&lt;span class="o"&gt;)&lt;/span&gt; Commit fake paper — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;201602131935&lt;/span&gt;-latexdiff-rev1&lt;span class="o"&gt;)&lt;/span&gt;
* 11ad32b - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt; days ago&lt;span class="o"&gt;)&lt;/span&gt; Initial commit — Ankur Sinha
&lt;/pre&gt;
&lt;p&gt;Zaphod uses latexdiff to check for differences between the two revisions, marks them as branches for easy reference, and then creates a new branch with annotated source files and a nice pdf which looks like this:&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20160213-zaphod-screenshot.png"&gt;&lt;img alt="Screenshot of annotated PDF" class="align-center" src="http://ankursinha.in/images/20160213-zaphod-screenshot.png" style="height: 400.0px;" /&gt;&lt;/a&gt;
&lt;p&gt;That looks rather nice, isn't it? And it resembles what a Word document with annotations looks like too. latexdiff has various markup styles which can be passed to Zaphod as arguments to modify how the annotations look. The most important part here is that because Zaphod is using mighty Git, there's no chance of you losing any work at all. &lt;em&gt;In fact, if you have untracked and uncommitted changes in your repository, Zaphod refuses to run at all.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Now, a look at how the revise function works:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;asinha&amp;#64;ankur  latex-changes&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;201602131935&lt;/span&gt;-latexdiff-annotated&lt;span class="o"&gt;)]&lt;/span&gt;$ python3 ../zaphod/zaphod.py revise -s src/ -m paper.tex
Working on file: src/paper.tex.
File under revision: src/paper.tex

Deletion found:
---
Tracking
---

Delete? Y/N/y/n: y
Deleted

File under revision: src/paper.tex

Addition found:
+++
Visualising
+++

Add? Y/N/y/n: n
Skipped

File under revision: src/paper.tex

Addition found:
+++
&lt;span class="se"&gt;\i&lt;/span&gt;nput&lt;span class="o"&gt;{&lt;/span&gt;discussion&lt;span class="o"&gt;}&lt;/span&gt;

+++

Add? Y/N/y/n:
....
....
....
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;201602131935&lt;/span&gt;-latexdiff-annotated 3ba757f&lt;span class="o"&gt;]&lt;/span&gt; Save after going through changes
 &lt;span class="m"&gt;5&lt;/span&gt; files changed, &lt;span class="m"&gt;34&lt;/span&gt; insertions&lt;span class="o"&gt;(&lt;/span&gt;+&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="m"&gt;56&lt;/span&gt; deletions&lt;span class="o"&gt;(&lt;/span&gt;-&lt;span class="o"&gt;)&lt;/span&gt;
 create mode &lt;span class="m"&gt;100644&lt;/span&gt; src/accepted.pdf
 rewrite src/paper.tex &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;72&lt;/span&gt;%&lt;span class="o"&gt;)&lt;/span&gt;

COMPLETE: Changes accepted and committed.
The generated pdf is: src//accepted.pdf.
You can merge this branch to master &lt;span class="k"&gt;if&lt;/span&gt; you wish.
&lt;/pre&gt;
&lt;p&gt;and your repository looks like this:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;asinha&amp;#64;ankur  latex-changes&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;201602131935&lt;/span&gt;-latexdiff-annotated&lt;span class="o"&gt;)]&lt;/span&gt;$ git lg
* 3ba757f - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;53&lt;/span&gt; seconds ago&lt;span class="o"&gt;)&lt;/span&gt; Save after going through changes — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;HEAD -&amp;gt; &lt;span class="m"&gt;201602131935&lt;/span&gt;-latexdiff-annotated&lt;span class="o"&gt;)&lt;/span&gt;
* 9e58178 - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt; minutes ago&lt;span class="o"&gt;)&lt;/span&gt; Save annotated changes between bd02966 and master — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt;
* 46d0c11 - &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt; hours ago&lt;span class="o"&gt;)&lt;/span&gt; Add a new file. — Ankur Sinha &lt;span class="o"&gt;(&lt;/span&gt;Ankur Sinha Gmail&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;origin/master, origin/HEAD, master, &lt;span class="m"&gt;201602131935&lt;/span&gt;-latexdiff-rev2&lt;span class="o"&gt;)&lt;/span&gt;
....
&lt;/pre&gt;
&lt;p&gt;The new pdf, accepted.pdf, is the latest version of your document and includes the changes you think should make the cut. If you're happy with these, you can simply merge this branch into master, and continue working. If you're not, you can go back to master, or another commit, and tinker some more - we're using Git, do what you want. In line with what I did above, the PDF looks like this:&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20160213-zaphod-2.png"&gt;&lt;img alt="Screenshot of annotated PDF" class="align-center" src="http://ankursinha.in/images/20160213-zaphod-2.png" style="height: 400.0px;" /&gt;&lt;/a&gt;
&lt;p&gt;Pretty neat, huh? At least I think so ;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="give-it-a-go"&gt;
&lt;h2&gt;Give it a go!&lt;/h2&gt;
&lt;p&gt;I've tested the tool out myself on a number of different cases, but I'm quite certain I've missed some and there are always bugs that I haven't run into yet. It's a rather simple script in its current version - not all the commands that are called are checked for errors and so on. As I get more time in the future, I'll keep improving it. For the time being, though, it does work.&lt;/p&gt;
&lt;p&gt;Give it a go and let me know what you think? It's &lt;a class="reference external" href="https://github.com/sanjayankur31/zaphod"&gt;hosted on Github&lt;/a&gt;, so feel free to report issues and open pull requests. Let's make LaTeX even more usable!&lt;/p&gt;
&lt;/div&gt;
</content><category term="LaTeX"></category><category term="Programming"></category><category term="Git"></category><category term="Fedora"></category><category term="Zaphod"></category></entry></feed>