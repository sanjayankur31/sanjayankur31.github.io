<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ankursinha.in/blog - Fedora</title><link href="http://ankursinha.in/" rel="alternate"></link><link href="http://ankursinha.in/feeds/tags/fedora.atom.xml" rel="self"></link><id>http://ankursinha.in/</id><updated>2018-10-13T18:11:53+01:00</updated><entry><title>NeuroFedora update: week 41</title><link href="http://ankursinha.in/2018/10/13/neurofedora-update-week-41.html" rel="alternate"></link><published>2018-10-13T18:11:53+01:00</published><updated>2018-10-13T18:11:53+01:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2018-10-13:/2018/10/13/neurofedora-update-week-41.html</id><summary type="html">&lt;p class="first last"&gt;A quick update on &lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/NeuroFedora"&gt;NeuroFedora&lt;/a&gt; at the end of week 41.&lt;/p&gt;
</summary><content type="html">&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20181005-NeuroFedoraLogo01.png"&gt;&lt;img alt="NeuroFedora logo!" class="text-center img-responsive pagination-centered" src="http://ankursinha.in/images/20181005-NeuroFedoraLogo01.png" style="width: 30%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;&lt;a class="reference external" href="https://pagure.io/design/issue/602"&gt;NeuroFedora logo by Terezahl from the Fedora Design Team&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In week 41, we finally announced &lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/NeuroFedora"&gt;NeuroFedora&lt;/a&gt; to the community on the &lt;a class="reference external" href="https://lists.fedoraproject.org/archives/list/devel&amp;#64;lists.fedoraproject.org/message/VXN4UBCNIL6BUCDRN55IGVK3IMO3HF6C/"&gt;mailing
list&lt;/a&gt;
and on the &lt;a class="reference external" href="https://communityblog.fedoraproject.org/neurofedora-sig-call-for-participation/"&gt;Fedora Community Blog&lt;/a&gt;.
So, it is officially a thing!&lt;/p&gt;
&lt;p&gt;There is a lot of software available in &lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/NeuroFedora"&gt;NeuroFedora&lt;/a&gt; already. You can see the
list &lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/NeuroFedora/PackageSet"&gt;here&lt;/a&gt;. If
you use software that is not on our list, please suggest it to us using the
&lt;a class="reference external" href="https://goo.gl/forms/j6AJ82yOh78MPxby1"&gt;suggestion form&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In week 41:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://nest-simulator.org"&gt;NEST&lt;/a&gt; was updated to &lt;a class="reference external" href="https://github.com/nest/nest-simulator/releases/tag/v2.16.0"&gt;version 2.16.0&lt;/a&gt;. It is in
testing for both &lt;a class="reference external" href="https://bodhi.fedoraproject.org/updates/FEDORA-2018-22afaeeee4"&gt;Fedora 28&lt;/a&gt; and
&lt;a class="reference external" href="https://bodhi.fedoraproject.org/updates/FEDORA-2018-6a80c3dbb1"&gt;Fedora 29&lt;/a&gt;. They
should both move to the stable repositories in a few days. This new version
does not support 32 bit architectures, so I've had to drop support for those.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/INCF/libneurosim"&gt;libneurosim&lt;/a&gt; has now been submitted for &lt;a class="reference external" href="https://bugzilla.redhat.com/show_bug.cgi?id=1638968"&gt;review&lt;/a&gt;. &lt;a class="reference external" href="https://nest-simulator.org"&gt;NEST&lt;/a&gt; must be
built with &lt;a class="reference external" href="https://github.com/INCF/libneurosim"&gt;libneurosim&lt;/a&gt; support for &lt;a class="reference external" href="https://github.com/NeuralEnsemble/PyNN"&gt;PyNN&lt;/a&gt; to work with it properly. So &lt;a class="reference external" href="https://github.com/NeuralEnsemble/PyNN"&gt;PyNN&lt;/a&gt;
will have to wait until this review is approved and &lt;a class="reference external" href="https://nest-simulator.org"&gt;NEST&lt;/a&gt; rebuilt.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I am hoping to spend some time on &lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/NeuroFedora"&gt;NeuroFedora&lt;/a&gt; every week, and I will provide
regular updates as I do. Feedback is always welcome. You can get in touch with
us &lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/NeuroFedora#Communication_and_getting_help"&gt;here&lt;/a&gt;.&lt;/p&gt;
</content><category term="Community"></category><category term="Computational neuroscience"></category><category term="Free software"></category><category term="NEST"></category><category term="Fedora"></category><category term="NeuroFedora"></category></entry><entry><title>NeuroFedora: towards a ready to use Free/Open source environment for neuroscientists</title><link href="http://ankursinha.in/2018/10/06/neurofedora-towards-a-ready-to-use-free-open-source-environment-for-neuroscientists.html" rel="alternate"></link><published>2018-10-06T00:19:32+01:00</published><updated>2018-10-06T00:19:32+01:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2018-10-06:/2018/10/06/neurofedora-towards-a-ready-to-use-free-open-source-environment-for-neuroscientists.html</id><summary type="html">&lt;p class="first last"&gt;I have recently resurrected the &lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/NeuroFedora"&gt;NeuroFedora SIG&lt;/a&gt;. We aim to make
&lt;a class="reference external" href="https://getfedora.org"&gt;Fedora&lt;/a&gt; a ready to use platform for neuroscientists, so that they can
focus on the science. Read on to learn more!&lt;/p&gt;
</summary><content type="html">&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20181005-NeuroFedoraLogo01.png"&gt;&lt;img alt="NeuroFedora logo!" class="text-center img-responsive pagination-centered" src="http://ankursinha.in/images/20181005-NeuroFedoraLogo01.png" style="width: 30%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;&lt;a class="reference external" href="https://pagure.io/design/issue/602"&gt;NeuroFedora logo by Terezahl from the Fedora Design Team&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I've recently resurrected the &lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/NeuroFedora"&gt;NeuroFedora SIG&lt;/a&gt;. Many thanks to &lt;a class="reference external" href="https://fedoraproject.org/wiki/User:Ignatenkobrain"&gt;Igor&lt;/a&gt; and the others who had
worked on it in the past and have given us a firm base to build on.&lt;/p&gt;
&lt;div class="section" id="the-goal"&gt;
&lt;h2&gt;The goal&lt;/h2&gt;
&lt;p&gt;The (current) goal of the &lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/NeuroFedora"&gt;NeuroFedora SIG&lt;/a&gt; is to make Fedora an easy to use
platform for neuroscientists. We aim to do this by making commonly used
Neuroscience software easily installable on a &lt;a class="reference external" href="https://getfedora.org"&gt;Fedora&lt;/a&gt; system.&lt;/p&gt;
&lt;p&gt;Neuroscience is an extremely multidisciplinary field. It brings together
mathematicians, chemists, biologists, physicists, psychologists, engineers
(electrical and others), computer scientists and more. A lot of software is used
nowadays in Neuroscience for:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;data collection, analysis, and sharing&lt;/li&gt;
&lt;li&gt;lots of image processing (a lot of ML is used here, think Data Science)&lt;/li&gt;
&lt;li&gt;simulation of brain networks (&lt;a class="reference external" href="https://neuron.yale.edu/neuron/"&gt;NEURON&lt;/a&gt;, &lt;a class="reference external" href="https://nest-simulator.org"&gt;Nest&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/BhallaLab/moose"&gt;Moose&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/NeuralEnsemble/PyNN"&gt;PyNN&lt;/a&gt;, &lt;a class="reference external" href="http://briansimulator.org/"&gt;Brian&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;dissemination of scientific results (peer reviewed and otherwise, think
&lt;a class="reference external" href="http://tug.org/"&gt;LaTeX&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Given that a large proportion of neuroscientists are not trained in
computer science, a lot of time and effort is spent setting up systems,
installing software (often building whole &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Dependency_hell"&gt;dependency chains&lt;/a&gt; from source). This can be
hard for people not well-versed in build systems and so on.&lt;/p&gt;
&lt;p&gt;So, at &lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/NeuroFedora"&gt;NeuroFedora&lt;/a&gt;, we will provide a ready to use &lt;a class="reference external" href="https://getfedora.org"&gt;Fedora&lt;/a&gt; based system for
neuroscientists to work with, so they can quickly get their environment set up
and work on the science.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="why-fedora"&gt;
&lt;h2&gt;Why Fedora?&lt;/h2&gt;
&lt;p&gt;For one, I have been a &lt;a class="reference external" href="https://fedoraproject.org/wiki/User:Ankursinha"&gt;contributor&lt;/a&gt; for a while and know the
&lt;a class="reference external" href="https://apps.fedoraproject.org/"&gt;community and the infrastructure&lt;/a&gt; quite
well. That applies to me and others from the &lt;a class="reference external" href="https://getfedora.org"&gt;Fedora&lt;/a&gt; community that may work on
this and not the research community in general.&lt;/p&gt;
&lt;p&gt;Technically, there are many advantages of using &lt;a class="reference external" href="https://getfedora.org"&gt;Fedora&lt;/a&gt; as a base.
Fedora is closely linked to the &lt;a class="reference external" href="https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux"&gt;Red Hat Enterprise Linux&lt;/a&gt;
eco system---which &lt;a class="reference external" href="https://www.centos.org/"&gt;Cent OS&lt;/a&gt; is a part of and
&lt;a class="reference external" href="https://www.scientificlinux.org/about/"&gt;Scientific Linux is&lt;/a&gt; is based on
too (Recently, &lt;a class="reference external" href="https://coreos.com/"&gt;CoreOS also joined the Red Hat family&lt;/a&gt;). RPM based systems are commonly deployed in
supercomputers and clusters. So, making this software available on &lt;a class="reference external" href="https://getfedora.org"&gt;Fedora&lt;/a&gt; also
makes it simpler to make it available on these systems.  Additionally, the
&lt;a class="reference external" href="https://getfedora.org"&gt;Fedora&lt;/a&gt; community is promoting &lt;a class="reference external" href="https://flatpak.org/"&gt;Flatpaks&lt;/a&gt;, and working to permit multiple
versions of software via the &lt;a class="reference external" href="https://docs.fedoraproject.org/en-US/modularity/"&gt;modularity&lt;/a&gt; system. &lt;a class="reference external" href="https://getfedora.org"&gt;Fedora&lt;/a&gt; also supports &lt;a class="reference external" href="https://www.docker.com/"&gt;Docker&lt;/a&gt;
very &lt;a class="reference external" href="https://fedoraproject.org/wiki/Docker"&gt;well&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="join-us"&gt;
&lt;h2&gt;Join us!&lt;/h2&gt;
&lt;p&gt;Packaging software is only &lt;em&gt;one&lt;/em&gt; way in which one can contribute.  Writing docs
and answering questions about the software in &lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/NeuroFedora"&gt;NeuroFedora&lt;/a&gt; are other ways too,
for example.  If you are interested in neuroscience and in promoting &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Open_science"&gt;Open
Science&lt;/a&gt;, please consider
joining the SIG. You can get in touch with us via one of our many
&lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/NeuroFedora#Communication_and_getting_help"&gt;communication channels&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This invitation extends to all--undergraduates, post-graduates, trainee
researchers (PhD candidates like me), professional researchers, hobbyists, and
everyone else.  If you work in the field already, it is a great way of
supporting the research community. For others, it is a great place to
learn about neuroscience, and  &lt;a class="reference external" href="https://www.fsf.org/blogs/community/user-liberation-watch-and-share-our-new-video"&gt;Free Software&lt;/a&gt;
and the various technical skills that go into developing software.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="current-status"&gt;
&lt;h2&gt;Current status&lt;/h2&gt;
&lt;p&gt;We track the software we are working on &lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/NeuroFedora/PackageSet"&gt;here&lt;/a&gt;. A lot of
software is now ready to use in Fedora. This includes various Python libraries
and simulators such as &lt;a class="reference external" href="https://nest-simulator.org"&gt;Nest&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/BhallaLab/moose"&gt;Moose&lt;/a&gt;. &lt;a class="reference external" href="https://neuron.yale.edu/neuron/"&gt;Neuron&lt;/a&gt;, &lt;a class="reference external" href="http://briansimulator.org/"&gt;Brian&lt;/a&gt;, and &lt;a class="reference external" href="https://github.com/NeuralEnsemble/PyNN"&gt;PyNN&lt;/a&gt; are all in
the pipeline. All of &lt;a class="reference external" href="http://tug.org/texlive/"&gt;TeX Live&lt;/a&gt; is also available in
&lt;a class="reference external" href="https://getfedora.org"&gt;Fedora&lt;/a&gt;. If there is other Free/Open source software that you use which isn't
on our list, please let us know.  If you can help maintain it with us, that'll
be even better.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fedora-free-software-and-science"&gt;
&lt;h2&gt;Fedora/Free software and Science&lt;/h2&gt;
&lt;p&gt;Open science shares the &lt;a class="reference external" href="https://www.gnu.org/philosophy/"&gt;philosophy of FOSS&lt;/a&gt;. The data, the tools, the results, should
be accessible to all to understand, use, learn from, and develop. More and more
researchers are making it a point to keep Science as open as possible whether
it is to do with the &lt;a class="reference external" href="http://opensourceforneuroscience.org/"&gt;tools&lt;/a&gt; or
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Open_access"&gt;dissemination&lt;/a&gt; of their
findings. &lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/NeuroFedora"&gt;NeuroFedora&lt;/a&gt; hopes to aid this movement. Come, join us!&lt;/p&gt;
&lt;/div&gt;
</content><category term="Community"></category><category term="Computational neuroscience"></category><category term="Fedora"></category><category term="Free software"></category><category term="Linux"></category><category term="NEST"></category><category term="Neuron"></category><category term="Numpy"></category><category term="Pandas"></category><category term="Planet"></category><category term="Python"></category><category term="Reproducible research"></category><category term="Sumatra"></category><category term="TeX"></category></entry><entry><title>Using the Connfa open source conference management software set: the CMS</title><link href="http://ankursinha.in/2018/06/22/using-the-connfa-open-source-conference-management-software-set-the-cms.html" rel="alternate"></link><published>2018-06-22T23:36:23+01:00</published><updated>2018-06-22T23:36:23+01:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2018-06-22:/2018/06/22/using-the-connfa-open-source-conference-management-software-set-the-cms.html</id><summary type="html">&lt;p class="first last"&gt;The &lt;a class="reference external" href="http://connfa.com/"&gt;Connfa&lt;/a&gt; open source suite looks like a great set of tools
for conference management. It consists of a web application, a
central CMS integration server, and mobile applications for both
Android and iOS. I was looking at how one could use the mobile
applications. The mobile applications get their data from the
integration server, which provides an API. So, I looked at how to set
it up and document my findings in this post.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;The &lt;a class="reference external" href="http://connfa.com/"&gt;Connfa&lt;/a&gt; open source suite looks like a great set of tools for conference
management. It consists of a web application, a central CMS integration server,
and mobile applications for both Android and iOS. I was looking at how one
could use the mobile applications. The mobile applications get their data from
the integration server, which provides an API. So, I looked at how to set it up
and document my findings in this post.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="http://connfa.com/"&gt;Connfa&lt;/a&gt; CMS server is a php application that uses a MySQL database.  To
begin with, the documentation here is quite good:
&lt;a class="reference external" href="http://connfa.com/documentation/"&gt;http://connfa.com/documentation/&lt;/a&gt;.  However, as is usually seen, it takes a
few tweaks to deploy it.  These steps are therefore, Fedora 28 specific.&lt;/p&gt;
&lt;p&gt;On Fedora, one needs to use php71 from remi's repository:
&lt;a class="reference external" href="https://blog.remirepo.net/pages/Config-en"&gt;https://blog.remirepo.net/pages/Config-en&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo dnf install php71 composer php71-php-mysqlnd mariadb httpd mariadb-server php71-php-xml
sudo systemctl start php71-php-fpm
sudo systemctl start httpd
sudo systemctl start mysqld
module load php71
php --version
&lt;/pre&gt;
&lt;p&gt;This is because the tool doesn't work with the latest version of php that's in
Fedora 28. The tool also has a bug or two, so I used this fork that appears to
have a bugfix:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/d-i-t-a/connfa-integration-server/tree/develop"&gt;https://github.com/d-i-t-a/connfa-integration-server/tree/develop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then, one must set up &lt;a class="reference external" href="https://mariadb.org/"&gt;Mariadb&lt;/a&gt; as explained here:
&lt;a class="reference external" href="https://fedoraproject.org/wiki/MariaDB"&gt;https://fedoraproject.org/wiki/MariaDB&lt;/a&gt;. Note that &lt;a class="reference external" href="https://mariadb.org/"&gt;Mariadb&lt;/a&gt; is an Open source
MySQL implementation.&lt;/p&gt;
&lt;p&gt;One must also create a database as explained in the wiki page, and a user that
connfa can use, which must match the values in the &lt;code&gt;env&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;On Fedora, I enabled the &lt;code&gt;UserDir&lt;/code&gt; httpd extension, and placed the
connfa-integration-server in &lt;code&gt;~/public_html/&lt;/code&gt;, since I didn't want to
work as root in &lt;code&gt;/var/www/html&lt;/code&gt; all the time. &lt;code&gt;httpd&lt;/code&gt; will needs to
be started and enabled:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo systemctl start httpd&lt;span class="p"&gt;;&lt;/span&gt; sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; httpd
&lt;/pre&gt;
&lt;p&gt;On Fedora, Selinux must be asked to allow access to UserDirs:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo setsebool -P httpd_read_user_content &lt;span class="m"&gt;1&lt;/span&gt;
sudo setsebool -P httpd_unified &lt;span class="m"&gt;1&lt;/span&gt;
sudo setsebool -P httpd_can_network_connect_db &lt;span class="m"&gt;1&lt;/span&gt;
sudo setsebool -P httpd_can_network_connect &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;One can follow the steps from here next:
&lt;a class="reference external" href="http://connfa.com/integration-server/server-requirements"&gt;http://connfa.com/integration-server/server-requirements&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also run &lt;code&gt;composer update&lt;/code&gt; to update the php bits.&lt;/p&gt;
&lt;p&gt;Then, update the env file and so on as explained here:
&lt;a class="reference external" href="http://connfa.com/integration-server/install/"&gt;http://connfa.com/integration-server/install/&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
php artisan key:generate &lt;span class="c1"&gt;#sets the keys in the env file
&lt;/span&gt;php artisan password:change --name&lt;span class="o"&gt;=&lt;/span&gt;admin --password&lt;span class="o"&gt;=&lt;/span&gt;connfa18
&lt;/pre&gt;
&lt;p&gt;The site should be accessible at &lt;a class="reference external" href="http://localhost"&gt;http://localhost&lt;/a&gt;/~&amp;lt;username&amp;gt;/public/login/
The username is &lt;code&gt;admin&amp;#64;test.com&lt;/code&gt; here.&lt;/p&gt;
&lt;p&gt;The API is accessible at:
&lt;a class="reference external" href="http://localhost"&gt;http://localhost&lt;/a&gt;/~&amp;lt;username&amp;gt;/public/api/v2/cns-2018/checkUpdates&lt;/p&gt;
&lt;p&gt;I did have quite a few issues with permissions, but then I'm neither a web
developer nor a server administrator, so my skills in the department are rather
limited.&lt;/p&gt;
&lt;p&gt;I'll look at the Android application next, and hopefully, I'll be able to sync
it up with the CMS server.&lt;/p&gt;
</content><category term="Community"></category><category term="Conference"></category><category term="Android"></category><category term="Fedora"></category></entry><entry><title>Next round of Fedora classroom sessions: call for instructors</title><link href="http://ankursinha.in/2018/06/07/next-round-of-fedora-classroom-sessions-call-for-instructors.html" rel="alternate"></link><published>2018-06-07T10:50:39+01:00</published><updated>2018-06-07T10:50:39+01:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2018-06-07:/2018/06/07/next-round-of-fedora-classroom-sessions-call-for-instructors.html</id><summary type="html">&lt;p class="first last"&gt;We are looking for instructors for the next round of &lt;a class="reference external" href="https://fedoraproject.org/wiki/Classroom"&gt;Fedora
classroom&lt;/a&gt; sessions.&lt;/p&gt;
</summary><content type="html">&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20180607-teach.jpg"&gt;&lt;img alt="Teach a Fedora classroom session!" class="text-center img-responsive pagination-centered" src="http://ankursinha.in/images/20180607-teach.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;&lt;a class="reference external" href="https://pixabay.com/en/teach-word-scrabble-letters-wooden-1820041/"&gt;Taken from pixabay.com (under a CC0 license)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We had quite a good turnout for the first round of &lt;a class="reference external" href="https://fedoraproject.org/wiki/Classroom"&gt;Fedora classroom&lt;/a&gt;
sessions, so we're now trying to plan the second round. We need you to instruct
a session, and so, pass on the knowledge you've accrued over the years to
others in the community.  A lot of the folks that attend these sessions are
newbies who are still only testing the waters and haven't contributed yet, and
it makes it a lot easier for them to learn some skills from a contributor.&lt;/p&gt;
&lt;p&gt;Please consider teaching a session. If you'd like to, please get in touch with
me on &lt;a class="reference external" href="https://webchat.freenode.net/?channels=#fedora-classroom"&gt;#fedora-classroom on Freenode&lt;/a&gt; or via e-mail at
my fedoraproject.org address. You can also contact the team on our &lt;a class="reference external" href="https://lists.fedoraproject.org/archives/list/classroom&amp;#64;lists.fedoraproject.org/"&gt;mailing
list&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy teaching!&lt;/p&gt;
</content><category term="Fedora"></category></entry><entry><title>Testing out Sumatra: a tool for managing iterations of simulations/analyses</title><link href="http://ankursinha.in/2018/05/12/testing-out-sumatra-a-tool-for-managing-iterations-of-simulations-analyses.html" rel="alternate"></link><published>2018-05-12T20:53:25+01:00</published><updated>2018-05-12T20:53:25+01:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2018-05-12:/2018/05/12/testing-out-sumatra-a-tool-for-managing-iterations-of-simulations-analyses.html</id><summary type="html">&lt;p class="first last"&gt;When working on projects that require multiple iterations of
simulations and/or analyses, it's really quite hard to keep track of
the changes one makes and how the results vary. &lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt; is a tool
that is developed to help researchers manage such projects.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;In the ~4 years that I've spent on my PhD now, I've run hundreds, nay,
thousands of simulations. Research work is incredibly iterative. I (and I
assume others too) make small changes to their methods and then study how these
changes produce different results, and this cycle continues until a
proposed hypothesis has either been accepted or refuted (or a completely new
insight gained, which happens quite often too!).&lt;/p&gt;
&lt;div class="section" id="folders-and-dropbox-please-no"&gt;
&lt;h2&gt;Folders, and Dropbox? Please, no.&lt;/h2&gt;
&lt;p&gt;Keeping track of all these iterations is quite a task. I've seen multiple
methods that people use to do this. A popular method is to make a different
folder for each different version of code, and then use something like Dropbox
to store them all.&lt;/p&gt;
&lt;p&gt;Since I come from a computing background, I firmly believe that this is not a
good way of going about it. It may work for folks---people I know and work with
use this method---but it is simply a bad way of going about it. This &lt;a class="reference external" href="http://phdcomics.com/"&gt;PhDComic&lt;/a&gt;
does a rather good job of showing an example situation. Sure, this is about a
document, but when source code is kept in different folders, a similar
situation arises. You get the idea.&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://phdcomics.com/comics/archive.php?comicid=1531"&gt;&lt;img alt="PhDComic!" class="text-center img-responsive pagination-centered" src="http://www.phdcomics.com/comics/archive/phd101212s.gif" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class="section" id="version-control-yes"&gt;
&lt;h2&gt;Version control, YES!&lt;/h2&gt;
&lt;p&gt;If there weren't tools designed to track and manage such projects, one could
still argue for using such methods, but the truth is that there is a plethora
of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/List_of_version_control_software"&gt;version control tools&lt;/a&gt; available
under &lt;a class="reference external" href="https://www.gnu.org/philosophy/free-sw.en.html"&gt;Free/Open Source&lt;/a&gt; licenses. Not only do these tools manage projects,
they also make collaborating over source code simple.&lt;/p&gt;
&lt;p&gt;All my simulation code, for example, lives in a &lt;a class="reference external" href="https://git-scm.com/"&gt;Git&lt;/a&gt; repository (which will be
made available under a &lt;a class="reference external" href="https://www.gnu.org/philosophy/free-sw.en.html"&gt;Free/Open source&lt;/a&gt; license as soon as my paper goes out
to ensure that others can read, verify, and build on it). The support scripts
that I use to set up simulations and then analyse the data they produce already
live &lt;a class="reference external" href="https://github.com/sanjayankur31/Sinha2016-scripts"&gt;here on GitHub&lt;/a&gt;,
for example. Please go ahead and use them if they fit your purpose.&lt;/p&gt;
&lt;p&gt;I have different &lt;a class="reference external" href="https://git-scm.com/"&gt;Git&lt;/a&gt; branches for different features that I add to the
simulations---the different hypothesis that I'm testing out. I also keep a
rather meticulous record of everything I do in a research journal in &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt; that
also lives in a &lt;a class="reference external" href="https://git-scm.com/"&gt;Git&lt;/a&gt; repository, and uses &lt;a class="reference external" href="https://github.com/sanjayankur31/calliope"&gt;Calliope&lt;/a&gt; (a simple helper script to
manage various journaling tasks). Everything goes in here---graphs, images,
sometimes patches and source code even, and the deductions and other
comments/thoughts too.&lt;/p&gt;
&lt;p&gt;My rather simple system is as follows:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Each new feature/hypothesis gets its own &lt;a class="reference external" href="https://git-scm.com/"&gt;Git&lt;/a&gt; branch.&lt;/li&gt;
&lt;li&gt;Each version of its implementation, therefore, gets its own unique &lt;a class="reference external" href="https://github.com/sanjayankur31/Sinha2016-scripts/blob/master/runners/stri-cluster/start-nest-job.sh#L93"&gt;commit&lt;/a&gt;
(a snapshot of code that &lt;a class="reference external" href="https://git-scm.com/"&gt;Git&lt;/a&gt; saves for the user with a unique identifier and
a complete record of the changes that were made to the project, when they
were made and so on.)&lt;/li&gt;
&lt;li&gt;For each run of a snapshot, the generated data is stored in a folder that is
named &lt;a class="reference external" href="https://github.com/sanjayankur31/Sinha2016-scripts/blob/master/runners/stri-cluster/start-nest-job.sh#L27"&gt;YYYYMMDDHHMM (Year, month, day, time)&lt;/a&gt;,
which, unless you figure out how to go back in time, is also unique.&lt;/li&gt;
&lt;li&gt;The commit hash + YYYYMMDD become a unique identifier for each code snapshot
and the results that it generated.&lt;/li&gt;
&lt;li&gt;A new chapter in my research journal holds a summary of the simulation, and
all the analysis that I do. I even name the chapter &amp;quot;git-hash/YYYYMMDDHHMM&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;
&lt;a class="reference external image-reference" href="https://xkcd.com/1597/"&gt;&lt;img alt="XKCD on Git." class="text-center img-responsive pagination-centered" src="https://imgs.xkcd.com/comics/git.png" style="width: 50%;" /&gt;&lt;/a&gt;
&lt;p&gt;I know that learning a version control system has a steep initial curve, but I
really do think that this is one tool that is well worth the time.&lt;/p&gt;
&lt;p&gt;Using a version control system has many advantages, some of which are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It lets you keep the full history of your source code, and go back to any
previous version.&lt;/li&gt;
&lt;li&gt;You know exactly what you changed between two snapshots.&lt;/li&gt;
&lt;li&gt;If multiple people work on the code, everyone knows exactly who authored
what.&lt;/li&gt;
&lt;li&gt;These tools make changing code, trying out things, and so on, very very easy.
Try something out in a different branch, if it worked, yay, keep the branch
running; maybe even merge it to the main branch? If it didn't make a note,
delete the branch, and move on!&lt;/li&gt;
&lt;li&gt;With services like &lt;a class="reference external" href="https://github.com"&gt;GitHub&lt;/a&gt;, &lt;a class="reference external" href="https://bitbucket.org"&gt;BitBucket&lt;/a&gt;, and &lt;a class="reference external" href="https://gitlab.com"&gt;GitLab&lt;/a&gt;, collaboration becomes
really easy.&lt;/li&gt;
&lt;li&gt;Ah, and note, that every collaborator has a copy of the source code, so it
has been backed up too! Even if you work alone, there's always another copy
on &lt;a class="reference external" href="https://github.com"&gt;GitHub&lt;/a&gt; (or whatever service you use).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here's a quick beginners guide to using &lt;a class="reference external" href="https://git-scm.com/"&gt;Git&lt;/a&gt; and &lt;a class="reference external" href="https://github.com"&gt;GitHub&lt;/a&gt;:
&lt;a class="reference external" href="http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1004668"&gt;http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1004668&lt;/a&gt;
There are many more all over the WWW, of course. &lt;a class="reference external" href="https://duckduckgo.com"&gt;Duckduckgo&lt;/a&gt; is your friend.
(&lt;a class="reference external" href="http://qr.ae/TU1wA9"&gt;Why Duckduckgo and not Google?&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-s-sumatra-about-then"&gt;
&lt;h2&gt;What's Sumatra about, then?&lt;/h2&gt;
&lt;a class="reference external image-reference" href="http://neuralensemble.org/static/photos/sumatra_logo.png"&gt;&lt;img alt="Sumatra: a tool to manage and track simulation runs." class="text-center img-responsive pagination-centered" src="http://neuralensemble.org/static/photos/sumatra_logo.png" style="width: 30%;" /&gt;&lt;/a&gt;
&lt;p&gt;I've been meaning to try &lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt; out for a while now. What &lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt; does is
sort of bring the functions of all my scripts together into one well-designed
tool.  &lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt; can do the running bit, then save the generated data in a
unique location, and it even lets users add comments about the simulation.
&lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt; even has a web based front end for those that would prefer a graphical
interface instead of the command line.  Lastly, &lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt; is written in &lt;a class="reference external" href="https://python.org"&gt;Python&lt;/a&gt;,
so it works on pretty much all systems. Note that &lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt; forces the use of a
version control system (from what I've seen yet).&lt;/p&gt;
&lt;div class="section" id="a-quick-walk-through"&gt;
&lt;h3&gt;A quick walk-through&lt;/h3&gt;
&lt;p&gt;The &lt;a class="reference external" href="http://sumatra.readthedocs.io/en/0.7.4/index.html"&gt;documentation&lt;/a&gt;
contains all of this already, but I'll show the steps here too. I used a &lt;a class="reference external" href="https://github.com/sanjayankur31/sumatra-nest-cluster-test"&gt;dummy
repository&lt;/a&gt; to
test it out.&lt;/p&gt;
&lt;p&gt;Installing &lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt; is as easy as a &lt;a class="reference external" href="https://docs.python.org/3/installing/index.html"&gt;pip&lt;/a&gt; command. I would suggest setting up a
&lt;a class="reference external" href="https://docs.python.org/3/library/venv.html"&gt;virtual-environment&lt;/a&gt;, though:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
python3 -m venv --system-site-packages sumatra-virtual
&lt;/pre&gt;
&lt;p&gt;We then activate the virtual-environment, and install &lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
source sumatra-virtual/bin/activate
pip install sumatra
&lt;/pre&gt;
&lt;p&gt;Once it finishes installing, simply mark a version controlled source
repository as managed by &lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
cd my-awesome-project
smt init my-awesome-project
&lt;/pre&gt;
&lt;p&gt;Then, one can see the information that &lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt; has on the project, for
example:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
smt info
Project name        : test-repo
Default executable  : Python (version: 3.6.5) at /home/asinha/dump/sumatra-virt/bin/python3
Default repository  : GitRepository at /home/asinha/Documents/02_Code/00_repos/00_mine/sumatra-nest-cluster-test (upstream: git&amp;#64;github.com:sanjayankur31/sumatra-nest-cluster-test.git)
Default main file   : test.py
Default launch mode : serial
Data store (output) : /home/asinha/Documents/02_Code/00_repos/00_mine/sumatra-nest-cluster-test/Data
.          (input)  : /
Record store        : Django (/home/asinha/Documents/02_Code/00_repos/00_mine/sumatra-nest-cluster-test/.smt/records)
Code change policy  : error
Append label to     : None
Label generator     : timestamp
Timestamp format    : %Y%m%d-%H%M%S
Plug-ins            : []
Sumatra version     : 0.7.4
&lt;/pre&gt;
&lt;p&gt;My test script only prints a short message. Here's how one would run it using
&lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
# so that we don't have to specify this for each run
smt configure --executable=python3 --main=test.py

smt run
Hello Sumatra World!
Record label for this run: '20180512-200859'
No data produced.
&lt;/pre&gt;
&lt;p&gt;One can now see all the runs of this simulation that have been made!&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
smt list --long
--------------------------------------------------------------------------------
Label            : 20180512-200859
Timestamp        : 2018-05-12 20:08:59.761849
Reason           :
Outcome          :
Duration         : 0.050611019134521484
Repository       : GitRepository at /home/asinha/Documents/02_Code/00_repos/00_mine/sumatra-nest-
                 : cluster-test (upstream: git&amp;#64;github.com:sanjayankur31/sumatra-nest-cluster-
                 : test.git)
Main_File        : test.py
Version          : 6f4e1bf05f223a0100ca6f843c11ef4fd70490f3
Script_Arguments :
Executable       : Python (version: 3.6.5) at /home/asinha/dump/sumatra-virt/bin/python3
Parameters       :
Input_Data       : []
Launch_Mode      : serial
Output_Data      : []
User             : Ankur Sinha (Ankur Sinha Gmail) &amp;lt;sanjay.ankur&amp;#64;gmail.com&amp;gt;
Tags             :
Repeats          : None
--------------------------------------------------------------------------------
Label            : 20180512-181422
Timestamp        : 2018-05-12 18:14:22.668655
Reason           :
Outcome          : Well that worked
Duration         : 0.05211901664733887
Repository       : GitRepository at /home/asinha/Documents/02_Code/00_repos/00_mine/sumatra-nest-
                 : cluster-test (upstream: git&amp;#64;github.com:sanjayankur31/sumatra-nest-cluster-
                 : test.git)
Main_File        : test.py
Version          : 4f151a368b1fee1fa8f21026c3b6d2c6b2531da8
Script_Arguments :
Executable       : Python (version: 3.6.5) at /home/asinha/dump/sumatra-virt/bin/python3
Parameters       :
Input_Data       : []
Launch_Mode      : serial
Output_Data      : []
User             : Ankur Sinha (Ankur Sinha Gmail) &amp;lt;sanjay.ankur&amp;#64;gmail.com&amp;gt;
Tags             :
Repeats          : None
&lt;/pre&gt;
&lt;p&gt;There's a lot more that can be done, of course. I'll quickly show the GUI
version here.&lt;/p&gt;
&lt;p&gt;One can run the webversion using:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
smtweb -p 8001 #whatever port number one wants to use
&lt;/pre&gt;
&lt;p&gt;Then, it'll open up in your default web-browser at &lt;a class="reference external" href="http://127.0.0.1:8001/"&gt;http://127.0.0.1:8001/&lt;/a&gt;.&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20180512-sumatra1.png"&gt;&lt;img alt="Sumatra initial interface." class="text-center img-responsive pagination-centered" src="http://ankursinha.in/images/20180512-sumatra1.png" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p&gt;For each project, one can see the various runs, with all the associated
information too.&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20180512-sumatra2.png"&gt;&lt;img alt="Records for a project in Sumatra" class="text-center img-responsive pagination-centered" src="http://ankursinha.in/images/20180512-sumatra2.png" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p&gt;One can then add more information about a run. &lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt; already stores lots of
important information as the image shows:&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20180512-sumatra3.png"&gt;&lt;img alt="More information on each record in Sumatra" class="text-center img-responsive pagination-centered" src="http://ankursinha.in/images/20180512-sumatra3.png" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p&gt;Pretty neat, huh?&lt;/p&gt;
&lt;p&gt;I run my simulations on a cluster, and so have my own system to submit jobs to
the queue system. &lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt; can run jobs in parallel on a cluster, but I've
still got to check if it also integrates with the queue system that our cluster
runs. Luckily, &lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt; also provides an API, so I should be able to write a
few &lt;a class="reference external" href="https://python.org"&gt;Python&lt;/a&gt; scripts to handle that bit too. It's on my TODO list now.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="please-use-version-control-and-a-sumatra-style-record-keeper"&gt;
&lt;h2&gt;Please use version control and a Sumatra style record keeper&lt;/h2&gt;
&lt;p&gt;I haven't found another tool that does what &lt;a class="reference external" href="http://neuralensemble.org/sumatra/"&gt;Sumatra&lt;/a&gt; does yet. Maybe Jupyter
notebooks would come close, but one would have to add some sort of wrapper
around them to keep proper records. It'll probably be similar to my current
system.&lt;/p&gt;
&lt;p&gt;In summary, please use version control, and use a record keeper to manage and
track simulations. Not only does it make it easier for you, the researcher, it
also makes it easier for others to replicate the simulation since the record
keeper provides all the information required to re-run the simulation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="free-open-source-software-promotes-open-science"&gt;
&lt;h2&gt;Free/Open source software promotes Open Science&lt;/h2&gt;
&lt;video controls width="640" height="390" poster="//static.fsf.org/nosvn/FSF30-video/fsf30-poster.png"&gt;
&lt;source src="//static.fsf.org/nosvn/FSF30-video/FSF_30_720p.webm" type="video/webm"&gt;
&lt;track kind="subtitles" label="English" srclang="en" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.en.vtt" default="default" /&gt;
&lt;track kind="subtitles" label="Spanish" srclang="es" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_es.vtt" /&gt;
&lt;track kind="subtitles" label="French" srclang="fr" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.fr.vtt" /&gt;
&lt;track kind="subtitles" label="German" srclang="en" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.de.vtt" /&gt;
&lt;track kind="subtitles" label="русский" srclang="ru" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.ru.vtt" /&gt;
&lt;track kind="subtitles" label="italiano" srclang="it" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.it.vtt" /&gt;
&lt;track kind="subtitles" label="português" srclang="pt" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.pt.vtt" /&gt;
&lt;track kind="subtitles" label="српски" srclang="sr" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.sr.vtt" /&gt;
&lt;track kind="subtitles" label="fārsi" srclang="fa" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.fa.vtt" /&gt;
&lt;track kind="subtitles" label="nederlands" srclang="nl" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.nl.vtt" /&gt;
&lt;track kind="subtitles" label="magyar" srclang="hu" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.hu.vtt" /&gt;
&lt;track kind="subtitles" label="svenska" srclang="se" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.se.vtt" /&gt;
&lt;track kind="subtitles" label="română" srclang="ro" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.ro.vtt" /&gt;
&lt;track kind="subtitles" label="lietuvių" srclang="lt" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.lt.vtt" /&gt;
&lt;track kind="subtitles" label="hebrew" srclang="lt" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.he.vtt" /&gt;
&lt;track kind="subtitles" label="português do Brasil" srclang="pt-br" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.pt-br.vtt" /&gt;
&lt;track kind="subtitles" label="chinese" srclang="lt" src="//static.fsf.org/nosvn/FSF30-video/captions/FSF_30_720p.zh-cn.vtt" /&gt;
&lt;p&gt;&lt;a href="https://www.fsf.org/blogs/community/user-liberation-watch-and-share-our-new-video"&gt;
User liberation video at the Free Software Foundation.
&lt;/a&gt;&lt;/p&gt;
&lt;/video&gt;&lt;p&gt;(The original video is at the &lt;a class="reference external" href="https://www.fsf.org/blogs/community/user-liberation-watch-and-share-our-new-video"&gt;Free Software Foundation's website&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;As a concluding plea, I request everyone to please use &lt;a class="reference external" href="https://www.gnu.org/philosophy/free-sw.en.html"&gt;Free/Open source&lt;/a&gt;
software for all research. Not only are these available free of cost, they
provide everyone with the right to read, validate, study, copy, share, and
modify the software. One can learn so much from reading how research tools are
built. One can be absolutely sure of their results if they can see the code
that carries out the analysis. One can build on others' work if the source is
available for all to use and change. How easy does replication become when the
source and all related resources are given out for all to use?&lt;/p&gt;
&lt;p&gt;Do not use Microsoft Word, for example. Not everyone, even today, has access
to Microsoft software. Should researchers be required to buy a Microsoft
license to be able to collaborate with us? The tools are here to enable
science, not hamper it.  Proprietary software and formats do not enable
science, they restrict it to those that can pay for such software. This is not
a restriction we should endorse in any way.&lt;/p&gt;
&lt;p&gt;Yes, I know that sometimes there aren't &lt;a class="reference external" href="https://www.gnu.org/philosophy/free-sw.en.html"&gt;Free/Open source&lt;/a&gt; software
alternatives that carry the same set of features, but a little bit of extra
work, for me, is an investment towards Open Science. Instead of Word, as an
example, use &lt;a class="reference external" href="https://www.libreoffice.org/"&gt;Libreoffice&lt;/a&gt;, or &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt;. Use &lt;a class="reference external" href="http://opendocumentformat.org/"&gt;Open formats&lt;/a&gt;. There will be bugs, but until we report
them, they will not be fixed. Until these &lt;a class="reference external" href="https://www.gnu.org/philosophy/free-sw.en.html"&gt;Free/Open source&lt;/a&gt; tools replace
restricted software as the standard for science, they will only have small
communities around them that build and maintain them.&lt;/p&gt;
&lt;p&gt;Open Science is a necessity.  Researchers from the neuroscience community
recently signed &lt;a class="reference external" href="http://opensourceforneuroscience.org/"&gt;this letter&lt;/a&gt;
committing to the use of &lt;a class="reference external" href="https://www.gnu.org/philosophy/free-sw.en.html"&gt;Free/Open source&lt;/a&gt; software for their research. There
are similar initiatives in other fields too, and of course, one must be aware
of the Open Access movement etc.&lt;/p&gt;
&lt;p&gt;I've made this plea in the context of science, but the video should also show
you how in everyday life, it is important to use &lt;a class="reference external" href="https://www.gnu.org/philosophy/free-sw.en.html"&gt;Free/Open source&lt;/a&gt; resources.
Please use &lt;a class="reference external" href="https://www.gnu.org/philosophy/free-sw.en.html"&gt;Free/Open source&lt;/a&gt; resources, as much as possible.&lt;/p&gt;
&lt;!-- _ --&gt;
&lt;/div&gt;
</content><category term="Python"></category><category term="Reproducible research"></category><category term="Computational neuroscience"></category><category term="Sumatra"></category><category term="Fedora"></category><category term="Planet"></category></entry><entry><title>Building TeX Live from source</title><link href="http://ankursinha.in/2018/03/25/building-tex-live-from-source.html" rel="alternate"></link><published>2018-03-25T18:15:05+01:00</published><updated>2018-03-25T18:15:05+01:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2018-03-25:/2018/03/25/building-tex-live-from-source.html</id><summary type="html">&lt;p class="first last"&gt;I thought it'd be fun to try and build &lt;a class="reference external" href="https://www.tug.org/texlive/"&gt;TeX Live&lt;/a&gt; from sources. So,
I spent a day trying to do it. Here's how it went.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Between all the &lt;a class="reference external" href="https://ctan.org/pkg/latex"&gt;LaTeX&lt;/a&gt; vs &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Microsoft_Word"&gt;Word&lt;/a&gt; discussions that I frequently become a part of,
is the beauty of how it all works. They're both marvels, even if they each take
turns to exasperate users. There are pros and cons of each, and each has their
learning curves.&lt;/p&gt;
&lt;p&gt;I use &lt;a class="reference external" href="https://ctan.org/pkg/latex"&gt;LaTeX&lt;/a&gt; for various reasons. To start with, it takes me 5 minutes to write
a document in &lt;a class="reference external" href="https://ctan.org/pkg/latex"&gt;LaTeX&lt;/a&gt; and 30 to write the same in &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Microsoft_Word"&gt;Word&lt;/a&gt;, but it can be the
opposite for another user. May be I've gotten a system set up now where writing
in &lt;a class="reference external" href="https://ctan.org/pkg/latex"&gt;LaTeX&lt;/a&gt; isn't inefficient any more. This is me using &lt;a class="reference external" href="https://www.vim.org"&gt;Vim&lt;/a&gt;, with &lt;a class="reference external" href="https://github.com/sanjayankur31/vimfiles"&gt;plugins&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Of course, the fact that it is &lt;a class="reference external" href="https://tug.org/texlive/copying.html"&gt;Free software&lt;/a&gt; is very important to me. It may not
mean much to larger universities that have Microsoft services, but it does make
a difference to universities that don't have that kind of funding. When I'd
done my undergraduate degree back in India, for example, we didn't have a
university wide Microsoft license. I used &lt;a class="reference external" href="https://fedoraproject.org"&gt;Fedora&lt;/a&gt; throughout, and having &lt;a class="reference external" href="https://www.tug.org/texlive/"&gt;TeX
Live&lt;/a&gt; (and other free software) available to me was quite something. We
must remember to think of the way events and actions impact society, or that's
my point of view, anyway.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fedoraproject.org"&gt;Fedora&lt;/a&gt; provides &lt;a class="reference external" href="https://www.tug.org/texlive/"&gt;TeX Live&lt;/a&gt; in its repos. It takes quite an effort to build it
since it's a whole bunch of packages that must be built. There's a bit of
scripting required to even &lt;a class="reference external" href="https://src.fedoraproject.org/rpms/texlive/tree/master"&gt;build the spec file&lt;/a&gt;. So, it's simply:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo dnf install texlive
&lt;/pre&gt;
&lt;p&gt;The advantage of the rpm packaging is that subsequent packages can also be
installed by specifying the &lt;code&gt;sty&lt;/code&gt; files. For the &lt;code&gt;lineno&lt;/code&gt; package,
for example, one can use:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo dnf install &lt;span class="s1"&gt;'tex(lineno.sty)'&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Not everyone must build &lt;a class="reference external" href="https://www.tug.org/texlive/"&gt;TeX Live&lt;/a&gt; from source, upstream provides binaries for
all platforms, and a &lt;a class="reference external" href="https://www.tug.org/texlive/acquire-netinstall.html"&gt;convenient installer&lt;/a&gt;.&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20180325-texlive.png"&gt;&lt;img alt="TeX Live installer" class="text-center img-responsive pagination-centered" src="http://ankursinha.in/images/20180325-texlive.png" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p&gt;As it says, the whole collection is quite large, about 5GB.&lt;/p&gt;
&lt;div class="section" id="building-from-source"&gt;
&lt;h2&gt;Building from source&lt;/h2&gt;
&lt;p&gt;I followed the &lt;a class="reference external" href="https://www.tug.org/texlive/doc/tlbuild.html"&gt;documentation&lt;/a&gt; that's provided for this
already. Luckily, it uses &lt;a class="reference external" href="http://www.gnu.org/software/automake/manual/html_node/Autotools-Introduction.html#Autotools-Introduction"&gt;Autotools&lt;/a&gt;, and I've quite a bit of experience with
them. &lt;a class="reference external" href="https://fedoraproject.org"&gt;Fedora&lt;/a&gt; provides the 2016 release, so I played with the 2017 release
here. I also referred to the &lt;a class="reference external" href="https://fedoraproject.org"&gt;Fedora&lt;/a&gt; spec files, which made life so much easier:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://src.fedoraproject.org/rpms/texlive/blob/master/f/texlive.spec"&gt;https://src.fedoraproject.org/rpms/texlive/blob/master/f/texlive.spec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://src.fedoraproject.org/rpms/texlive-base/blob/master/f/texlive-base.spec"&gt;https://src.fedoraproject.org/rpms/texlive-base/blob/master/f/texlive-base.spec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The build turned out to be quite simple. Fetch the sources, and then run
&lt;code&gt;configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install&lt;/code&gt;, and that's quite it for the
base packages.&lt;/p&gt;
&lt;p&gt;I ran it on my headless &lt;a class="reference external" href="https://getfedora.org/en/server/"&gt;Fedora Server&lt;/a&gt;
system, and it pretty much went off without a hitch. I now have a base &lt;a class="reference external" href="https://www.tug.org/texlive/"&gt;TeX
Live&lt;/a&gt; distribution there in &lt;code&gt;/usr/local/texmf-dist&lt;/code&gt;. Note, that this
isn't sufficient. It only installs the basic bits of &lt;a class="reference external" href="https://www.tug.org/texlive/"&gt;TeX Live&lt;/a&gt;, not even the
&lt;a class="reference external" href="https://ctan.org/pkg/latex"&gt;LaTeX&lt;/a&gt; macro package. So, while it's easy and somewhat fun to tinker with on a
day off, I wouldn't suggest it for any end-users. On my work machines, the two
&lt;a class="reference external" href="https://getfedora.org/en/workstation/"&gt;Fedora Workstation&lt;/a&gt; installs, I'm
going to stick to the &lt;a class="reference external" href="https://fedoraproject.org"&gt;Fedora&lt;/a&gt; packages, which are more than sufficient! (If
you're a &lt;a class="reference external" href="https://fedoraproject.org"&gt;Fedora&lt;/a&gt; user, please shower the &lt;a class="reference external" href="https://fedoraproject.org"&gt;Fedora&lt;/a&gt; &lt;a class="reference external" href="https://www.tug.org/texlive/"&gt;TeX Live&lt;/a&gt; maintainers with
&lt;a class="reference external" href="http://threebean.org/blog/karma-cookies/"&gt;cookies&lt;/a&gt;! Get on &lt;a class="reference external" href="https://webchat.freenode.net/?channels=#fedora-devel"&gt;#fedora-devel&lt;/a&gt; on Freenode, and go
&lt;code&gt;&amp;lt;FAS username/Linked IRC nick&amp;gt;++&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
</content><category term="TeX"></category><category term="Fedora"></category></entry><entry><title>Fedora Join is now on Telegram and Matrix</title><link href="http://ankursinha.in/2018/03/24/fedora-join-is-now-on-telegram-and-matrix.html" rel="alternate"></link><published>2018-03-24T12:07:07+00:00</published><updated>2018-03-24T12:07:07+00:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2018-03-24:/2018/03/24/fedora-join-is-now-on-telegram-and-matrix.html</id><summary type="html">&lt;p class="first last"&gt;We set up new communication channels for &lt;a class="reference external" href="https://fedoraproject.org/wiki/SIGs/Join?rd=Fedora_Join_SIG"&gt;Fedora Join&lt;/a&gt;. Come speak
to us!&lt;/p&gt;
</summary><content type="html">&lt;p&gt;As the subject says, we're now on &lt;a class="reference external" href="https://telegram.org/"&gt;Telegram&lt;/a&gt; and on &lt;a class="reference external" href="https://matrix.org/blog/home/"&gt;Matrix&lt;/a&gt; now! If you'd like
to contribute to Fedora, come speak to us! Spread the word!&lt;/p&gt;
&lt;p&gt;We're now on:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;IRC: &lt;a class="reference external" href="https://webchat.freenode.net/?channels=#fedora-join"&gt;#fedora-join&lt;/a&gt; on Freenode&lt;/li&gt;
&lt;li&gt;Telegram: &lt;a class="reference external" href="https://t.me/joinfedora"&gt;Fedora Join SIG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Matrix: &lt;a class="reference external" href="https://riot.im/app/#/room/%23freenode_%23fedora-join:matrix.org"&gt;#fedora-join&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mailing list: &lt;a class="reference external" href="https://lists.fedoraproject.org/admin/lists/fedora-join&amp;#64;lists.fedoraproject.org/"&gt;Fedora Join&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://telegram.org/"&gt;Telegram&lt;/a&gt; and &lt;a class="reference external" href="https://matrix.org/blog/home/"&gt;Matrix&lt;/a&gt; channel are both bridged to the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Freenode"&gt;IRC&lt;/a&gt; channel. So, one
can monitor any of them and keep in touch.&lt;/p&gt;
&lt;p&gt;We're already seeing more people in the channels, and that's really great to
see!&lt;/p&gt;
</content><category term="Fedora"></category><category term="IRC"></category><category term="Matrix"></category><category term="Telegram"></category></entry><entry><title>Managing tasks, time, and making sure one takes a break: Integrating Taskwarrior, Timewarrior, and Gnome Pomodoro</title><link href="http://ankursinha.in/2017/12/25/managing-tasks-time-and-making-sure-one-takes-a-break-integrating-taskwarrior-timewarrior-and-gnome-pomodoro.html" rel="alternate"></link><published>2017-12-25T01:16:02+00:00</published><updated>2017-12-25T01:16:02+00:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2017-12-25:/2017/12/25/managing-tasks-time-and-making-sure-one-takes-a-break-integrating-taskwarrior-timewarrior-and-gnome-pomodoro.html</id><summary type="html">&lt;p class="first last"&gt;As the amount of work increases, it becomes ever so more important to
manage time and work in an efficient way. So, there's &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt;
for managing tasks, &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; for tracking them, and &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome
Pomodoro&lt;/a&gt; for making sure one takes regular breaks and doesn't let
the long hours affect their health in a bad way.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;With the new year, come resolutions. On many a list will there be a
determination to do better in the coming year, to be more organised, more
efficient, more productive.&lt;/p&gt;
&lt;p&gt;I'm quite organised myself. I have lists, calendars, reminders, budgets, and
all of that. Being a FOSS person, my first thought, inevitably, is to see if
there's a piece of software that would aid me.&lt;/p&gt;
&lt;p&gt;This post documents how one can get &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt;, &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt;, and &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome
Pomodoro&lt;/a&gt; to work together to manage tasks, track them, and break those long
hours into smaller bits with regular breaks.&lt;/p&gt;
&lt;div class="section" id="taskwarrior-helps-manage-tasks"&gt;
&lt;h2&gt;Taskwarrior helps manage tasks&lt;/h2&gt;
&lt;p&gt;For managing tasks, there's the rather excellent &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt;. It's command
line, and there are various user interfaces that have been developed for it
too. (&lt;a class="reference external" href="https://tasktools.org/projects/vit.html"&gt;Vit&lt;/a&gt; is one that provides a terminal interface with &lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt; like
keybindings, and there's a &lt;a class="reference external" href="https://github.com/blindFS/vim-taskwarrior"&gt;Vim plugin&lt;/a&gt; too.) One can even set up a
&lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; server to sync the data between different machines. There are a
few hosted services that give free &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; server accounts too. Perhaps
the best bit, is excellent documentation.  &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; really does make it
easy to &lt;a class="reference external" href="https://taskwarrior.org/news/news.20150627.html"&gt;get things done&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="timewarrior-tracks-time-spent-on-tasks"&gt;
&lt;h2&gt;Timewarrior tracks time spent on tasks&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; is not meant to be a time tracker, and upstream says so quite
plainly. In fact, upstream went ahead and wrote &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; for that purpose
entirely. Like &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt;, &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; is also a command line tool.&lt;/p&gt;
&lt;p&gt;Integrating the two is quite easy, using a &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; hook, as &lt;a class="reference external" href="https://taskwarrior.org/docs/timewarrior/taskwarrior.html"&gt;documented
here&lt;/a&gt;. Each time
a task is started, or stopped in &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt;, the hook calls &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; to
start or stop tracking the task too.&lt;/p&gt;
&lt;p&gt;Note: to ensure that this hook is run before the &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome Pomodoro&lt;/a&gt; hook that we
set up in the next section, please save the hook file as
&lt;code&gt;~/.task/hooks/on-modify.00-timewarrior&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="gnome-pomodoro-reminds-us-to-take-regular-breaks"&gt;
&lt;h2&gt;Gnome Pomodoro reminds us to take regular breaks&lt;/h2&gt;
&lt;p&gt;So, one can manage tasks, and track the time spent working on them, and that's
great. It was sufficient for me for quite a while, before I realised that I was
spending too much time at my desk. What made it worse was the realisation that
for us white collar professionals, a majority of our lives will be spent at a
desk typing away on a computer. There's enough research to show that spending
all those long hours working in a seated position is bad for one's health.&lt;/p&gt;
&lt;p&gt;So, I went looking for the changes I should make to my work regime, and ran
into the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Pomodoro_Technique"&gt;Pomodoro&lt;/a&gt; technique. The idea is to take short breaks at regular
intervals. One can use these to get up and walk around a bit, get them 10,000
steps! There are plenty of tools that implement the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Pomodoro_Technique"&gt;Pomodoro&lt;/a&gt; technique. A
simple timer works too. The one I settled on is &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome Pomodoro&lt;/a&gt; which
integrates really well with Gnome Shell. Every 25 minutes, it'll remind the
user to take a 5 minute break.&lt;/p&gt;
&lt;p&gt;Now, let us integrate &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome Pomodoro&lt;/a&gt; with both &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; and &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;When a task is started using &lt;code&gt;task &amp;lt;filter&amp;gt; start&lt;/code&gt;, &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt;
already begins to track it using the hook, and a Pomodoro should also be
started.&lt;/li&gt;
&lt;li&gt;When a Pomodoro is over and &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome Pomodoro&lt;/a&gt; notifies of a break,
&lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; should be paused too.&lt;/li&gt;
&lt;li&gt;When the break is over, and another Pomodoro starts, &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; should
resume tracking the task.&lt;/li&gt;
&lt;li&gt;When a task is stopped, &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; will stop tracking it via the hook
already, and the Pomodoro should be stopped as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a very simple set up. A task must be started using &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; here,
and each time &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome Pomodoro&lt;/a&gt; pauses and resumes from breaks, the same task
will be resumed unless it was stopped and another started.&lt;/p&gt;
&lt;p&gt;It turned out to be quite easy because of how well these three tools have been
designed. Here's a &lt;a class="reference external" href="https://taskwarrior.org/"&gt;Taskwarrior&lt;/a&gt; hook for &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome Pomodoro&lt;/a&gt; similar to the one
for &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="ch"&gt;#!/usr/bin/env python2&lt;/span&gt;
&lt;span class="c1"&gt;# API is here: https://taskwarrior.org/docs/hooks.html&lt;/span&gt;
&lt;span class="c1"&gt;# To be saved at ~/.task/hooks/on-modify.01-gnome-pomodoro to ensure it is&lt;/span&gt;
&lt;span class="c1"&gt;# run after the timewarrior hook, which should be saved as&lt;/span&gt;
&lt;span class="c1"&gt;# ~/.task/hooks/on-modify.00-timewarrior&lt;/span&gt;
&lt;span class="c1"&gt;# Otherwise, this is run before which then runs the Gnome-Pomodoro actions&lt;/span&gt;
&lt;span class="c1"&gt;# things get quite messy!&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="c1"&gt;# Make no changes to the task, simply observe.&lt;/span&gt;
&lt;span class="n"&gt;old&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Start pomodoro when task is started&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;'start'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="s1"&gt;'start'&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;old&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'gnome-pomodoro --start'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Stop pomodoro when a task is stopped&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="s1"&gt;'start'&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="s1"&gt;'start'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;old&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'gnome-pomodoro --stop'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;It's called when a task is modified. It checks the old and new states. If a
task is started, it starts &lt;code&gt;gnome-pomodoro&lt;/code&gt;, and when it's stopped, it
stops it. This is one direction.&lt;/p&gt;
&lt;p&gt;The other direction requires some tinkering with &lt;a class="reference external" href="http://gnomepomodoro.org/"&gt;Gnome Pomodoro&lt;/a&gt; to set up
custom scripts. In the preferences, one must enable the &amp;quot;Custom actions&amp;quot;
plugin:&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20171225-gnome-pomodoro-plugins.png"&gt;&lt;img alt="A screenshot showing the plugin preferences in Gnome Pomodoro." src="http://ankursinha.in/images/20171225-gnome-pomodoro-plugins.png" style="height: 300.0px;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Then, a &amp;quot;Custom Actions&amp;quot; entry will be added to the preferences. We need to add
two of them. The first, resumes &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; tracking when the Pomodoro
resumes:&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20171225-gnome-pomodoro-action-resume-timew.png"&gt;&lt;img alt="A screenshot showing custom action that will resume timew after a break." src="http://ankursinha.in/images/20171225-gnome-pomodoro-action-resume-timew.png" style="height: 300.0px;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Similarly, the second stops &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; when a break begins, or the user
pauses the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Pomodoro_Technique"&gt;Pomodoro&lt;/a&gt;:&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20171225-gnome-pomodoro-action-stop-timew.png"&gt;&lt;img alt="A screenshot showing custom action that will stop timew at the start of a break." src="http://ankursinha.in/images/20171225-gnome-pomodoro-action-stop-timew.png" style="height: 300.0px;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;(If no tasks are active, &lt;a class="reference external" href="https://timewarrior.net/"&gt;Timewarrior&lt;/a&gt; doesn't do anything, so that case does
not need to be handled separately.)&lt;/p&gt;
&lt;p&gt;There are certain &lt;a class="reference external" href="https://github.com/codito/gnome-pomodoro/issues/275#issuecomment-282494447"&gt;limitations to what commands can go in there&lt;/a&gt;,
so I've used a shell script to implement the required logic:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="ch"&gt;#!/bin/bash
&lt;/span&gt;&lt;span class="c1"&gt;# save as ~/bin/track-timew.sh
# note that ~/bin/ must be in PATH
&lt;/span&gt;
resume &lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    timew &lt;span class="o"&gt;||&lt;/span&gt; timew &lt;span class="k"&gt;continue&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

pause &lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    timew &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; timew stop
&lt;span class="o"&gt;}&lt;/span&gt;

clean &lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;# sed only does greedy regex so it's slightly complicated
&lt;/span&gt;    &lt;span class="c1"&gt;# could use perl to make this a lot simpler because perl does non
&lt;/span&gt;    &lt;span class="c1"&gt;# greedy too.
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; entry in &lt;span class="k"&gt;$(&lt;/span&gt;timew summary :ids &lt;span class="p"&gt;|&lt;/span&gt; grep -o &lt;span class="s1"&gt;'&amp;#64;.*'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed -E &lt;span class="s1"&gt;'s/(^&amp;#64;[[:digit:]]+[[:space:]]+)/\1 |/'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed -E &lt;span class="s1"&gt;'s/([[:digit:]]+:[[:digit:]]+:[[:digit:]]+ )/| \1/'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;'s/|.*|//'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed -E &lt;span class="s1"&gt;'s/[[:space:]]{2,}/ /'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s1"&gt;' '&lt;/span&gt; -f &lt;span class="m"&gt;1&lt;/span&gt;,4 &lt;span class="p"&gt;|&lt;/span&gt; grep -E &lt;span class="s1"&gt;'0:0[01]:..'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s1"&gt;' '&lt;/span&gt; -f &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tr &lt;span class="s1"&gt;'\n'&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; timew delete &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$entry&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

usage &lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt;: wrapper script around timewarrior to carry out common tasks&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;For use with Gnome-Pomodoro's action plugin&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; &amp;lt;option&amp;gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;OPTIONS:&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-r    resume tracking of most recently tracked task&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-p    pause tracking&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-c    clean up short tasks (less than 2 minutes long)&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# check for options
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    usage
    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# parse options
&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;getopts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rpch&amp;quot;&lt;/span&gt; OPTION
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$OPTION&lt;/span&gt; in
        r&lt;span class="o"&gt;)&lt;/span&gt;
            resume
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
        p&lt;span class="o"&gt;)&lt;/span&gt;
            pause
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
        c&lt;span class="o"&gt;)&lt;/span&gt;
            clean
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
        h&lt;span class="o"&gt;)&lt;/span&gt;
            usage
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
        ?&lt;span class="o"&gt;)&lt;/span&gt;
            usage
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="k"&gt;esac&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The script is quite simple, and I hope, self-explanatory too. I'll leave
interpretation of the &lt;code&gt;clean&lt;/code&gt; function to the reader ;)&lt;/p&gt;
&lt;p&gt;That's all there is to it. There must be other ways of doing the same thing,
possibly with different tools too, but this system required least changes to my
current workflow. Do remember that these tools can only aid us. It is us that
need to show that bit of discipline to follow the plan through. I hope some
will find it helpful, and may the new year be healthier and more productive for
us all! :)&lt;/p&gt;
&lt;/div&gt;
</content><category term="Bash"></category><category term="Fedora"></category><category term="Timewarrior"></category><category term="Taskwarrior"></category><category term="Pomodoro"></category><category term="Gnome-Pomodoro"></category><category term="Time management"></category></entry><entry><title>Transitioning to Neomutt and friends for e-mail</title><link href="http://ankursinha.in/2017/12/16/transitioning-to-neomutt-and-friends-for-e-mail.html" rel="alternate"></link><published>2017-12-16T00:01:53+00:00</published><updated>2017-12-16T00:01:53+00:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2017-12-16:/2017/12/16/transitioning-to-neomutt-and-friends-for-e-mail.html</id><summary type="html">&lt;p class="first last"&gt;I finally took some time out to set up &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; and related tools
that let me access my e-mail in a terminal. This post documents how I
went about it.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I'm constantly seeking out applications that provide &lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt; like keyboard
bindings---it ensures that I have one set of keys that does the same thing
everywhere, and so, it saves me from having to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;remember different hot keys for different applications&lt;/li&gt;
&lt;li&gt;leave the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Touch_typing"&gt;home row&lt;/a&gt; to use the mouse/touchpad (Yeh, the home row is a
thing!)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, I now use the excellent &lt;a class="reference external" href="http://byobu.co/"&gt;byobu&lt;/a&gt; where I run:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/arybczak/ncmpcpp"&gt;ncmpcpp&lt;/a&gt; for music: it provides &lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt; like key bindings.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://vifm.info"&gt;Vifm&lt;/a&gt; for file management, although, a command line is usually sufficient.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/scottkosty/vit"&gt;Vit&lt;/a&gt; as a &lt;a class="reference external" href="https://taskwarrior.org"&gt;Taskwarrior&lt;/a&gt; terminal based front-end, which, yep, provides &lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt;
like key-bindings.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://weechat.org"&gt;Weechat&lt;/a&gt; for IRC which also has &lt;a class="reference external" href="https://github.com/GermainZ/weechat-vimode"&gt;Vim bindings&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt; has an in-built file browser, and one can use other plug-ins such as
NerdTree for more advanced tasks. I even have a &lt;a class="reference external" href="https://taskwarrior.org"&gt;Taskwarrior&lt;/a&gt; plug-in for Vim
that let's me quickly look up my tasks while writing code and the sort.&lt;/p&gt;
&lt;p&gt;For other uses where the terminal is insufficient, I've found:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://karlch.github.io/vimiv/"&gt;Vimiv&lt;/a&gt; for viewing images&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.qutebrowser.org/"&gt;Qutebrowser&lt;/a&gt; as a full featured browser. One can also use add-ons to
Firefox/Chrome, but I've quite fallen for &lt;a class="reference external" href="http://www.qutebrowser.org/"&gt;Qutebrowser&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pwmt.org/projects/zathura/"&gt;Zathura&lt;/a&gt; for viewing various document types.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I rarely use LibreOffice---I mostly stick to LaTeX, and &lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt; deals with it
rather well.&lt;/p&gt;
&lt;p&gt;In all of the above mentioned applications, &lt;code&gt;hjkl&lt;/code&gt; moves about, other hot
keys such as &lt;code&gt;G&lt;/code&gt; and &lt;code&gt;gg&lt;/code&gt;, and so on work too, and they even have a
command mode that can be accessed using &lt;code&gt;:&lt;/code&gt; as in &lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt;. So, I don't have
to think of the shortcuts now---it's all muscle memory!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://wiki.gnome.org/Apps/Evolution"&gt;Evolution&lt;/a&gt;, being a modern GUI productivity tool, does not have a method to
navigate around only using a keyboard, and this got me to look for an e-mail
client that provided &lt;a class="reference external" href="https://vim.org"&gt;Vim&lt;/a&gt; like bindings. The answer I found was the rather well
known &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; terminal client. I'd been thinking of giving it a go for a while
now---more than a year. However, as I document later in this post, setting up
&lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; isn't as trivial as setting up &lt;a class="reference external" href="https://wiki.gnome.org/Apps/Evolution"&gt;Evolution&lt;/a&gt; where one simply uses Gnome
Online Accounts and can get up and running in a few minutes.&lt;/p&gt;
&lt;p&gt;At no point will I suggest that anyone migrate to such a terminal oriented
setup. This is tailored to my personal, rather Vim-y needs. One should use
whatever tools fit their personal tastes. We needn't spend time on &amp;quot;But, I
prefer this, and it's better!&amp;quot; themed conversations.&lt;/p&gt;
&lt;p&gt;Please note that everything that is documented here is for an up to date
&lt;a class="reference external" href="http://getfedora.org"&gt;Fedora&lt;/a&gt; 27 system. Most steps should be general enough to work on other
distributions. One will have to go find the right packages, though. I followed
&lt;a class="reference external" href="https://hobo.house/2015/09/09/take-control-of-your-email-with-mutt-offlineimap-notmuch/"&gt;this guide&lt;/a&gt;
as the main source of information, and the looked around when I needed some
more info. I've collected a list of links at the bottom of this post.&lt;/p&gt;
&lt;div class="section" id="e-mail-the-details"&gt;
&lt;h2&gt;E-mail: the details&lt;/h2&gt;
&lt;p&gt;When a majority of us use e-mail, we simply interact with a client. These
clients: &lt;a class="reference external" href="https://wiki.gnome.org/Apps/Evolution"&gt;Evolution&lt;/a&gt;/&lt;a class="reference external" href="https://www.mozilla.org/en-GB/thunderbird/"&gt;Thunderbird&lt;/a&gt;/Outlook or the web applications that we access,
keep the nitty-gritty details away from end users. The &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Email#Operation_overview"&gt;wikipedia article&lt;/a&gt; on e-mail explains
the process quite well:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;An MUA (mail user agent) is the client that we use to read/write email.&lt;/li&gt;
&lt;li&gt;The MUA interacts with an MSA (mail submission agent) to send e-mail, or an
MDA (mail delivery agent) to receive e-mail to and fro a mailbox.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; is an MUA, so we need to set up the other bits for it to be able to
interact with an MSA and an MDA, and that's why it is a little more work than
setting up &lt;a class="reference external" href="https://wiki.gnome.org/Apps/Evolution"&gt;Evolution&lt;/a&gt; and so on where the tool takes care of setting up the
whole chain.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fetch-e-mail-with-offlineimap"&gt;
&lt;h2&gt;Fetch e-mail with Offlineimap&lt;/h2&gt;
&lt;p&gt;There are a few tools that fetch e-mail. &lt;a class="reference external" href="http://www.offlineimap.org/"&gt;Offlineimap&lt;/a&gt; seemed to be widely used,
so I settled for it as well. On &lt;a class="reference external" href="http://getfedora.org"&gt;Fedora&lt;/a&gt;, one can use DNF:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo dnf install offlineimap
&lt;/pre&gt;
&lt;p&gt;One must then set up their accounts with credentials and the sort. An example
config file is provided with the package at
&lt;code&gt;/usr/share/doc/offlineimap/offlineimap.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The config format is quite self explanatory. Here's an example:&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="k"&gt;[general]&lt;/span&gt;
&lt;span class="na"&gt;accounts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;account1&lt;/span&gt;

&lt;span class="k"&gt;[Account account1]&lt;/span&gt;
&lt;span class="na"&gt;localrepository&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;account1-local&lt;/span&gt;
&lt;span class="na"&gt;remoterepository&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;account1-remote&lt;/span&gt;
&lt;span class="na"&gt;status_backend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;sqlite&lt;/span&gt;
&lt;span class="na"&gt;postsynchook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;notmuch new&lt;/span&gt;

&lt;span class="k"&gt;[Repository account1-remote]&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;IMAP&lt;/span&gt;
&lt;span class="na"&gt;remotehost&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;mailhost.com&lt;/span&gt;
&lt;span class="na"&gt;remoteport&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;587&lt;/span&gt;
&lt;span class="na"&gt;remoteuser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;username&amp;#64;mailhost.com&lt;/span&gt;
&lt;span class="na"&gt;remotepass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;password&lt;/span&gt;
&lt;span class="na"&gt;ssl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;no&lt;/span&gt;
&lt;span class="na"&gt;folderfilter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;lambda foldername: foldername in ['INBOX', 'Sent', 'Spam', 'Trash', 'Drafts']&lt;/span&gt;
&lt;span class="na"&gt;createfolders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;maxconnections&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;2&lt;/span&gt;

&lt;span class="k"&gt;[Repository account1-local]&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Maildir&lt;/span&gt;
&lt;span class="na"&gt;localfolders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;~/Mail&lt;/span&gt;
&lt;span class="na"&gt;restoreatime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;no&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;There's a &amp;quot;general&amp;quot; section where one defines what accounts are to be used. One
can also define global options that will apply to all accounts here.&lt;/p&gt;
&lt;p&gt;For each account, one then sets up the main configurations, and then set up the
remote and local repositories. There are other advanced options that one can
use too. The &lt;code&gt;folderfilter&lt;/code&gt;, for example, is a python statement that lets
one select what folders on the remote should by synced. More in the offlineimap
documentation.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;postsynchook&lt;/code&gt; bit lets one run a command after &lt;a class="reference external" href="http://www.offlineimap.org/"&gt;Offlineimap&lt;/a&gt; has
finished syncing. Here, it calls &lt;code&gt;notmuch&lt;/code&gt; to update its database. More on
&lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt; later.&lt;/p&gt;
&lt;p&gt;Once configured, one can run &lt;a class="reference external" href="http://www.offlineimap.org/"&gt;Offlineimap&lt;/a&gt; to fetch one's mail. The first sync
will take quite a while, but subsequent syncs will be much quicker.&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
offlineimap
&lt;/pre&gt;
&lt;p&gt;I set up a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Cron"&gt;cronjob&lt;/a&gt; to sync my e-mail regularly. Most users also use a script
that kills previously running &lt;a class="reference external" href="http://www.offlineimap.org/"&gt;Offlineimap&lt;/a&gt; instances that may have hung, so a
script like this may be more useful:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
check &lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; pkill offlineimap
    &lt;span class="k"&gt;do&lt;/span&gt;
        sleep &lt;span class="m"&gt;2&lt;/span&gt;
    &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

quick &lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    offlineimap -u quiet -q -s
&lt;span class="o"&gt;}&lt;/span&gt;

full &lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    offlineimap -u quiet -s
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# parse options
&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;getopts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qf&amp;quot;&lt;/span&gt; OPTION
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$OPTION&lt;/span&gt; in
        q&lt;span class="o"&gt;)&lt;/span&gt;
            check
            quick
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
        f&lt;span class="o"&gt;)&lt;/span&gt;
            check
            full
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
        ?&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Nothing to do.&amp;quot;&lt;/span&gt;
            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
            &lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="k"&gt;esac&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;My crontab then looks like this:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
*/20 * * * * /home/asinha/bin/fetch-mail.sh -q
&lt;span class="m"&gt;10&lt;/span&gt; */8 * * * /home/asinha/bin/fetch-mail.sh -f
&lt;/pre&gt;
&lt;p&gt;So, every 20 minutes, I do a quick sync, and once every 8 hours, I do a full
sync.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sending-e-mail-with-msmtp"&gt;
&lt;h2&gt;Sending e-mail with msmtp&lt;/h2&gt;
&lt;p&gt;Now that we can fetch our e-mail, we look at sending e-mail. &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Sendmail"&gt;sendmail&lt;/a&gt; is quite
a well known client, but the setup is a bit cludgy for me. &lt;a class="reference external" href="http://msmtp.sourceforge.net/"&gt;msmtp&lt;/a&gt; was
recommended by quite a few users. On &lt;a class="reference external" href="http://getfedora.org"&gt;Fedora&lt;/a&gt;, one can install it using DNF:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo dnf install msmtp
&lt;/pre&gt;
&lt;p&gt;The configuration for &lt;a class="reference external" href="http://msmtp.sourceforge.net/"&gt;msmtp&lt;/a&gt; is quite simple too. The package provides two
example configuration files:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
/usr/share/doc/msmtp/msmtprc-system.example
/usr/share/doc/msmtp/msmtprc-user.example
&lt;/pre&gt;
&lt;p&gt;Here's an example:&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="na"&gt;defaults&lt;/span&gt;
&lt;span class="na"&gt;protocol smtp&lt;/span&gt;
&lt;span class="na"&gt;auth on&lt;/span&gt;
&lt;span class="na"&gt;tls on&lt;/span&gt;
&lt;span class="na"&gt;tls_trust_file /etc/ssl/certs/ca-bundle.crt&lt;/span&gt;
&lt;span class="na"&gt;syslog LOG_USER&lt;/span&gt;
&lt;span class="na"&gt;logfile ~/.msmtp.log&lt;/span&gt;
&lt;span class="na"&gt;timeout 60&lt;/span&gt;

&lt;span class="na"&gt;account account1&lt;/span&gt;
&lt;span class="na"&gt;host smtp.hostname.com&lt;/span&gt;
&lt;span class="na"&gt;port 587&lt;/span&gt;
&lt;span class="na"&gt;domain hostname.com&lt;/span&gt;
&lt;span class="na"&gt;from something&amp;#64;hostname.com&lt;/span&gt;
&lt;span class="na"&gt;user username&amp;#64;hostname.com&lt;/span&gt;
&lt;span class="na"&gt;password password&lt;/span&gt;

&lt;span class="na"&gt;account account2&lt;/span&gt;
&lt;span class="na"&gt;host smtp.anotherhostname.com&lt;/span&gt;
&lt;span class="na"&gt;port 587&lt;/span&gt;
&lt;span class="na"&gt;domain anotherhostname.com&lt;/span&gt;
&lt;span class="na"&gt;from something&amp;#64;anotherhostname.com&lt;/span&gt;
&lt;span class="na"&gt;user username&amp;#64;anotherhostname.com&lt;/span&gt;
&lt;span class="na"&gt;password password&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;It has a default section where options common to all accounts can be set up.
here it does to usual setup regarding TLS, and so on.&lt;/p&gt;
&lt;p&gt;A separate section for each account then holds the credentials. One can then
send e-mail from the command line:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Subject: Test&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; msmtp -a account1 someone&amp;#64;anotherhost.com
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="setting-up-the-mua-neo-mutt"&gt;
&lt;h2&gt;Setting up the MUA: (neo)mutt&lt;/h2&gt;
&lt;p&gt;The two MTAs are now set up, and we can fetch and send mail. We can now link
these up to our MUA, &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt;. Instead of &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt;, I use &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; which is &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; with
additional patches and features. It isn't in the Fedora repos yet, but there's a
&lt;a class="reference external" href="https://copr.fedorainfracloud.org/"&gt;COPR&lt;/a&gt; repository set up for users:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo dnf copr &lt;span class="nb"&gt;enable&lt;/span&gt; flatcap/neomutt
sudo dnf install neomutt
&lt;/pre&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; configuration is based on the &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; bits, and it's rather
extensive. The package provides an example that I use as a starting point:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
/usr/share/doc/offlineimap/offlineimap.conf
&lt;/pre&gt;
&lt;p&gt;The important bits are here:&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="na"&gt;mailboxes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;account1&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;mailboxes `find ~/Mail/account1/* -maxdepth 0 -type d | grep -v &amp;quot;tmp\|new\|cur&amp;quot; | sed 's|/home/asinha/Mail/|&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;\&amp;quot;|g' | sed 's|$|\&amp;quot;|g' | tr '\n' ' '`&lt;/span&gt;
&lt;span class="na"&gt;set from&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;user&amp;#64;hostname.com&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set use_from&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set reply_to&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set sendmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;msmtp -a account1&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set sendmail_wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="na"&gt;set mbox&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;+account1/INBOX&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set postponed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;+account1/Drafts&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set record&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;+account1/Sent&amp;quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;mailboxes&lt;/code&gt; list what folders the sidebar in &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt;. These are what
we've set up offlineimap to fetch for us. Similarly, the &lt;code&gt;sendmail&lt;/code&gt;
setting tells neomutt to use &lt;code&gt;msmtp&lt;/code&gt; to send e-mail.&lt;/p&gt;
&lt;p&gt;If it all went well, running &lt;code&gt;neomutt&lt;/code&gt; should bring up a window like the
figure below:&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20171215-neomutt.png"&gt;&lt;img alt="A screenshot of Neomutt in action" src="http://ankursinha.in/images/20171215-neomutt.png" style="height: 480.0px;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;On the left, there's the sidebar where all folders are listed. These can be
configured using &lt;code&gt;mailboxes&lt;/code&gt; as &lt;a class="reference external" href="https://www.neomutt.org/feature/sidebar-intro"&gt;explained in the documentation here&lt;/a&gt;. On the right hand side, the
various e-mails are listed on top in the &lt;code&gt;index&lt;/code&gt;, and a particular e-mail
is visible in the &lt;code&gt;pager&lt;/code&gt; view. As can be seen, the index view also shows
threads! (This is running in &lt;code&gt;byobu&lt;/code&gt;, by the way, which shows the other
information in the bottom information bar.) More on all of this in the
documentation, of course.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="searching-e-mail-with-notmuch"&gt;
&lt;h2&gt;Searching e-mail with notmuch&lt;/h2&gt;
&lt;p&gt;We have our e-mail set up, but we at the moment, it has a very basic search
feature that &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; provides. &lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt;, which thinks &amp;quot;not much mail&amp;quot; of your
massive e-mail collection helps here. &lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt; is called after each Offlineimap
sync above, in the &lt;code&gt;postsynchook&lt;/code&gt;. Then, using simple keyboard shortcuts,
one can use &lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt; search their whole e-mail database. &lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt; has quite a
few advanced features, like searching as threads, and searching e-mail
addresses, and the sort. &lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt; comes with the handy &lt;code&gt;notmuch-config&lt;/code&gt;
which makes configuration trivial. Here's an example below:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
$ notmuch address from:*lists.fedoraproject.org
classroom-request&amp;#64;lists.fedoraproject.org
freemedia-owner&amp;#64;lists.fedoraproject.org
fedora-join-bounces&amp;#64;lists.fedoraproject.org
fedora-join-owner&amp;#64;lists.fedoraproject.org
cwg-request&amp;#64;lists.fedoraproject.org
cwg-private-request&amp;#64;lists.fedoraproject.org
&lt;/pre&gt;
&lt;p&gt;The same can be used within &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; with a few simple hotkeys:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
macro index &amp;lt;F8&amp;gt; \
&amp;quot;&amp;lt;enter-command&amp;gt;set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key&amp;lt;enter&amp;gt;\
&amp;lt;shell-escape&amp;gt;notmuch-mutt -r --prompt search&amp;lt;enter&amp;gt;\
&amp;lt;change-folder-readonly&amp;gt;`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`&amp;lt;enter&amp;gt;\
&amp;lt;enter-command&amp;gt;set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key&amp;lt;enter&amp;gt;&amp;quot; \
 &amp;quot;notmuch: search mail&amp;quot;

macro index &amp;lt;F9&amp;gt; \
&amp;quot;&amp;lt;enter-command&amp;gt;set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key&amp;lt;enter&amp;gt;\
&amp;lt;pipe-message&amp;gt;notmuch-mutt -r thread&amp;lt;enter&amp;gt;\
&amp;lt;change-folder-readonly&amp;gt;`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`&amp;lt;enter&amp;gt;\
&amp;lt;enter-command&amp;gt;set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key&amp;lt;enter&amp;gt;&amp;quot; \
 &amp;quot;notmuch: reconstruct thread&amp;quot;

macro index &amp;lt;F6&amp;gt; \
&amp;quot;&amp;lt;enter-command&amp;gt;set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key&amp;lt;enter&amp;gt;\
&amp;lt;pipe-message&amp;gt;notmuch-mutt tag -- -inbox&amp;lt;enter&amp;gt;\
&amp;lt;enter-command&amp;gt;set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key&amp;lt;enter&amp;gt;&amp;quot; \
 &amp;quot;notmuch: remove message from inbox&amp;quot;
&lt;/pre&gt;
&lt;p&gt;The three commands in a &lt;code&gt;neomuttrc&lt;/code&gt; file will respectively:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;bind F8 to open a &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; search&lt;/li&gt;
&lt;li&gt;bind F9 to find a whole thread based the currently selected e-mail. This
includes all folders.&lt;/li&gt;
&lt;li&gt;binds F6 to untag an e-mail (more on &lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt; tagging in the docs)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="other-tweaks"&gt;
&lt;h2&gt;Other tweaks&lt;/h2&gt;
&lt;p&gt;The aforementioned bits cover most of the main functions that one would need
with e-mail. Here are some more tips that I found helpful.&lt;/p&gt;
&lt;p&gt;I have not yet set up a command line address book client. There seem to be a
few that sync with Gmail and other providers and can be used with &lt;a class="reference external" href="http://www.mutt.org/"&gt;mutt&lt;/a&gt;, but I
don't need them yet.  &lt;a class="reference external" href="https://notmuchmail.org/"&gt;notmuch&lt;/a&gt; provides sufficient completion for the time
being, and when I begin to use newer addresses that are not already in my
mailbox, I shall look at address book clients. For those that are interested,
these are what I've found:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://abook.sourceforge.net/"&gt;abook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://gitlab.com/goobook/goobook"&gt;gobook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="storing-passwords-using-pass"&gt;
&lt;h3&gt;Storing passwords using pass&lt;/h3&gt;
&lt;p&gt;Storing passwords as plain text is a terrible idea. Instead most use password
managers. &lt;a class="reference external" href="https://www.passwordstore.org/"&gt;pass&lt;/a&gt; is an excellent command line password manager that uses &lt;a class="reference external" href="https://www.gnupg.org/"&gt;GPG&lt;/a&gt;
to encrypt password files. It even integrates with &lt;a class="reference external" href="https://git-scm.com/"&gt;Git&lt;/a&gt; so that a central
repository can hold the encrypted files, and can be cloned to various systems.&lt;/p&gt;
&lt;p&gt;Both &lt;a class="reference external" href="http://www.offlineimap.org/"&gt;Offlineimap&lt;/a&gt; and &lt;a class="reference external" href="http://msmtp.sourceforge.net/"&gt;msmtp&lt;/a&gt; permit a user to store passwords in a tool and then
run a command to extract it. In the &lt;code&gt;offlineimaprc&lt;/code&gt;, for example, one can
use:&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="na"&gt;remotepasseval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;get_pass(&amp;quot;E-mail&amp;quot;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;to fetch passwords from pass. Here &lt;code&gt;get_pass&lt;/code&gt; is a python function that
does the dirty work:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_pass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;account&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;check_output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pass &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;account&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitlines&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Similarly, &lt;a class="reference external" href="http://msmtp.sourceforge.net/"&gt;msmtp&lt;/a&gt; lets one use a shell command to get a password:&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="na"&gt;passwordeval pass E-mail&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;where the &lt;code&gt;E-mail&lt;/code&gt; file is associated with the password for a certain account using pass.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="multiple-accounts"&gt;
&lt;h3&gt;Multiple accounts&lt;/h3&gt;
&lt;p&gt;Both &lt;a class="reference external" href="http://www.offlineimap.org/"&gt;Offlineimap&lt;/a&gt; and &lt;a class="reference external" href="http://msmtp.sourceforge.net/"&gt;msmtp&lt;/a&gt; can handle multiple accounts. &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; can too,
but to set sane defaults each time one switches mailboxes, a bit of trickery is
required. The &lt;a class="reference external" href="https://gist.github.com/miguelmota/9456162"&gt;gist here&lt;/a&gt; shows
what's needed. Essentially, using a &lt;code&gt;folder-hook&lt;/code&gt;, one updates the
required configurations (signature, from address, sent mail folder, draft
folder) when one switches to a folder associated with a different account. I
use four accounts in &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; currently. It works rather well. The snippet
below is what I have in my &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; configuration file. It sets up host3 as the
default account, and each time I change to a different host folder, the
folder-hook updates some configurations. Here, I have different files for each
host.&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="c1"&gt;# Hooks for multi-setup&lt;/span&gt;
&lt;span class="c1"&gt;# default&lt;/span&gt;
&lt;span class="na"&gt;set folder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;~/Mail&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set spoolfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;+host3/INBOX&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;source ~/Documents/100_dotfiles/mail/host1.neomuttrc&lt;/span&gt;
&lt;span class="na"&gt;source ~/Documents/100_dotfiles/mail/host4.neomuttrc&lt;/span&gt;
&lt;span class="na"&gt;source ~/Documents/100_dotfiles/mail/host2.neomuttrc&lt;/span&gt;
&lt;span class="na"&gt;source ~/Documents/100_dotfiles/mail/host3.neomuttrc&lt;/span&gt;

&lt;span class="c1"&gt;# folder hook&lt;/span&gt;
&lt;span class="na"&gt;folder-hook host4/* source ~/Documents/100_dotfiles/mail/host4.neomuttrc&lt;/span&gt;
&lt;span class="na"&gt;folder-hook host1/* source ~/Documents/100_dotfiles/mail/host1.neomuttrc&lt;/span&gt;
&lt;span class="na"&gt;folder-hook host2/* source ~/Documents/100_dotfiles/mail/host2.neomuttrc&lt;/span&gt;
&lt;span class="na"&gt;folder-hook host3/* source ~/Documents/100_dotfiles/mail/host3.neomuttrc&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="gpg-signing"&gt;
&lt;h3&gt;GPG signing&lt;/h3&gt;
&lt;p&gt;I sign my e-mails with &lt;a class="reference external" href="https://keys.fedoraproject.org/pks/lookup?search=0xE629112D&amp;amp;op=vindex"&gt;my GPG key&lt;/a&gt;.
&lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; supports this via a few configuration options:&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="na"&gt;set pgp_sign_as&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0xE629112D&lt;/span&gt;
&lt;span class="na"&gt;set crypt_autosign&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set crypt_verify_sig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;set crypt_replysign&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;E-mails will be signed when they're going out, and when a signed e-mail comes
in, &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; will verify the signature if the key is available and so on. If
you're not using GPG keys, this &lt;a class="reference external" href="https://fedoraproject.org/wiki/Creating_GPG_Keys"&gt;guide on the Fedora wiki&lt;/a&gt; is a great guide for
beginners.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="viewing-html-mail-and-attachments"&gt;
&lt;h3&gt;Viewing HTML mail and attachments&lt;/h3&gt;
&lt;p&gt;Even though I send all my e-mail as plain text, I do receive lots of HTML mail.
&lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; can be set up to automatically view HTML e-mail. It does so by using a
tool such as &lt;code&gt;w3m&lt;/code&gt; to strip the e-mail of HTML tags and show the text.
The screenshot below shows an example HTML from Quora.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20171215-neomutt-html.png"&gt;&lt;img alt="A screenshot of Neomutt showing HTML e-mail." src="http://ankursinha.in/images/20171215-neomutt-html.png" style="height: 480.0px;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;A simple configuration line tells &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; what to do:&lt;/p&gt;
&lt;pre class="code ini literal-block"&gt;
&lt;span class="na"&gt;auto_view text/html&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; uses information from &lt;code&gt;mailcap&lt;/code&gt; to do this. For those that are
unaware of what &lt;code&gt;mailcap&lt;/code&gt; is, like I was, &lt;a class="reference external" href="https://linux.die.net/man/4/mailcap"&gt;here's the manual page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The configuration file for &lt;code&gt;mailcap&lt;/code&gt; is &lt;code&gt;~/.mailcaprc&lt;/code&gt;. Mine looks
like this:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
audio/*; /usr/bin/xdg-open %s ; copiousoutput

image/*; /usr/bin/xdg-open %s ; copiousoutput

application/msword; /usr/bin/xdg-open %s ; copiousoutput
application/pdf; /usr/bin/xdg-open %s ; copiousoutput
application/postscript ; /usr/bin/xdg-open %s ; copiousoutput

text/html; qutebrowser %s &amp;amp;&amp;amp; sleep 5 ; test=test -n &amp;quot;$DISPLAY&amp;quot;;
nametemplate=%s.html; needsterminal
# text/html; lynx -dump %s ; copiousoutput; nametemplate=%s.html
text/html; w3m -I %{charset} -T text/html ; copiousoutput; nametemplate=%s.html
&lt;/pre&gt;
&lt;p&gt;One can use either &lt;code&gt;lynx&lt;/code&gt; or &lt;code&gt;w3m&lt;/code&gt;. I tried both and settled for
&lt;code&gt;w3m&lt;/code&gt;. &lt;a class="reference external" href="http://getfedora.org"&gt;Fedora&lt;/a&gt; systems have a default &lt;code&gt;mailcaprc&lt;/code&gt; file at
&lt;code&gt;/etc/mailcap&lt;/code&gt; which I adapted from. The &lt;code&gt;copiousoutput&lt;/code&gt; option
tells &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; not to quickly delete the temporary file.&lt;/p&gt;
&lt;p&gt;For cases where HTML e-mails also contain images, one can simply open the HTML
e-mail in a browser. The HTML e-mails are present as attachements to the e-mail
message. Pressing &lt;code&gt;v&lt;/code&gt; on an e-mail message shows the attachement menu.
The screenshot below shows the attachment menu for the same e-mail as above.
Hitting enter opens up the HTML attached version in the browser I've set up in
my &lt;code&gt;mailcap&lt;/code&gt; above, &lt;code&gt;qutebrowser&lt;/code&gt;.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20171215-neomutt-attachments.png"&gt;&lt;img alt="A screenshot of Neomutt showing e-mail attachments." src="http://ankursinha.in/images/20171215-neomutt-attachments.png" style="height: 480.0px;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Note: all attachments can be viewed like this.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="viewing-links-with-urlview"&gt;
&lt;h3&gt;Viewing links with urlview&lt;/h3&gt;
&lt;p&gt;Since I use &lt;a class="reference external" href="http://byobu.co/"&gt;byobu&lt;/a&gt;, which is based on either &lt;a class="reference external" href="https://github.com/tmux/tmux/wiki"&gt;tmux&lt;/a&gt; or &lt;a class="reference external" href="https://www.gnu.org/software/screen/"&gt;screen&lt;/a&gt;, I can copy and
paste any text in the terminal using their buffers. &lt;a class="reference external" href="https://www.neomutt.org"&gt;neomutt&lt;/a&gt; provides an easier
way, though, using &lt;a class="reference external" href="https://github.com/sigpipe/urlview"&gt;urlview&lt;/a&gt;. So, binding ctrl-b to &lt;a class="reference external" href="https://github.com/sigpipe/urlview"&gt;urlview&lt;/a&gt; will put the e-mail
through &lt;a class="reference external" href="https://github.com/sigpipe/urlview"&gt;urlview&lt;/a&gt; to show a menu of all URLs in it. One can then pick what URL
to open, as the screenshot below shows:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
# urlview bits
macro index \cb | urlview\n
macro pager \cb | urlview\n
&lt;/pre&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20171215-neomutt-urlview.png"&gt;&lt;img alt="A screenshot of Neomutt with urlview." src="http://ankursinha.in/images/20171215-neomutt-urlview.png" style="height: 480.0px;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="right-then-let-s-stick-to-the-home-row"&gt;
&lt;h2&gt;Right then, let's stick to the home row!&lt;/h2&gt;
&lt;p&gt;This post turned out to be a lot lengthier than I'd expected. There's always so
much tweaking one can do. I hope this helps somewhat. It isn't complete by a
far stretch, but it should include enough hints and links to enable a reader to
Google up and figure things out. Read the docs, read the manuals---it's all in
there.&lt;/p&gt;
&lt;p&gt;Happy e-mailing!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="incomplete-list-of-references"&gt;
&lt;h2&gt;Incomplete list of references&lt;/h2&gt;
&lt;p&gt;Here are most of the links I looked at, in no particular order:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://hobo.house/2015/09/09/take-control-of-your-email-with-mutt-offlineimap-notmuch/"&gt;https://hobo.house/2015/09/09/take-control-of-your-email-with-mutt-offlineimap-notmuch/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/sadsfae/misc-dotfiles/blob/master/muttrc-gpg.txt"&gt;https://github.com/sadsfae/misc-dotfiles/blob/master/muttrc-gpg.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://upsilon.cc/~zack/blog/posts/2011/01/how_to_use_Notmuch_with_Mutt/"&gt;http://upsilon.cc/~zack/blog/posts/2011/01/how_to_use_Notmuch_with_Mutt/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://notmuchmail.org/"&gt;https://notmuchmail.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://git.notmuchmail.org/git/notmuch/blob/HEAD:/vim/README"&gt;https://git.notmuchmail.org/git/notmuch/blob/HEAD:/vim/README&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.neomutt.org/guide/optionalfeatures"&gt;https://www.neomutt.org/guide/optionalfeatures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wiki.archlinux.org/index.php/OfflineIMAP#Using_pass"&gt;https://wiki.archlinux.org/index.php/OfflineIMAP#Using_pass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.df7cb.de/blog/2010/Using_multiple_IMAP_accounts_with_Mutt.html"&gt;http://www.df7cb.de/blog/2010/Using_multiple_IMAP_accounts_with_Mutt.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/OfflineIMAP/offlineimap/blob/master/offlineimap.conf"&gt;https://github.com/OfflineIMAP/offlineimap/blob/master/offlineimap.conf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wiki.archlinux.org/index.php/OfflineIMAP"&gt;https://wiki.archlinux.org/index.php/OfflineIMAP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.offlineimap.org/doc/use_cases.html"&gt;http://www.offlineimap.org/doc/use_cases.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://sparkslinux.wordpress.com/2014/01/30/configuring-offlineimap-to-validate-ssltls-certificates/"&gt;https://sparkslinux.wordpress.com/2014/01/30/configuring-offlineimap-to-validate-ssltls-certificates/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stevelosh.com/blog/2012/10/the-homely-mutt/#why-local-email"&gt;http://stevelosh.com/blog/2012/10/the-homely-mutt/#why-local-email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://raisedfist.net/2017-05-02/muttupdated/"&gt;https://raisedfist.net/2017-05-02/muttupdated/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/18765928/mutt-send-signature-hook"&gt;https://stackoverflow.com/questions/18765928/mutt-send-signature-hook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://notmuchmail.org/vimtips/"&gt;https://notmuchmail.org/vimtips/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.neomutt.org/guide/configuration.html#my-hdr"&gt;https://www.neomutt.org/guide/configuration.html#my-hdr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.neomutt.org/guide/advancedusage.html"&gt;https://www.neomutt.org/guide/advancedusage.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/neomutt/neomutt/issues/629"&gt;https://github.com/neomutt/neomutt/issues/629&lt;/a&gt; - address completion using
notmuch&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jasonwryan.com/blog/2012/05/12/mutt/"&gt;http://jasonwryan.com/blog/2012/05/12/mutt/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Fedora"></category></entry><entry><title>Fedora Classroom: Git 101: report</title><link href="http://ankursinha.in/2017/10/07/fedora-classroom-git-101-report.html" rel="alternate"></link><published>2017-10-07T14:19:10+01:00</published><updated>2017-10-07T14:19:10+01:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2017-10-07:/2017/10/07/fedora-classroom-git-101-report.html</id><summary type="html">&lt;p class="first last"&gt;I taught a &lt;a class="reference external" href="https://fedoraproject.org/wiki/Classroom"&gt;Fedora Classroom&lt;/a&gt; session the other day - &lt;a class="reference external" href="https://meetbot.fedoraproject.org/fedora-classroom/2017-10-05/fedora-classroom.2017-10-05-14.17.log.html"&gt;Git 101&lt;/a&gt; -
where I walked through the basics of &lt;a class="reference external" href="https://git-scm.com/"&gt;Git&lt;/a&gt;. This is a quick summary
of the session.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I taught another &lt;a class="reference external" href="https://fedoraproject.org/wiki/Classroom"&gt;Fedora Classroom&lt;/a&gt; this week, on &lt;a class="reference external" href="https://meetbot.fedoraproject.org/fedora-classroom/2017-10-05/fedora-classroom.2017-10-05-14.17.log.html"&gt;Git 101&lt;/a&gt;. I used the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Internet_Relay_Chat"&gt;IRC&lt;/a&gt;
again since this session was to be another hands-on walkthrough. I reckon I've
now learned that hands-on sessions go on longer than initially planned. This
one lasted about three hours!&lt;/p&gt;
&lt;div class="section" id="some-metrics"&gt;
&lt;h2&gt;Some metrics&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Length: 3 hours&lt;/li&gt;
&lt;li&gt;Attendees: ~25 people&lt;/li&gt;
&lt;li&gt;Sentences spoken: LOTS!&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="summary"&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;I didn't go much into the theory, and there's a lot of it in &lt;a class="reference external" href="https://git-scm.com/"&gt;Git&lt;/a&gt;. Instead, I
had made it my goal to walk the attendees through the usual &lt;a class="reference external" href="https://git-scm.com/"&gt;Git&lt;/a&gt; workflow.
So, that's exactly what we did. We started by setting up an empty repository,
then added files to it, learned how to see changes and so on. Then, we moved
on to branching.&lt;/p&gt;
&lt;p&gt;Once we'd explored the advantages of using branches we started working with
remotes. Everyone set up repositories on &lt;a class="reference external" href="https://pagure.io"&gt;Pagure&lt;/a&gt; or &lt;a class="reference external" href="https://github.com"&gt;Github&lt;/a&gt;. To end with, I
got everyone to fork my repository and submit pull requests.&lt;/p&gt;
&lt;p&gt;I think everyone got the hang of it. There were some good questions, a bit of
discussion too. I do hope it'll get more people to use &lt;a class="reference external" href="https://git-scm.com/"&gt;Git&lt;/a&gt; and contribute to
different projects on &lt;a class="reference external" href="https://pagure.io"&gt;Pagure&lt;/a&gt; or &lt;a class="reference external" href="https://github.com"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="feedback-is-always-welcome"&gt;
&lt;h2&gt;Feedback is always welcome&lt;/h2&gt;
&lt;p&gt;If you had attended the session, or have gone through the logs and have some
feedback, please get in touch. You can use the Fedora classroom channels:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="mailto:classroom&amp;#64;lists.fedoraproject.org"&gt;mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;#fedora-classroom on Freenode &lt;a class="reference external" href="http://webchat.freenode.net/?channels=%23fedora-classroom"&gt;IRC channel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can even comment on this blog post, and of course, you can give me feedback
privately. I'm FranciscoD on quite a few Fedora IRC channels, and I can be
reached via e-mail on my Fedora address at ankursinha AT fedoraproject DOT org.
All suggestions, comments, criticism is most welcome.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="more-instructors-needed"&gt;
&lt;h2&gt;More instructors needed!&lt;/h2&gt;
&lt;p&gt;The classroom sessions are going rather well, but &lt;a class="reference external" href="https://fedoraproject.org/wiki/Classroom#Help_wanted"&gt;we still need more help&lt;/a&gt;. We'd like to cover
more topics from different areas, not just tech related- everything from
design, to free software philosophy and community building! If there's anything
at all you think is worth a classroom session, please get in touch with the
team on the &lt;a class="reference external" href="mailto:classroom&amp;#64;lists.fedoraproject.org"&gt;Fedora classroom mailing list&lt;/a&gt;. A log of all past sessions -
whether on &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Internet_Relay_Chat"&gt;IRC&lt;/a&gt; or on a video platform are maintained on the wiki page &lt;a class="reference external" href="https://fedoraproject.org/wiki/Classroom#Previous_Sessions"&gt;here&lt;/a&gt; for everyone to
peruse at their convenience.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="logs"&gt;
&lt;h2&gt;Logs&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://meetbot.fedoraproject.org/fedora-classroom/2017-10-05/fedora-classroom.2017-10-05-14.17.log.html"&gt;HTML logs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://meetbot.fedoraproject.org/fedora-classroom/2017-10-05/fedora-classroom.2017-10-05-14.17.html"&gt;HTML minutes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://meetbot.fedoraproject.org/fedora-classroom/2017-10-05/fedora-classroom.2017-10-05-14.17.txt"&gt;Text minutes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Community"></category><category term="Fedora"></category><category term="Git"></category><category term="Planet"></category></entry></feed>