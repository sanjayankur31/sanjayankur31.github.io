<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ankursinha.in/blog - Calliope</title><link href="http://ankursinha.in/" rel="alternate"></link><link href="http://ankursinha.in/feeds/tags/calliope.atom.xml" rel="self"></link><id>http://ankursinha.in/</id><updated>2017-09-19T00:40:41+01:00</updated><subtitle>neuroscience/fedora/musings</subtitle><entry><title>Writing LaTeX well in Vim</title><link href="http://ankursinha.in/2017/09/19/writing-latex-well-in-vim.html" rel="alternate"></link><published>2017-09-19T00:40:41+01:00</published><updated>2017-09-19T00:40:41+01:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2017-09-19:/2017/09/19/writing-latex-well-in-vim.html</id><summary type="html">&lt;p class="first last"&gt;&lt;a class="reference external" href="https://vim.sourceforge.io/"&gt;Vim&lt;/a&gt; is a great text editor and &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt; is a great document writing system. Since I write a lot of &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt; for my research, I've been adding various &lt;a class="reference external" href="https://vim.sourceforge.io/"&gt;Vim&lt;/a&gt; plug-ins to make my writing easier over the years. This post documents some of these additions.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://vim.sourceforge.io/"&gt;Vim&lt;/a&gt; is a great text editor if one takes a bit of time to learn how to use it properly. There's quite enough documentation on how to use &lt;a class="reference external" href="https://vim.sourceforge.io/"&gt;Vim&lt;/a&gt; correctly, and efficiently so I shan't cover that here. &lt;code&gt;vimtutor&lt;/code&gt; is an excellent resource to begin at.&lt;/p&gt;
&lt;p&gt;Similarly, &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt; is a &lt;a class="reference external" href="https://www.google.co.uk/search?hl=en-GB&amp;amp;q=why+use+latex+for+writing"&gt;brilliant documentation system&lt;/a&gt;, especially for scientific writing if one takes the time to learn it. Unlike the usual Microsoft Word type systems, &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt; is a set of commands/macros. Once the document is written using these, it must be compiled to produce a PDF document. It may appear daunting at first, but after one is familiar with it, it makes writing a breeze. Now, there are a editors especially designed for &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt;, but given that I use &lt;a class="reference external" href="https://vim.sourceforge.io/"&gt;Vim&lt;/a&gt; for about all my writing, I use it for &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt; too.&lt;/p&gt;
&lt;p&gt;On Fedora, you can install &lt;a class="reference external" href="https://vim.sourceforge.io/"&gt;Vim&lt;/a&gt; using &lt;a class="reference external" href="https://github.com/rpm-software-management/dnf"&gt;DNF&lt;/a&gt;: &lt;code&gt;sudo dnf install vim-enhanced vim-X11&lt;/code&gt;. I install the X11 package too to &lt;a class="reference external" href="http://vim.wikia.com/wiki/Accessing_the_system_clipboard"&gt;use the system clipboard&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="latex-tools"&gt;
&lt;h2&gt;LaTeX tools&lt;/h2&gt;
&lt;p&gt;To begin with, there are a few command line commands that one can use other than the necessary &lt;code&gt;latex&lt;/code&gt;, &lt;code&gt;pdflatex&lt;/code&gt;, &lt;code&gt;bibtex&lt;/code&gt;, &lt;code&gt;biber&lt;/code&gt;, and so on commands:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;latexmk&lt;/code&gt; is a great tool that figures out the compilation sequence required to generate the document, and it does it for you.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lacheck&lt;/code&gt; and &lt;code&gt;chktex&lt;/code&gt; are both linters for &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt; that make writing a lot easier.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;detex&lt;/code&gt; strips a tex document of &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt; commands to produce only the text bits.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;diction&lt;/code&gt;, and &lt;code&gt;style&lt;/code&gt; give the &lt;a class="reference external" href="https://www.linux.com/news/improve-your-writing-gnu-style-checkers"&gt;author an idea of the readability of the text&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One can use any text editor and then these utilities to improve their &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt; writing experience.&lt;/p&gt;
&lt;p&gt;On Fedora, install these with &lt;a class="reference external" href="https://github.com/rpm-software-management/dnf"&gt;DNF&lt;/a&gt;: &lt;code&gt;sudo dnf install latexmk /usr/bin/lacheck /usr/bin/chktex /usr/bin/detex diction&lt;/code&gt;. (Yes, you can tell &lt;a class="reference external" href="https://github.com/rpm-software-management/dnf"&gt;DNF&lt;/a&gt; what file you want to install too!)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="built-in-vim-features"&gt;
&lt;h2&gt;Built-in Vim features&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://vim.sourceforge.io/"&gt;Vim&lt;/a&gt; already contains quite a few features that make writing quite easy;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://vim.wikia.com/wiki/Omni_completion"&gt;Omni completion&lt;/a&gt; provides good suggestions based on the text under the cursor.&lt;/li&gt;
&lt;li&gt;There's in-built &lt;a class="reference external" href="http://vimdoc.sourceforge.net/htmldoc/spell.html"&gt;spell checking&lt;/a&gt; already.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://vimdoc.sourceforge.net/htmldoc/fold.html"&gt;Folding&lt;/a&gt; logical bits makes the document easier to read and navigate through.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://vimdoc.sourceforge.net/htmldoc/syntax.html"&gt;Syntax highlighting&lt;/a&gt; makes it a lot easier to read code by marking different commands in different colours.&lt;/li&gt;
&lt;li&gt;There are different flavours of &lt;a class="reference external" href="https://jeffkreeftmeijer.com/vim-number/"&gt;linenumbers&lt;/a&gt; that make moving about a document much simpler.&lt;/li&gt;
&lt;li&gt;At some point, the &lt;a class="reference external" href="http://vimdoc.sourceforge.net/htmldoc/syntax.html#conceal"&gt;conceal&lt;/a&gt; feature was added that further improves readability of documents&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://vimdoc.sourceforge.net/htmldoc/windows.html#windows"&gt;Buffers, tabs, windows&lt;/a&gt; are available in &lt;a class="reference external" href="https://vim.sourceforge.io/"&gt;Vim&lt;/a&gt; too, of course.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="vim-plug-ins"&gt;
&lt;h2&gt;Vim plug-ins&lt;/h2&gt;
&lt;p&gt;There are a lot of &lt;a class="reference external" href="https://vim.sourceforge.io/"&gt;Vim&lt;/a&gt; plug-ins that extend some functionality or the other. The simplest way to install plug-ins is to use &lt;a class="reference external" href="https://github.com/VundleVim/Vundle.vim"&gt;Vundle&lt;/a&gt;. Here are some plug-ins that I use. They're not all specific to &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt;.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/Konfekt/FastFold"&gt;Fastfold&lt;/a&gt; makes folding faster.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/sheerun/vim-polyglot"&gt;vim-polyglot&lt;/a&gt; provides better syntax highlighting for a many languages.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/vim-airline/vim-airline"&gt;vim-airline&lt;/a&gt; provides an excellent, informative status line.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/majutsushi/tagbar"&gt;tagbar&lt;/a&gt; lists sections (tags in general) in a different pane.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/altercation/vim-colors-solarized"&gt;vim-colors-solarized&lt;/a&gt; provides the solarized themes for &lt;a class="reference external" href="https://vim.sourceforge.io/"&gt;Vim&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/lervag/vimtex"&gt;vimtex&lt;/a&gt; provides commands to quickly compile &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt; files, complete references, citations, navigate quicker, view the generated files, and so on.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/SirVer/ultisnips"&gt;ultisnips&lt;/a&gt; provides lots of snippets for many languages, including &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt;. Get the snippets from the &lt;a class="reference external" href="https://github.com/honza/vim-snippets"&gt;vim-snippets&lt;/a&gt; plug-in.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/Valloric/YouCompleteMe"&gt;YouCompleteMe&lt;/a&gt; is a completion engine that supports many languages. Remember that this one needs to be compiled!&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/vim-syntastic/syntastic/"&gt;Syntastic&lt;/a&gt; provides syntax checkers for many languages, including &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've also used &lt;a class="reference external" href="https://github.com/vim-latex/vim-latex"&gt;vim-latex&lt;/a&gt; in the past and it's very very good. However, since I have other plug-ins that provide the various functionality that it brings together for many other languages too, I'm no longer using it. Worth a go, though.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="an-example-document"&gt;
&lt;h2&gt;An example document&lt;/h2&gt;
&lt;p&gt;The image below shows a &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt; file open in &lt;a class="reference external" href="https://vim.sourceforge.io/"&gt;Vim&lt;/a&gt; with different plug-ins in action:&lt;/p&gt;
&lt;center&gt;&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20170919-latex-vim.png"&gt;&lt;img alt="Screenshot of Vim with a LaTeX file open showing various features." class="align-center" src="http://ankursinha.in/images/20170919-latex-vim.png" style="height: 480.0px;" /&gt;&lt;/a&gt;
&lt;/center&gt;&lt;ul class="simple"&gt;
&lt;li&gt;On top, one can see the open buffer. Only one buffer is open at the moment.&lt;/li&gt;
&lt;li&gt;In the left hand side margin, one can see the fold indicators.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;S&amp;gt;&lt;/code&gt; bit is an indicator from the linter that Syntastic uses, showing a warning or an error.&lt;/li&gt;
&lt;li&gt;The line numbers are also visible in the left margin. Since I am in insert mode, they're just plain line numbers. Once one leaves insert mode, they change to relative.&lt;/li&gt;
&lt;li&gt;On line 171, the conceal feature shows Greek symbols instead of their &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt; commands.&lt;/li&gt;
&lt;li&gt;Syntax highlighting is clearly visible. The commands have different colours. This is the solarized dark theme, of course.&lt;/li&gt;
&lt;li&gt;The &amp;quot;pop-up&amp;quot; shows Ultisnips at work. Here, I'm looking at adding a new equation environment.&lt;/li&gt;
&lt;li&gt;Underneath the pop up, the dashed line is a folded section. The &lt;code&gt;+&lt;/code&gt; symbol in the left margin implies that it is folded.&lt;/li&gt;
&lt;li&gt;In the status line, one can see that spell check is enabled, and that I'm using the &lt;code&gt;en_gb&lt;/code&gt; language.&lt;/li&gt;
&lt;li&gt;Next, the git status, and the git branch I'm in. That's the &lt;a class="reference external" href="https://github.com/tpope/vim-fugitive"&gt;vim-fugitive&lt;/a&gt; plug-in at work.&lt;/li&gt;
&lt;li&gt;Then, the filetype, the encoding, the number of words and so on provided by the airline plug-in.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Neat, huh? There is a lot more there that isn't easy to show in a screen-shot. For example, &lt;code&gt;\ll&lt;/code&gt; will compile the &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt; file; &lt;code&gt;\lv&lt;/code&gt; opens the generated PDF file in a PDF viewer, Evince in my case; &lt;code&gt;\lc&lt;/code&gt; will clean the directory of any temporary files that were generated while compiling the document.&lt;/p&gt;
&lt;p&gt;I keep all my &lt;a class="reference external" href="https://github.com/sanjayankur31/vimfiles"&gt;vimfiles on Github&lt;/a&gt;. Feel free to take a look and derive your own. I tweak my configuration each time I find something new, though, so it may change rather frequently. Remember to read the documentation for whatever plug-ins in use. They provide a lot of options, lots of shortcuts, lots of other commands, and sometimes setting them up incorrectly can cause vim to behave in unexpected ways.&lt;/p&gt;
&lt;p&gt;TL;DR: Use &lt;a class="reference external" href="https://vim.sourceforge.io/"&gt;Vim&lt;/a&gt;, and use &lt;a class="reference external" href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt;!!&lt;/p&gt;
&lt;/div&gt;
</content><category term="Calliope"></category><category term="Fedora"></category><category term="Free software"></category><category term="LaTeX"></category><category term="Vim"></category></entry><entry><title>Calliope - helping you keep a diary - in LaTeX!</title><link href="http://ankursinha.in/2016/03/05/calliope-helping-you-keep-a-diary-in-latex.html" rel="alternate"></link><published>2016-03-05T14:07:52+00:00</published><updated>2016-03-05T14:07:52+00:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2016-03-05:/2016/03/05/calliope-helping-you-keep-a-diary-in-latex.html</id><summary type="html">&lt;p class="first last"&gt;Most researchers keep a research journal where we note down our musings, notes and so on. While a paper diary is still quite common, I'd really prefer something on my laptop/computer. There are various applications out there for journal writing, but none of them really match up to good old &lt;a class="reference external" href="https://en.wikibooks.org/wiki/LaTeX"&gt;LaTeX&lt;/a&gt;. I've written a simple script that makes it really easy to maintain a journal using LaTeX - &lt;a class="reference external" href="https://github.com/sanjayankur31/calliope"&gt;Calliope&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Quite a few people write personal diaries - researchers tend to also keep research diaries where we note our generally brilliant ideas. I've used &lt;a class="reference external" href="http://lifeograph.sourceforge.net/wiki/Main_Page"&gt;Lifeograph&lt;/a&gt; for a number of years now. It's a great application with all the right features that a diary needs - chapters, tags, and  metrics. It doesn't quite work for a &lt;em&gt;research diary&lt;/em&gt;, though - it doesn't support maths notation for a start, and we really do write a lot of very complicated maths from time to time. (The kinds with lots of symbols you see in the films? Think &amp;quot;&lt;a class="reference external" href="http://www.imdb.com/title/tt0268978/"&gt;A beautiful mind&lt;/a&gt;&amp;quot;.)&lt;/p&gt;
&lt;p&gt;The simple solution, of course, is &lt;a class="reference external" href="http://lifeograph.sourceforge.net/wiki/Main_Page"&gt;LaTeX&lt;/a&gt;. &lt;a class="reference external" href="http://lifeograph.sourceforge.net/wiki/Main_Page"&gt;LaTeX&lt;/a&gt; is used extensively in academic writing. While it does have a reputation for being complex and complicated (&lt;a class="reference external" href="http://english.stackexchange.com/questions/10459/what-is-the-difference-between-complicated-and-complex"&gt;YES! There's a difference in the two words - they're not interchangeable!&lt;/a&gt;) at times, it is by far the best tool for academic writing. It has everything a researcher needs - citation support, can be customised to fit multiple format, and if you pair it with &lt;a class="reference external" href="https://git-scm.com/"&gt;Git&lt;/a&gt; you even have versioning and &lt;a class="reference external" href="http://ankursinha.in/blog/tag/zaphod/"&gt;change tracking&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="calliope"&gt;
&lt;h2&gt;Calliope&lt;/h2&gt;
&lt;p&gt;I went looking for packages that may provide this functionality in &lt;a class="reference external" href="http://lifeograph.sourceforge.net/wiki/Main_Page"&gt;LaTeX&lt;/a&gt; but didn't quite find any that had a convenient workflow and so on. I ran into a &lt;a class="reference external" href="https://github.com/mikhailklassen/research-diary-project"&gt;this Github project&lt;/a&gt; instead, which is a set of templates and scripts that does quite a good job. I've forked it and made some improvements. There's now a single script that takes arguments, for example. I've also added support for indexing - which works similar to tagging - it'll generate a nice clickable index at the end of the document. Of course, I've given it a fancy name, &lt;a class="reference external" href="https://github.com/sanjayankur31/calliope"&gt;Calliope, and put it up on Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Usage is quite straightforward:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;asinha&amp;#64;cs-as14aho-2-herts-ac-uk  00_research_diary&lt;span class="o"&gt;(&lt;/span&gt;master %&lt;span class="o"&gt;=)]&lt;/span&gt;$ ./calliope.sh -h
    usage: ./calliope.sh options

    Master script file that provides functions to maintain a journal using LaTeX.

    OPTIONS:
    -h  Show this message and quit

    -t  Add new entry &lt;span class="k"&gt;for&lt;/span&gt; today

    -c  Compile today&lt;span class="err"&gt;'&lt;/span&gt;s entry

    -a  &amp;lt;year&amp;gt;
        Year to generate anthology of

    -p  &amp;lt;year&amp;gt;
        Compile all entries in this year

    -s  &amp;lt;entry&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;yyyy-mm-dd&lt;span class="o"&gt;)&lt;/span&gt;
        Compile specific entry
&lt;/pre&gt;
&lt;p&gt;This is what the directory structure looks like:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;asinha&amp;#64;cs-as14aho-2-herts-ac-uk  00_research_diary&lt;span class="o"&gt;(&lt;/span&gt;master %&lt;span class="o"&gt;=)]&lt;/span&gt;$ tree
.
├── calliope.sh
├── diary
│&amp;nbsp;&amp;nbsp; ├── &lt;span class="m"&gt;2016&lt;/span&gt;
│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── &lt;span class="m"&gt;2016&lt;/span&gt;-03-04.tex
│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── &lt;span class="m"&gt;2016&lt;/span&gt;-03-05.tex
│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── images
│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── research_diary.sty -&amp;gt; ../../templates/research_diary.sty
│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; └── stdp_connection_symmetric.h
│&amp;nbsp;&amp;nbsp; └── research_diary.sty -&amp;gt; ../templates/research_diary.sty
├── pdfs
│&amp;nbsp;&amp;nbsp; └── &lt;span class="m"&gt;2016&lt;/span&gt;
│&amp;nbsp;&amp;nbsp;     ├── &lt;span class="m"&gt;2016&lt;/span&gt;-03-04.pdf
│&amp;nbsp;&amp;nbsp;     └── &lt;span class="m"&gt;2016&lt;/span&gt;-03-05.pdf
├── README.rst
└── templates
    ├── entry.tex
    └── research_diary.sty

        &lt;span class="m"&gt;6&lt;/span&gt; directories, &lt;span class="m"&gt;11&lt;/span&gt; files
&lt;/pre&gt;
&lt;p&gt;The script generates your source &lt;a class="reference external" href="http://lifeograph.sourceforge.net/wiki/Main_Page"&gt;LaTeX&lt;/a&gt; files and puts them in the folders in &lt;tt class="docutils literal"&gt;diary/&lt;/tt&gt;. Then you write up and use the script to compile it - the generated pdfs are collected in the &lt;tt class="docutils literal"&gt;pdfs/&lt;/tt&gt; folder. The script can also generate an anthology for a year you pick. The resultant pdf for a daily entry will look like this:&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://ankursinha.in/images/20160305-Calliope.png"&gt;&lt;img alt="Screenshot showing pdf generated by Calliope" class="align-center" src="http://ankursinha.in/images/20160305-Calliope.png" style="width: 500px;" /&gt;&lt;/a&gt;
&lt;p&gt;That's pretty much it. Commit your entry to Git and you're done.&lt;/p&gt;
&lt;p&gt;So, give it a go and please &lt;a class="reference external" href="https://github.com/sanjayankur31/calliope/issues/"&gt;file issues&lt;/a&gt; if you have any suggestions that would improve it.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Fedora"></category><category term="Git"></category><category term="LaTeX"></category><category term="Linux"></category><category term="Calliope"></category></entry></feed>