<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ankursinha.in/blog - Rust</title><link href="http://ankursinha.in/" rel="alternate"></link><link href="http://ankursinha.in/feeds/tags/rust.atom.xml" rel="self"></link><id>http://ankursinha.in/</id><updated>2016-09-11T20:58:54+01:00</updated><subtitle>neuroscience/fedora/musings</subtitle><entry><title>Some notes on programming languages and web development</title><link href="http://ankursinha.in/2016/09/11/some-notes-on-programming-languages-and-web-development.html" rel="alternate"></link><published>2016-09-11T20:58:54+01:00</published><updated>2016-09-11T20:58:54+01:00</updated><author><name>ankur</name></author><id>tag:ankursinha.in,2016-09-11:/2016/09/11/some-notes-on-programming-languages-and-web-development.html</id><summary type="html">&lt;p class="first last"&gt;Just some notes on different programming languages that one can use for web development. Includes Python, RoR, Rust, Erlang?&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Even before I begin, I must state that I'm not a web developer. I've never been one, and I have no intention to turn into one either. It isn't that I don't like developing web applications. On the contrary, I find the topic incredibly interesting. It's just that everything I need has pretty much already been developed by web developers, so I've never had to write an app myself. Add to that my lack of interest in pursuing a career the software development industry - I prefer my research - the implications are that I will always prioritise research related development.&lt;/p&gt;
&lt;p&gt;Take this blog, for example. It once used to be a &lt;a class="reference external" href="https://wordpress.org/"&gt;Wordpress&lt;/a&gt; deployment, but I eventually got fed up with it bleeding the resources of my shared hosting space and moved to a static site. I didn't even bother learning a new language like &lt;a class="reference external" href="https://www.ruby-lang.org/en/"&gt;Ruby&lt;/a&gt; to use &lt;a class="reference external" href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;. I found something that was written in &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;, a language that I know pretty well - &lt;a class="reference external" href="http://docs.getpelican.com/en/3.6.3/"&gt;Pelican&lt;/a&gt; - which works really well. So, really, for my web requirements, I tend to pick the path of least effort.&lt;/p&gt;
&lt;p&gt;Recently though, a requirement has arisen. I use &lt;a class="reference external" href="http://wikindx.sourceforge.net/features.html"&gt;Wikindx&lt;/a&gt; as my bibliography manager. There are various desktop applications available, of course, but the advantage of a web application is that it's accessible from everywhere. &lt;a class="reference external" href="https://www.mendeley.com/features/"&gt;Mendeley&lt;/a&gt; is quite nice and so is &lt;a class="reference external" href="https://en.wikipedia.org/wiki/EndNote"&gt;EndNote&lt;/a&gt;, but they aren't free software, so I shan't use them. Now, even though &lt;a class="reference external" href="http://wikindx.sourceforge.net/features.html"&gt;Wikindx&lt;/a&gt; is a good bibliography manager with lots of additional helpful features, I want something that can also keep up with new journals, and help me cut through the plethora of articles to find ones that are relevant to my work. I follow about 40 journals using &lt;a class="reference external" href="https://lzone.de/liferea/"&gt;Liferea&lt;/a&gt;, but honestly, going through all of them, even with search folders, is a mammoth task. One option is to extend &lt;a class="reference external" href="http://wikindx.sourceforge.net/features.html"&gt;Wikindx&lt;/a&gt;. Hrm, it's written in PHP - do I want to learn PHP? Not really - so that isn't really a solution. It'd be nice if I could use this as a constructive exercise, to learn something new, wouldn't it?&lt;/p&gt;
&lt;p&gt;The obvious solution is to hack something up! I could write a bunch of scripts in some language quickly, but I'd prefer not to lose the functionality that I've gotten used to in &lt;a class="reference external" href="http://wikindx.sourceforge.net/features.html"&gt;Wikindx&lt;/a&gt;. So, let's write a web application then! Yay!&lt;/p&gt;
&lt;p&gt;Before I begin hacking left, right, and center, I wanted to decide what I want to learn. So I did a little research on the different languages that can be used for web development and their features and drawbacks. I'm not going to come up with a conclusion here. In fact, I'm not even going to discuss the strengths and weaknesses of the languages here. They have different designs, and work for different purposes. As long as I can build a web application with reasonable time and effort, I don't really care too much about the nitty-gritty details. I'm not going to waste time on another &amp;quot;this language is better than that one!&amp;quot; argument. All I'm going to do below is list the options I have.&lt;/p&gt;
&lt;p&gt;To begin with, this is meant to be a fun exercise. So, I'm going to write it as a single user app - to reduce the amount I need to learn. When it's done and if my colleagues think it's worth developing into a complete multi user website with collaborative features, it can be extended. So, yea, a prototype to begin with.&lt;/p&gt;
&lt;p&gt;My requirements:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;the learning curve must not be tedious nor boring - rather, it should be something fresh&lt;/li&gt;
&lt;li&gt;a framework would be nice - so that the task isn't too taxing&lt;/li&gt;
&lt;li&gt;good documentation is always welcome&lt;/li&gt;
&lt;li&gt;good community support is also welcome - sometimes you need someone to throw you an RTFM or LMGTFY link&lt;/li&gt;
&lt;li&gt;I don't reckon scalability is an issue at the moment?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;p&gt;The first on my list was obviously Python. I know the language well. I know the ninjas over at Fedora Infrastructure love Python - &lt;a class="reference external" href="https://bodhi.fedoraproject.org"&gt;Bodhi&lt;/a&gt; seems to use &lt;a class="reference external" href="http://www.pylonsproject.org/"&gt;Pyramid&lt;/a&gt;, and &lt;a class="reference external" href="https://pagure.io"&gt;Pagure&lt;/a&gt; uses &lt;a class="reference external" href="http://flask.pocoo.org/"&gt;Flask&lt;/a&gt;. Python is easy to use, and it's really quick to come up with a working prototype. These frameworks are also widely used, so there are enough resources for beginners to learn off - tutorials, cook books, and the sort.&lt;/p&gt;
&lt;p&gt;However, I already know Python and while learning how to use a framework is interesting, learning a new language is probably more interesting?&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ruby"&gt;
&lt;h2&gt;Ruby&lt;/h2&gt;
&lt;p&gt;Ruby on Rails seems to be quite popular. Github and Twitter use it - as front ends, I seem to find. The framework is also quite widely used - people say lots of good stuff about it. Ruby seems like a good language to learn too. This looks promising.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nodejs"&gt;
&lt;h2&gt;NodeJS&lt;/h2&gt;
&lt;p&gt;Of course, this must be considered. It seems to be everywhere now. Javascript is quite simple, I've used it a bit. Maybe?&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="go"&gt;
&lt;h2&gt;Go&lt;/h2&gt;
&lt;p&gt;Ah, a Google language. I see quite a few frameworks also available. The documentation seems to be decent too - maybe?&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="rust"&gt;
&lt;h2&gt;Rust&lt;/h2&gt;
&lt;p&gt;This one looks kind of exciting. It's quite new, and isn't as widely used. The documentation may be an issue? I see a framework already - &lt;a class="reference external" href="https://github.com/iron/iron"&gt;Iron&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="scala"&gt;
&lt;h2&gt;Scala&lt;/h2&gt;
&lt;p&gt;Yes, it isn't Java, and it doesn't force you to use OOP, but it really doesn't look too interesting to me.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="erlang"&gt;
&lt;h2&gt;Erlang&lt;/h2&gt;
&lt;p&gt;Ah, now here's something new - a functional programming language! That's something I haven't used in a while. A nice framework with good documentation is here too - &lt;a class="reference external" href="https://github.com/ChicagoBoss/ChicagoBoss"&gt;ChicagoBoss&lt;/a&gt;. &lt;a class="reference external" href="https://www.quora.com/Why-choose-Erlang-for-web-development"&gt;Some posts I've read&lt;/a&gt; also say that it's really quick compared to Go/Node.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="so-what-do-i-do"&gt;
&lt;h2&gt;So, what do I do?&lt;/h2&gt;
&lt;p&gt;It's always quite hard to pick a new language for a general purpose that so many languages can fulfil. Usually, I'd pick a language that had a library that fit my requirements exactly. In the case of the above mentioned languages, I know very little about web development. So, I'm going to do what people that don't know much do - pick two arbitrarily! I think I'll start with Python/Flask to quickly get something working - it shouldn't take me more than a weekend. Then, once I have a working demo, I can look at replicating it in Erlang - learn a language quite different from the usual ones that I usually do?&lt;/p&gt;
&lt;p&gt;Sounds like a plan ;)&lt;/p&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="Fedora"></category><category term="Programming"></category><category term="Python"></category><category term="Erlang"></category><category term="Rust"></category><category term="Flask"></category><category term="RoR"></category><category term="Scala"></category></entry></feed>