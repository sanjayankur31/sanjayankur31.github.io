Week 23 update
##############
:date: 2024-06-11 11:24:46
:modified: 2024-06-11 11:24:46
:author: ankur
:category: Life
:tags: NeuroML, Open Source Brain, Computational Neuroscience, Fedora
:slug: week-23-update
:summary: Weekly update to week #23

Internet woes
===============

Our internet connection went down last week, and was supposed to by Tuesday.
They said it was an issue at the "exchange" and that they didn't need to access our home to fix it.
Get to Monday, and I get a call from the engineer at work saying it was issue with the local fibre cabinet and that they need to tinker with our connection to the router to figure out what had gone wrong.
So, I dropped everything and rushed home (as you do, if you want internet access at home).
It took them an hour or so, but they did manage to fix it.
So we're back online.

NeuroML related
=================

.. figure:: {static}/images/neuroml-logo.png
    :width: 40 %
    :align: center
    :alt: NeuroML is a standard and software ecosystem for biophysically detailed neuronal modelling.
    :class: text-center img-responsive pagination-centered

    NeuroML_ is a standard and software ecosystem for biophysically detailed neuronal modelling.



GSoC
-----

Work continues on this front.
Both Aditya and Ioannis already have pull requests open, so I've been reviewing them and providing feedback.
We're making sure we follow best practices right from the start---so doc strings, unit tests, type hints are all already in use.

I also added coverage information to our pyNeuroML_ CI.
It doesn't use a third party service like Coveralls/Codecov/Codespace at the moment.
It's a `combination of two GitHub actions <https://github.com/NeuroML/pyNeuroML/blob/development/.github/workflows/ci.yml#L56>`__---one summarises the coverage that we generate using pytest-cov, and the other comments on the pull request.
It works well enough.
The commenter action replaces to same comment each time too, so it doesn't spam the pull request with repeated comments.

This has pointed out that some of our code needs more testing, so we've put that on our agenda too now.


Model conversion
-----------------

I continued to work on converting the Purkinje cell model from `Zang et al <https://www.cell.com/cell-reports/fulltext/S2211-1247(18)31088-X>`__.
Using my test script, I've converted another couple of channels.
While converting the "Large conductance Ca2+ activated K+ channel" (`mslo.mod <https://github.com/sanjayankur31/243446/blob/feat/neuroml-conversion/NeuroML2/mod/mslo.mod>`__), I was reminded of this excellent features of LEMS_:

- LEMS is unit and dimension aware: one does not have to worry about units while writing equations, one can use whatever units one wishes and LEMS_ will convert them to the right multipliers depending on the dimensions.

So, for example, even if a model component provides the temperature value in degrees C, LEMS_ will convert this into Kelvin when it's being used somewhere.
Here's how it needs to be explicitly converted in the mod file:


.. code::

    alpha = exp(Qo*FARADAY*v/R/(273.15 + celsius))


Here's how the corresponding LEMS looks:


.. code:: xml

   <DerivedVariable name="alpha_beta" dimension="none" value="exp((Qo_Qc * Faraday * v/R) / EXP_TEMP_CELSIUS)"/>

(The variable names have been tweaked so that the same derived variable can also be used for other calculations that follow the same formalism)

Here are the plots for the kinetic state variables for the NEURON and NeuroML conversions for a simple protocol where we:

- create a simple single compartmental cell, with only a soma
- add the ion channel to it
- add the minimal biophysics
- use a "Calcium clamp" to set the intra- and extra-cellular calcium concentrations to some values for a part of the simulation

We then record all the states and plot them to see how our conversion went.
You'll see that they match almost exactly, which is always a good sign.

.. figure:: {static}/images/20240612143718_test_mslo_states_NEURON.png
    :width: 60 %
    :align: center
    :alt: Values of kinetic state variables from a test simulation of the original implementation in NEURON.
    :class: text-center img-responsive pagination-centered

    Values of kinetic state variables from a test simulation of the original implementation in NEURON.


.. figure:: {static}/images/20240612143718_test_kmslo_states_NML.png
    :width: 60 %
    :align: center
    :alt: Values of kinetic state variables from a test simulation of the NeuroML conversion.
    :class: text-center img-responsive pagination-centered

    Values of kinetic state variables from a test simulation of the NeuroML conversion.

There are two more channels left to convert.
These are of a third type---they use the `"GHK" (Goldman-Hodgkin-Katz) equation <https://en.wikipedia.org/wiki/Goldman%E2%80%93Hodgkin%E2%80%93Katz_flux_equation>`__.
I'll work on converting them next.
Then, we need to place these on the cell morphology to verify that the NEURON implementation and our standardised NeuroML_ implementation show the same dynamics.

Fedora related
===============

Fixes, updates, and bug filing continues in the `NeuroFedora SIG <https://neuro.fedoraproject.org>`__.
The internet chaos coincided with our NeuroSIG meeting time though, so I had to cancel that this week.
We will meet again in two weeks.

.. _NeuroML: https://neuroml.org
.. _pyNeuroML: https://github.com/NeuroML/pyNeuroML
.. _LEMS: https://docs.neuroml.org/Userdocs/LEMS.html
